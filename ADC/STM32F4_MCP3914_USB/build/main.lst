ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB147:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "usbd_cdc_if.h"
  26:Core/Src/main.c **** #include "MCP3914.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** #define BUFFER_SIZE 30  // Adjust the buffer size as needed
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** I2S_HandleTypeDef hi2s3;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** static MCP3914 adc;
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_DMA_Init(void);
  63:Core/Src/main.c **** static void MX_I2C1_Init(void);
  64:Core/Src/main.c **** static void MX_I2S3_Init(void);
  65:Core/Src/main.c **** static void MX_SPI1_Init(void);
  66:Core/Src/main.c **** static void MX_SPI2_Init(void);
  67:Core/Src/main.c **** static void MX_TIM1_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** char buffer[BUFFER_SIZE];  // Define a buffer to store the formatted ADC data
  70:Core/Src/main.c **** uint8_t buffer_index = 0;  // Index to keep track of the current position in the buffer
  71:Core/Src/main.c **** uint8_t raw[3];
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END 1 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 3


  89:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Core/Src/main.c ****   HAL_Init();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Configure the system clock */
  99:Core/Src/main.c ****   SystemClock_Config();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Initialize all configured peripherals */
 106:Core/Src/main.c ****   MX_GPIO_Init();
 107:Core/Src/main.c ****   MX_DMA_Init();
 108:Core/Src/main.c ****   MX_I2C1_Init();
 109:Core/Src/main.c ****   MX_I2S3_Init();
 110:Core/Src/main.c ****   MX_SPI1_Init();
 111:Core/Src/main.c ****   MX_SPI2_Init();
 112:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 113:Core/Src/main.c ****   MX_TIM1_Init();
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 115:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 116:Core/Src/main.c ****   MCP3914_Initialise(&adc, &hspi2, NCS_GPIO_Port, NCS_Pin);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   // ARRAY TO SET OSR TO 32 BY WRITING TO CONFIG0
 119:Core/Src/main.c ****   uint8_t osr32[3];
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   // Extract the individual bytes using bitwise operations
 122:Core/Src/main.c ****   osr32[0] = (MCP3914_OSR_64 >> 16) & 0xFF; // Most significant byte
 123:Core/Src/main.c ****   osr32[1] = (MCP3914_OSR_64 >> 8) & 0xFF;  // Middle byte
 124:Core/Src/main.c ****   osr32[2] = MCP3914_OSR_64 & 0xFF;         // Least significant byte
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   MCP3914_WriteRegister(&adc, MCP3914_REG_CONFIG0, osr32);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   // Function to transmit data over CDC
 129:Core/Src/main.c ****   void transmitData() {
 130:Core/Src/main.c ****       CDC_Transmit_FS(buffer, buffer_index);  // Transmit data stored in the buffer
 131:Core/Src/main.c ****       buffer_index = 0;  // Reset buffer index after transmission
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim1);
 135:Core/Src/main.c ****   uint16_t timer_val;
 136:Core/Src/main.c ****   uint32_t dataBuffer[100];
 137:Core/Src/main.c ****   uint32_t test;
 138:Core/Src/main.c ****   /* USER CODE END 2 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   while (1)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     // timer_val = __HAL_TIM_GET_COUNTER(&htim1);
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 4


 146:Core/Src/main.c ****     for (int i = 0; i < 100; i++) {
 147:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 148:Core/Src/main.c ****         // Combine adc.adcData into a single uint32_t
 149:Core/Src/main.c ****         uint32_t value = (adc.adcData[2] << 16) | (adc.adcData[1] << 8) | adc.adcData[0];
 150:Core/Src/main.c ****         dataBuffer[i] = value;
 151:Core/Src/main.c ****     }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     //MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 155:Core/Src/main.c ****     //test = adc.adcData;
 156:Core/Src/main.c ****     CDC_Transmit_FS(dataBuffer, sizeof(dataBuffer));
 157:Core/Src/main.c ****     
 158:Core/Src/main.c ****     
 159:Core/Src/main.c ****     // for(int i=0; i<99; i++)
 160:Core/Src/main.c ****     // {
 161:Core/Src/main.c ****     //   MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 162:Core/Src/main.c ****     //   CDC_Transmit_FS(adc.adcData, 3);
 163:Core/Src/main.c ****     //   //char buffer[3]; 
 164:Core/Src/main.c ****     //   //sprintf(buffer, "%02X%02X%02X\r\n",adc.adcData[0], adc.adcData[1], adc.adcData[2]);
 165:Core/Src/main.c ****     //   //CDC_Transmit_FS(buffer, strlen(buffer));
 166:Core/Src/main.c ****     // }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     // timer_val = __HAL_TIM_GET_COUNTER(&htim1) - timer_val;
 169:Core/Src/main.c ****     // char timer_buffer[20]; // Adjust buffer size as needed
 170:Core/Src/main.c ****     // sprintf(timer_buffer, "\r\n%lu\r\n", timer_val); // Assuming timer_val is of type uint32_t
 171:Core/Src/main.c ****     // HAL_Delay(1000);
 172:Core/Src/main.c ****     // CDC_Transmit_FS(timer_buffer, strlen(timer_buffer));
 173:Core/Src/main.c ****     //HAL_Delay(1000);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     //Your ADC reading and data formatting code
 176:Core/Src/main.c ****         // MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 177:Core/Src/main.c ****         // // Store the raw ADC data in the buffer
 178:Core/Src/main.c ****         // buffer[buffer_index++] = adc.adcData[0];
 179:Core/Src/main.c ****         // buffer[buffer_index++] = adc.adcData[1];
 180:Core/Src/main.c ****         // buffer[buffer_index++] = adc.adcData[2];
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****         // // Check if buffer is full and transmit data if needed
 183:Core/Src/main.c ****         // if (buffer_index >= BUFFER_SIZE) {
 184:Core/Src/main.c ****         //     transmitData();
 185:Core/Src/main.c ****         // }
 186:Core/Src/main.c ****    
 187:Core/Src/main.c ****     /* USER CODE END WHILE */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /* USER CODE END 3 */
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief System Clock Configuration
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void SystemClock_Config(void)
 199:Core/Src/main.c **** {
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 5


 203:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 209:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 219:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 227:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 228:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 229:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 230:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 241:Core/Src/main.c ****   * @param None
 242:Core/Src/main.c ****   * @retval None
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c **** static void MX_I2C1_Init(void)
 245:Core/Src/main.c **** {
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 254:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 255:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 256:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 257:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 258:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 259:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 6


 260:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 261:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 262:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 263:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief I2S3 Initialization Function
 275:Core/Src/main.c ****   * @param None
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** static void MX_I2S3_Init(void)
 279:Core/Src/main.c **** {
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END I2S3_Init 0 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END I2S3_Init 1 */
 288:Core/Src/main.c ****   hi2s3.Instance = SPI3;
 289:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 290:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 291:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 292:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 293:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 294:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 295:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 296:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 297:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END I2S3_Init 2 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /**
 308:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 309:Core/Src/main.c ****   * @param None
 310:Core/Src/main.c ****   * @retval None
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c **** static void MX_SPI1_Init(void)
 313:Core/Src/main.c **** {
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 7


 317:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 322:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 323:Core/Src/main.c ****   hspi1.Instance = SPI1;
 324:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 325:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 326:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 327:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 328:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 329:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 330:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 331:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 332:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 333:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 334:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 335:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /**
 346:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 347:Core/Src/main.c ****   * @param None
 348:Core/Src/main.c ****   * @retval None
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c **** static void MX_SPI2_Init(void)
 351:Core/Src/main.c **** {
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 360:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 361:Core/Src/main.c ****   hspi2.Instance = SPI2;
 362:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 363:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 364:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 365:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 366:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 367:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 368:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 369:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 370:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 371:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 372:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 373:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 8


 374:Core/Src/main.c ****   {
 375:Core/Src/main.c ****     Error_Handler();
 376:Core/Src/main.c ****   }
 377:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** }
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /**
 384:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 385:Core/Src/main.c ****   * @param None
 386:Core/Src/main.c ****   * @retval None
 387:Core/Src/main.c ****   */
 388:Core/Src/main.c **** static void MX_TIM1_Init(void)
 389:Core/Src/main.c **** {
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 396:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 401:Core/Src/main.c ****   htim1.Instance = TIM1;
 402:Core/Src/main.c ****   htim1.Init.Prescaler = 168-1;
 403:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 404:Core/Src/main.c ****   htim1.Init.Period = 65536-1;
 405:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 406:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 407:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 408:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 413:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     Error_Handler();
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 418:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 419:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 420:Core/Src/main.c ****   {
 421:Core/Src/main.c ****     Error_Handler();
 422:Core/Src/main.c ****   }
 423:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * Enable DMA controller clock
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 9


 431:Core/Src/main.c ****   */
 432:Core/Src/main.c **** static void MX_DMA_Init(void)
 433:Core/Src/main.c **** {
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* DMA controller clock enable */
 436:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* DMA interrupt init */
 439:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
 440:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 441:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** }
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /**
 446:Core/Src/main.c ****   * @brief GPIO Initialization Function
 447:Core/Src/main.c ****   * @param None
 448:Core/Src/main.c ****   * @retval None
 449:Core/Src/main.c ****   */
 450:Core/Src/main.c **** static void MX_GPIO_Init(void)
 451:Core/Src/main.c **** {
  28              		.loc 1 451 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8DB0     		sub	sp, sp, #52
  44              		.cfi_def_cfa_offset 88
 452:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 452 3 view .LVU1
  46              		.loc 1 452 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0794     		str	r4, [sp, #28]
  49 000a 0894     		str	r4, [sp, #32]
  50 000c 0994     		str	r4, [sp, #36]
  51 000e 0A94     		str	r4, [sp, #40]
  52 0010 0B94     		str	r4, [sp, #44]
 453:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 454:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 457:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  53              		.loc 1 457 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 457 3 view .LVU4
  56 0012 0194     		str	r4, [sp, #4]
  57              		.loc 1 457 3 view .LVU5
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 10


  58 0014 564B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
  60 0018 42F01002 		orr	r2, r2, #16
  61 001c 1A63     		str	r2, [r3, #48]
  62              		.loc 1 457 3 view .LVU6
  63 001e 1A6B     		ldr	r2, [r3, #48]
  64 0020 02F01002 		and	r2, r2, #16
  65 0024 0192     		str	r2, [sp, #4]
  66              		.loc 1 457 3 view .LVU7
  67 0026 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 457 3 view .LVU8
 458:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 458 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 458 3 view .LVU10
  73 0028 0294     		str	r4, [sp, #8]
  74              		.loc 1 458 3 view .LVU11
  75 002a 1A6B     		ldr	r2, [r3, #48]
  76 002c 42F00402 		orr	r2, r2, #4
  77 0030 1A63     		str	r2, [r3, #48]
  78              		.loc 1 458 3 view .LVU12
  79 0032 1A6B     		ldr	r2, [r3, #48]
  80 0034 02F00402 		and	r2, r2, #4
  81 0038 0292     		str	r2, [sp, #8]
  82              		.loc 1 458 3 view .LVU13
  83 003a 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 458 3 view .LVU14
 459:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 459 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 459 3 view .LVU16
  89 003c 0394     		str	r4, [sp, #12]
  90              		.loc 1 459 3 view .LVU17
  91 003e 1A6B     		ldr	r2, [r3, #48]
  92 0040 42F08002 		orr	r2, r2, #128
  93 0044 1A63     		str	r2, [r3, #48]
  94              		.loc 1 459 3 view .LVU18
  95 0046 1A6B     		ldr	r2, [r3, #48]
  96 0048 02F08002 		and	r2, r2, #128
  97 004c 0392     		str	r2, [sp, #12]
  98              		.loc 1 459 3 view .LVU19
  99 004e 039A     		ldr	r2, [sp, #12]
 100              	.LBE6:
 101              		.loc 1 459 3 view .LVU20
 460:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 102              		.loc 1 460 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 460 3 view .LVU22
 105 0050 0494     		str	r4, [sp, #16]
 106              		.loc 1 460 3 view .LVU23
 107 0052 1A6B     		ldr	r2, [r3, #48]
 108 0054 42F00102 		orr	r2, r2, #1
 109 0058 1A63     		str	r2, [r3, #48]
 110              		.loc 1 460 3 view .LVU24
 111 005a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 11


 112 005c 02F00102 		and	r2, r2, #1
 113 0060 0492     		str	r2, [sp, #16]
 114              		.loc 1 460 3 view .LVU25
 115 0062 049A     		ldr	r2, [sp, #16]
 116              	.LBE7:
 117              		.loc 1 460 3 view .LVU26
 461:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 118              		.loc 1 461 3 view .LVU27
 119              	.LBB8:
 120              		.loc 1 461 3 view .LVU28
 121 0064 0594     		str	r4, [sp, #20]
 122              		.loc 1 461 3 view .LVU29
 123 0066 1A6B     		ldr	r2, [r3, #48]
 124 0068 42F00202 		orr	r2, r2, #2
 125 006c 1A63     		str	r2, [r3, #48]
 126              		.loc 1 461 3 view .LVU30
 127 006e 1A6B     		ldr	r2, [r3, #48]
 128 0070 02F00202 		and	r2, r2, #2
 129 0074 0592     		str	r2, [sp, #20]
 130              		.loc 1 461 3 view .LVU31
 131 0076 059A     		ldr	r2, [sp, #20]
 132              	.LBE8:
 133              		.loc 1 461 3 view .LVU32
 462:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 134              		.loc 1 462 3 view .LVU33
 135              	.LBB9:
 136              		.loc 1 462 3 view .LVU34
 137 0078 0694     		str	r4, [sp, #24]
 138              		.loc 1 462 3 view .LVU35
 139 007a 1A6B     		ldr	r2, [r3, #48]
 140 007c 42F00802 		orr	r2, r2, #8
 141 0080 1A63     		str	r2, [r3, #48]
 142              		.loc 1 462 3 view .LVU36
 143 0082 1B6B     		ldr	r3, [r3, #48]
 144 0084 03F00803 		and	r3, r3, #8
 145 0088 0693     		str	r3, [sp, #24]
 146              		.loc 1 462 3 view .LVU37
 147 008a 069B     		ldr	r3, [sp, #24]
 148              	.LBE9:
 149              		.loc 1 462 3 view .LVU38
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 465:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 150              		.loc 1 465 3 view .LVU39
 151 008c 394E     		ldr	r6, .L3+4
 152 008e 2246     		mov	r2, r4
 153 0090 0821     		movs	r1, #8
 154 0092 3046     		mov	r0, r6
 155 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL0:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 468:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 157              		.loc 1 468 3 view .LVU40
 158 0098 DFF8E090 		ldr	r9, .L3+12
 159 009c 0122     		movs	r2, #1
 160 009e 1146     		mov	r1, r2
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 12


 161 00a0 4846     		mov	r0, r9
 162 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 163              	.LVL1:
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, NCS_Pin|LD4_Pin|LD3_Pin|LD5_Pin
 164              		.loc 1 471 3 view .LVU41
 165 00a6 DFF8D880 		ldr	r8, .L3+16
 166 00aa 2246     		mov	r2, r4
 167 00ac 4FF21011 		movw	r1, #61712
 168 00b0 4046     		mov	r0, r8
 169 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 170              	.LVL2:
 472:Core/Src/main.c ****                           |LD6_Pin|Audio_RST_Pin, GPIO_PIN_RESET);
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /*Configure GPIO pin : CS_I2C_SPI_Pin */
 475:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 171              		.loc 1 475 3 view .LVU42
 172              		.loc 1 475 23 is_stmt 0 view .LVU43
 173 00b6 0827     		movs	r7, #8
 174 00b8 0797     		str	r7, [sp, #28]
 476:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 175              		.loc 1 476 3 is_stmt 1 view .LVU44
 176              		.loc 1 476 24 is_stmt 0 view .LVU45
 177 00ba 0125     		movs	r5, #1
 178 00bc 0895     		str	r5, [sp, #32]
 477:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 179              		.loc 1 477 3 is_stmt 1 view .LVU46
 180              		.loc 1 477 24 is_stmt 0 view .LVU47
 181 00be 0994     		str	r4, [sp, #36]
 478:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 182              		.loc 1 478 3 is_stmt 1 view .LVU48
 183              		.loc 1 478 25 is_stmt 0 view .LVU49
 184 00c0 0A94     		str	r4, [sp, #40]
 479:Core/Src/main.c ****   HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 185              		.loc 1 479 3 is_stmt 1 view .LVU50
 186 00c2 07A9     		add	r1, sp, #28
 187 00c4 3046     		mov	r0, r6
 188 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL3:
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 482:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 190              		.loc 1 482 3 view .LVU51
 191              		.loc 1 482 23 is_stmt 0 view .LVU52
 192 00ca 0795     		str	r5, [sp, #28]
 483:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 193              		.loc 1 483 3 is_stmt 1 view .LVU53
 194              		.loc 1 483 24 is_stmt 0 view .LVU54
 195 00cc 0895     		str	r5, [sp, #32]
 484:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 196              		.loc 1 484 3 is_stmt 1 view .LVU55
 197              		.loc 1 484 24 is_stmt 0 view .LVU56
 198 00ce 0994     		str	r4, [sp, #36]
 485:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 199              		.loc 1 485 3 is_stmt 1 view .LVU57
 200              		.loc 1 485 25 is_stmt 0 view .LVU58
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 13


 201 00d0 0A94     		str	r4, [sp, #40]
 486:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 202              		.loc 1 486 3 is_stmt 1 view .LVU59
 203 00d2 07A9     		add	r1, sp, #28
 204 00d4 4846     		mov	r0, r9
 205 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 206              	.LVL4:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /*Configure GPIO pin : PDM_OUT_Pin */
 489:Core/Src/main.c ****   GPIO_InitStruct.Pin = PDM_OUT_Pin;
 207              		.loc 1 489 3 view .LVU60
 208              		.loc 1 489 23 is_stmt 0 view .LVU61
 209 00da 0797     		str	r7, [sp, #28]
 490:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 490 3 is_stmt 1 view .LVU62
 211              		.loc 1 490 24 is_stmt 0 view .LVU63
 212 00dc 0227     		movs	r7, #2
 213 00de 0897     		str	r7, [sp, #32]
 491:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 491 3 is_stmt 1 view .LVU64
 215              		.loc 1 491 24 is_stmt 0 view .LVU65
 216 00e0 0994     		str	r4, [sp, #36]
 492:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 217              		.loc 1 492 3 is_stmt 1 view .LVU66
 218              		.loc 1 492 25 is_stmt 0 view .LVU67
 219 00e2 0A94     		str	r4, [sp, #40]
 493:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 220              		.loc 1 493 3 is_stmt 1 view .LVU68
 221              		.loc 1 493 29 is_stmt 0 view .LVU69
 222 00e4 4FF0050A 		mov	r10, #5
 223 00e8 CDF82CA0 		str	r10, [sp, #44]
 494:Core/Src/main.c ****   HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 224              		.loc 1 494 3 is_stmt 1 view .LVU70
 225 00ec 07A9     		add	r1, sp, #28
 226 00ee 4846     		mov	r0, r9
 227 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL5:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 497:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 229              		.loc 1 497 3 view .LVU71
 230              		.loc 1 497 23 is_stmt 0 view .LVU72
 231 00f4 0795     		str	r5, [sp, #28]
 498:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 232              		.loc 1 498 3 is_stmt 1 view .LVU73
 233              		.loc 1 498 24 is_stmt 0 view .LVU74
 234 00f6 4FF49019 		mov	r9, #1179648
 235 00fa CDF82090 		str	r9, [sp, #32]
 499:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 499 3 is_stmt 1 view .LVU75
 237              		.loc 1 499 24 is_stmt 0 view .LVU76
 238 00fe 0994     		str	r4, [sp, #36]
 500:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 239              		.loc 1 500 3 is_stmt 1 view .LVU77
 240 0100 07A9     		add	r1, sp, #28
 241 0102 1D48     		ldr	r0, .L3+8
 242 0104 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 14


 243              	.LVL6:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /*Configure GPIO pin : BOOT1_Pin */
 503:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 244              		.loc 1 503 3 view .LVU78
 245              		.loc 1 503 23 is_stmt 0 view .LVU79
 246 0108 0423     		movs	r3, #4
 247 010a 0793     		str	r3, [sp, #28]
 504:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 248              		.loc 1 504 3 is_stmt 1 view .LVU80
 249              		.loc 1 504 24 is_stmt 0 view .LVU81
 250 010c 0894     		str	r4, [sp, #32]
 505:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 505 3 is_stmt 1 view .LVU82
 252              		.loc 1 505 24 is_stmt 0 view .LVU83
 253 010e 0994     		str	r4, [sp, #36]
 506:Core/Src/main.c ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 254              		.loc 1 506 3 is_stmt 1 view .LVU84
 255 0110 DFF870B0 		ldr	fp, .L3+20
 256 0114 07A9     		add	r1, sp, #28
 257 0116 5846     		mov	r0, fp
 258 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 259              	.LVL7:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /*Configure GPIO pin : CLK_IN_Pin */
 509:Core/Src/main.c ****   GPIO_InitStruct.Pin = CLK_IN_Pin;
 260              		.loc 1 509 3 view .LVU85
 261              		.loc 1 509 23 is_stmt 0 view .LVU86
 262 011c 4FF48063 		mov	r3, #1024
 263 0120 0793     		str	r3, [sp, #28]
 510:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 264              		.loc 1 510 3 is_stmt 1 view .LVU87
 265              		.loc 1 510 24 is_stmt 0 view .LVU88
 266 0122 0897     		str	r7, [sp, #32]
 511:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 267              		.loc 1 511 3 is_stmt 1 view .LVU89
 268              		.loc 1 511 24 is_stmt 0 view .LVU90
 269 0124 0994     		str	r4, [sp, #36]
 512:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 270              		.loc 1 512 3 is_stmt 1 view .LVU91
 271              		.loc 1 512 25 is_stmt 0 view .LVU92
 272 0126 0A94     		str	r4, [sp, #40]
 513:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 273              		.loc 1 513 3 is_stmt 1 view .LVU93
 274              		.loc 1 513 29 is_stmt 0 view .LVU94
 275 0128 CDF82CA0 		str	r10, [sp, #44]
 514:Core/Src/main.c ****   HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 276              		.loc 1 514 3 is_stmt 1 view .LVU95
 277 012c 07A9     		add	r1, sp, #28
 278 012e 5846     		mov	r0, fp
 279 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 280              	.LVL8:
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /*Configure GPIO pins : NCS_Pin LD4_Pin LD3_Pin LD5_Pin
 517:Core/Src/main.c ****                            LD6_Pin Audio_RST_Pin */
 518:Core/Src/main.c ****   GPIO_InitStruct.Pin = NCS_Pin|LD4_Pin|LD3_Pin|LD5_Pin
 281              		.loc 1 518 3 view .LVU96
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 15


 282              		.loc 1 518 23 is_stmt 0 view .LVU97
 283 0134 4FF21013 		movw	r3, #61712
 284 0138 0793     		str	r3, [sp, #28]
 519:Core/Src/main.c ****                           |LD6_Pin|Audio_RST_Pin;
 520:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 285              		.loc 1 520 3 is_stmt 1 view .LVU98
 286              		.loc 1 520 24 is_stmt 0 view .LVU99
 287 013a 0895     		str	r5, [sp, #32]
 521:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 288              		.loc 1 521 3 is_stmt 1 view .LVU100
 289              		.loc 1 521 24 is_stmt 0 view .LVU101
 290 013c 0994     		str	r4, [sp, #36]
 522:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 291              		.loc 1 522 3 is_stmt 1 view .LVU102
 292              		.loc 1 522 25 is_stmt 0 view .LVU103
 293 013e 0A94     		str	r4, [sp, #40]
 523:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 294              		.loc 1 523 3 is_stmt 1 view .LVU104
 295 0140 07A9     		add	r1, sp, #28
 296 0142 4046     		mov	r0, r8
 297 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 298              	.LVL9:
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 526:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 299              		.loc 1 526 3 view .LVU105
 300              		.loc 1 526 23 is_stmt 0 view .LVU106
 301 0148 2023     		movs	r3, #32
 302 014a 0793     		str	r3, [sp, #28]
 527:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 303              		.loc 1 527 3 is_stmt 1 view .LVU107
 304              		.loc 1 527 24 is_stmt 0 view .LVU108
 305 014c 0894     		str	r4, [sp, #32]
 528:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 306              		.loc 1 528 3 is_stmt 1 view .LVU109
 307              		.loc 1 528 24 is_stmt 0 view .LVU110
 308 014e 0994     		str	r4, [sp, #36]
 529:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 309              		.loc 1 529 3 is_stmt 1 view .LVU111
 310 0150 07A9     		add	r1, sp, #28
 311 0152 4046     		mov	r0, r8
 312 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 313              	.LVL10:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /*Configure GPIO pin : MEMS_INT2_Pin */
 532:Core/Src/main.c ****   GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 314              		.loc 1 532 3 view .LVU112
 315              		.loc 1 532 23 is_stmt 0 view .LVU113
 316 0158 0797     		str	r7, [sp, #28]
 533:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 317              		.loc 1 533 3 is_stmt 1 view .LVU114
 318              		.loc 1 533 24 is_stmt 0 view .LVU115
 319 015a CDF82090 		str	r9, [sp, #32]
 534:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 320              		.loc 1 534 3 is_stmt 1 view .LVU116
 321              		.loc 1 534 24 is_stmt 0 view .LVU117
 322 015e 0994     		str	r4, [sp, #36]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 16


 535:Core/Src/main.c ****   HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 535 3 is_stmt 1 view .LVU118
 324 0160 07A9     		add	r1, sp, #28
 325 0162 3046     		mov	r0, r6
 326 0164 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL11:
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 538:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 539:Core/Src/main.c **** }
 328              		.loc 1 539 1 is_stmt 0 view .LVU119
 329 0168 0DB0     		add	sp, sp, #52
 330              		.cfi_def_cfa_offset 36
 331              		@ sp needed
 332 016a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 333              	.L4:
 334 016e 00BF     		.align	2
 335              	.L3:
 336 0170 00380240 		.word	1073887232
 337 0174 00100240 		.word	1073876992
 338 0178 00000240 		.word	1073872896
 339 017c 00080240 		.word	1073874944
 340 0180 000C0240 		.word	1073875968
 341 0184 00040240 		.word	1073873920
 342              		.cfi_endproc
 343              	.LFE147:
 345              		.section	.text.MX_DMA_Init,"ax",%progbits
 346              		.align	1
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 351              	MX_DMA_Init:
 352              	.LFB146:
 433:Core/Src/main.c **** 
 353              		.loc 1 433 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 00B5     		push	{lr}
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 14, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              		.cfi_def_cfa_offset 16
 436:Core/Src/main.c **** 
 362              		.loc 1 436 3 view .LVU121
 363              	.LBB10:
 436:Core/Src/main.c **** 
 364              		.loc 1 436 3 view .LVU122
 365 0004 0021     		movs	r1, #0
 366 0006 0191     		str	r1, [sp, #4]
 436:Core/Src/main.c **** 
 367              		.loc 1 436 3 view .LVU123
 368 0008 094B     		ldr	r3, .L7
 369 000a 1A6B     		ldr	r2, [r3, #48]
 370 000c 42F40012 		orr	r2, r2, #2097152
 371 0010 1A63     		str	r2, [r3, #48]
 436:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 17


 372              		.loc 1 436 3 view .LVU124
 373 0012 1B6B     		ldr	r3, [r3, #48]
 374 0014 03F40013 		and	r3, r3, #2097152
 375 0018 0193     		str	r3, [sp, #4]
 436:Core/Src/main.c **** 
 376              		.loc 1 436 3 view .LVU125
 377 001a 019B     		ldr	r3, [sp, #4]
 378              	.LBE10:
 436:Core/Src/main.c **** 
 379              		.loc 1 436 3 view .LVU126
 440:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 380              		.loc 1 440 3 view .LVU127
 381 001c 0A46     		mov	r2, r1
 382 001e 0E20     		movs	r0, #14
 383 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 384              	.LVL12:
 441:Core/Src/main.c **** 
 385              		.loc 1 441 3 view .LVU128
 386 0024 0E20     		movs	r0, #14
 387 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 388              	.LVL13:
 443:Core/Src/main.c **** 
 389              		.loc 1 443 1 is_stmt 0 view .LVU129
 390 002a 03B0     		add	sp, sp, #12
 391              		.cfi_def_cfa_offset 4
 392              		@ sp needed
 393 002c 5DF804FB 		ldr	pc, [sp], #4
 394              	.L8:
 395              		.align	2
 396              	.L7:
 397 0030 00380240 		.word	1073887232
 398              		.cfi_endproc
 399              	.LFE146:
 401              		.section	.text.Error_Handler,"ax",%progbits
 402              		.align	1
 403              		.global	Error_Handler
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	Error_Handler:
 409              	.LFB148:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 542:Core/Src/main.c **** /* USER CODE END 4 */
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** /**
 545:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 546:Core/Src/main.c ****   * @retval None
 547:Core/Src/main.c ****   */
 548:Core/Src/main.c **** void Error_Handler(void)
 549:Core/Src/main.c **** {
 410              		.loc 1 549 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ Volatile: function does not return.
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 18


 550:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 551:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 552:Core/Src/main.c ****   __disable_irq();
 416              		.loc 1 552 3 view .LVU131
 417              	.LBB11:
 418              	.LBI11:
 419              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 19


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 20


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 21


 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 22


 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 23


 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 24


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 25


 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 26


 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 27


 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 28


 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 29


 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 30


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 31


 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 32


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 33


 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 34


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 420              		.loc 2 960 27 view .LVU132
 421              	.LBB12:
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 35


 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 422              		.loc 2 962 3 view .LVU133
 423              		.syntax unified
 424              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 425 0000 72B6     		cpsid i
 426              	@ 0 "" 2
 427              		.thumb
 428              		.syntax unified
 429              	.L10:
 430              	.LBE12:
 431              	.LBE11:
 553:Core/Src/main.c ****   while (1)
 432              		.loc 1 553 3 view .LVU134
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****   }
 433              		.loc 1 555 3 view .LVU135
 553:Core/Src/main.c ****   while (1)
 434              		.loc 1 553 9 view .LVU136
 435 0002 FEE7     		b	.L10
 436              		.cfi_endproc
 437              	.LFE148:
 439              		.section	.text.MX_I2C1_Init,"ax",%progbits
 440              		.align	1
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 445              	MX_I2C1_Init:
 446              	.LFB141:
 245:Core/Src/main.c **** 
 447              		.loc 1 245 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 08B5     		push	{r3, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 254:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 455              		.loc 1 254 3 view .LVU138
 254:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 456              		.loc 1 254 18 is_stmt 0 view .LVU139
 457 0002 0A48     		ldr	r0, .L15
 458 0004 0A4B     		ldr	r3, .L15+4
 459 0006 0360     		str	r3, [r0]
 255:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 460              		.loc 1 255 3 is_stmt 1 view .LVU140
 255:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 461              		.loc 1 255 25 is_stmt 0 view .LVU141
 462 0008 0A4B     		ldr	r3, .L15+8
 463 000a 4360     		str	r3, [r0, #4]
 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 464              		.loc 1 256 3 is_stmt 1 view .LVU142
 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 465              		.loc 1 256 24 is_stmt 0 view .LVU143
 466 000c 0023     		movs	r3, #0
 467 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 36


 257:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 468              		.loc 1 257 3 is_stmt 1 view .LVU144
 257:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 469              		.loc 1 257 26 is_stmt 0 view .LVU145
 470 0010 C360     		str	r3, [r0, #12]
 258:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 471              		.loc 1 258 3 is_stmt 1 view .LVU146
 258:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 472              		.loc 1 258 29 is_stmt 0 view .LVU147
 473 0012 4FF48042 		mov	r2, #16384
 474 0016 0261     		str	r2, [r0, #16]
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 475              		.loc 1 259 3 is_stmt 1 view .LVU148
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 476              		.loc 1 259 30 is_stmt 0 view .LVU149
 477 0018 4361     		str	r3, [r0, #20]
 260:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 478              		.loc 1 260 3 is_stmt 1 view .LVU150
 260:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 479              		.loc 1 260 26 is_stmt 0 view .LVU151
 480 001a 8361     		str	r3, [r0, #24]
 261:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 481              		.loc 1 261 3 is_stmt 1 view .LVU152
 261:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 482              		.loc 1 261 30 is_stmt 0 view .LVU153
 483 001c C361     		str	r3, [r0, #28]
 262:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 484              		.loc 1 262 3 is_stmt 1 view .LVU154
 262:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 485              		.loc 1 262 28 is_stmt 0 view .LVU155
 486 001e 0362     		str	r3, [r0, #32]
 263:Core/Src/main.c ****   {
 487              		.loc 1 263 3 is_stmt 1 view .LVU156
 263:Core/Src/main.c ****   {
 488              		.loc 1 263 7 is_stmt 0 view .LVU157
 489 0020 FFF7FEFF 		bl	HAL_I2C_Init
 490              	.LVL14:
 263:Core/Src/main.c ****   {
 491              		.loc 1 263 6 discriminator 1 view .LVU158
 492 0024 00B9     		cbnz	r0, .L14
 271:Core/Src/main.c **** 
 493              		.loc 1 271 1 view .LVU159
 494 0026 08BD     		pop	{r3, pc}
 495              	.L14:
 265:Core/Src/main.c ****   }
 496              		.loc 1 265 5 is_stmt 1 view .LVU160
 497 0028 FFF7FEFF 		bl	Error_Handler
 498              	.LVL15:
 499              	.L16:
 500              		.align	2
 501              	.L15:
 502 002c 00000000 		.word	hi2c1
 503 0030 00540040 		.word	1073763328
 504 0034 A0860100 		.word	100000
 505              		.cfi_endproc
 506              	.LFE141:
 508              		.section	.text.MX_I2S3_Init,"ax",%progbits
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 37


 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	MX_I2S3_Init:
 515              	.LFB142:
 279:Core/Src/main.c **** 
 516              		.loc 1 279 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 08B5     		push	{r3, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 3, -8
 523              		.cfi_offset 14, -4
 288:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 524              		.loc 1 288 3 view .LVU162
 288:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 525              		.loc 1 288 18 is_stmt 0 view .LVU163
 526 0002 0A48     		ldr	r0, .L21
 527 0004 0A4B     		ldr	r3, .L21+4
 528 0006 0360     		str	r3, [r0]
 289:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 529              		.loc 1 289 3 is_stmt 1 view .LVU164
 289:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 530              		.loc 1 289 19 is_stmt 0 view .LVU165
 531 0008 4FF40072 		mov	r2, #512
 532 000c 4260     		str	r2, [r0, #4]
 290:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 533              		.loc 1 290 3 is_stmt 1 view .LVU166
 290:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 534              		.loc 1 290 23 is_stmt 0 view .LVU167
 535 000e 0023     		movs	r3, #0
 536 0010 8360     		str	r3, [r0, #8]
 291:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 537              		.loc 1 291 3 is_stmt 1 view .LVU168
 291:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 538              		.loc 1 291 25 is_stmt 0 view .LVU169
 539 0012 C360     		str	r3, [r0, #12]
 292:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 540              		.loc 1 292 3 is_stmt 1 view .LVU170
 292:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 541              		.loc 1 292 25 is_stmt 0 view .LVU171
 542 0014 0261     		str	r2, [r0, #16]
 293:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 543              		.loc 1 293 3 is_stmt 1 view .LVU172
 293:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 544              		.loc 1 293 24 is_stmt 0 view .LVU173
 545 0016 074A     		ldr	r2, .L21+8
 546 0018 4261     		str	r2, [r0, #20]
 294:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 547              		.loc 1 294 3 is_stmt 1 view .LVU174
 294:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 548              		.loc 1 294 19 is_stmt 0 view .LVU175
 549 001a 8361     		str	r3, [r0, #24]
 295:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 550              		.loc 1 295 3 is_stmt 1 view .LVU176
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 38


 295:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 551              		.loc 1 295 26 is_stmt 0 view .LVU177
 552 001c C361     		str	r3, [r0, #28]
 296:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 553              		.loc 1 296 3 is_stmt 1 view .LVU178
 296:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 554              		.loc 1 296 29 is_stmt 0 view .LVU179
 555 001e 0362     		str	r3, [r0, #32]
 297:Core/Src/main.c ****   {
 556              		.loc 1 297 3 is_stmt 1 view .LVU180
 297:Core/Src/main.c ****   {
 557              		.loc 1 297 7 is_stmt 0 view .LVU181
 558 0020 FFF7FEFF 		bl	HAL_I2S_Init
 559              	.LVL16:
 297:Core/Src/main.c ****   {
 560              		.loc 1 297 6 discriminator 1 view .LVU182
 561 0024 00B9     		cbnz	r0, .L20
 305:Core/Src/main.c **** 
 562              		.loc 1 305 1 view .LVU183
 563 0026 08BD     		pop	{r3, pc}
 564              	.L20:
 299:Core/Src/main.c ****   }
 565              		.loc 1 299 5 is_stmt 1 view .LVU184
 566 0028 FFF7FEFF 		bl	Error_Handler
 567              	.LVL17:
 568              	.L22:
 569              		.align	2
 570              	.L21:
 571 002c 00000000 		.word	hi2s3
 572 0030 003C0040 		.word	1073757184
 573 0034 00770100 		.word	96000
 574              		.cfi_endproc
 575              	.LFE142:
 577              		.section	.text.MX_SPI1_Init,"ax",%progbits
 578              		.align	1
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 583              	MX_SPI1_Init:
 584              	.LFB143:
 313:Core/Src/main.c **** 
 585              		.loc 1 313 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 323:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 593              		.loc 1 323 3 view .LVU186
 323:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 594              		.loc 1 323 18 is_stmt 0 view .LVU187
 595 0002 0D48     		ldr	r0, .L27
 596 0004 0D4B     		ldr	r3, .L27+4
 597 0006 0360     		str	r3, [r0]
 324:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 39


 598              		.loc 1 324 3 is_stmt 1 view .LVU188
 324:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 599              		.loc 1 324 19 is_stmt 0 view .LVU189
 600 0008 4FF48273 		mov	r3, #260
 601 000c 4360     		str	r3, [r0, #4]
 325:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 602              		.loc 1 325 3 is_stmt 1 view .LVU190
 325:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 603              		.loc 1 325 24 is_stmt 0 view .LVU191
 604 000e 0023     		movs	r3, #0
 605 0010 8360     		str	r3, [r0, #8]
 326:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 606              		.loc 1 326 3 is_stmt 1 view .LVU192
 326:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 607              		.loc 1 326 23 is_stmt 0 view .LVU193
 608 0012 C360     		str	r3, [r0, #12]
 327:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 609              		.loc 1 327 3 is_stmt 1 view .LVU194
 327:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 610              		.loc 1 327 26 is_stmt 0 view .LVU195
 611 0014 0361     		str	r3, [r0, #16]
 328:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 612              		.loc 1 328 3 is_stmt 1 view .LVU196
 328:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 613              		.loc 1 328 23 is_stmt 0 view .LVU197
 614 0016 4361     		str	r3, [r0, #20]
 329:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 615              		.loc 1 329 3 is_stmt 1 view .LVU198
 329:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 616              		.loc 1 329 18 is_stmt 0 view .LVU199
 617 0018 4FF40072 		mov	r2, #512
 618 001c 8261     		str	r2, [r0, #24]
 330:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 619              		.loc 1 330 3 is_stmt 1 view .LVU200
 330:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 620              		.loc 1 330 32 is_stmt 0 view .LVU201
 621 001e C361     		str	r3, [r0, #28]
 331:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 622              		.loc 1 331 3 is_stmt 1 view .LVU202
 331:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 623              		.loc 1 331 23 is_stmt 0 view .LVU203
 624 0020 0362     		str	r3, [r0, #32]
 332:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 625              		.loc 1 332 3 is_stmt 1 view .LVU204
 332:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 626              		.loc 1 332 21 is_stmt 0 view .LVU205
 627 0022 4362     		str	r3, [r0, #36]
 333:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 628              		.loc 1 333 3 is_stmt 1 view .LVU206
 333:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 629              		.loc 1 333 29 is_stmt 0 view .LVU207
 630 0024 8362     		str	r3, [r0, #40]
 334:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 631              		.loc 1 334 3 is_stmt 1 view .LVU208
 334:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 632              		.loc 1 334 28 is_stmt 0 view .LVU209
 633 0026 0A23     		movs	r3, #10
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 40


 634 0028 C362     		str	r3, [r0, #44]
 335:Core/Src/main.c ****   {
 635              		.loc 1 335 3 is_stmt 1 view .LVU210
 335:Core/Src/main.c ****   {
 636              		.loc 1 335 7 is_stmt 0 view .LVU211
 637 002a FFF7FEFF 		bl	HAL_SPI_Init
 638              	.LVL18:
 335:Core/Src/main.c ****   {
 639              		.loc 1 335 6 discriminator 1 view .LVU212
 640 002e 00B9     		cbnz	r0, .L26
 343:Core/Src/main.c **** 
 641              		.loc 1 343 1 view .LVU213
 642 0030 08BD     		pop	{r3, pc}
 643              	.L26:
 337:Core/Src/main.c ****   }
 644              		.loc 1 337 5 is_stmt 1 view .LVU214
 645 0032 FFF7FEFF 		bl	Error_Handler
 646              	.LVL19:
 647              	.L28:
 648 0036 00BF     		.align	2
 649              	.L27:
 650 0038 00000000 		.word	hspi1
 651 003c 00300140 		.word	1073819648
 652              		.cfi_endproc
 653              	.LFE143:
 655              		.section	.text.MX_SPI2_Init,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	MX_SPI2_Init:
 662              	.LFB144:
 351:Core/Src/main.c **** 
 663              		.loc 1 351 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667 0000 08B5     		push	{r3, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
 670              		.cfi_offset 14, -4
 361:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 671              		.loc 1 361 3 view .LVU216
 361:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 672              		.loc 1 361 18 is_stmt 0 view .LVU217
 673 0002 0D48     		ldr	r0, .L33
 674 0004 0D4B     		ldr	r3, .L33+4
 675 0006 0360     		str	r3, [r0]
 362:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 676              		.loc 1 362 3 is_stmt 1 view .LVU218
 362:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 677              		.loc 1 362 19 is_stmt 0 view .LVU219
 678 0008 4FF48273 		mov	r3, #260
 679 000c 4360     		str	r3, [r0, #4]
 363:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 680              		.loc 1 363 3 is_stmt 1 view .LVU220
 363:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 41


 681              		.loc 1 363 24 is_stmt 0 view .LVU221
 682 000e 0023     		movs	r3, #0
 683 0010 8360     		str	r3, [r0, #8]
 364:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 684              		.loc 1 364 3 is_stmt 1 view .LVU222
 364:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 685              		.loc 1 364 23 is_stmt 0 view .LVU223
 686 0012 C360     		str	r3, [r0, #12]
 365:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 687              		.loc 1 365 3 is_stmt 1 view .LVU224
 365:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 688              		.loc 1 365 26 is_stmt 0 view .LVU225
 689 0014 0361     		str	r3, [r0, #16]
 366:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 690              		.loc 1 366 3 is_stmt 1 view .LVU226
 366:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 691              		.loc 1 366 23 is_stmt 0 view .LVU227
 692 0016 4361     		str	r3, [r0, #20]
 367:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 693              		.loc 1 367 3 is_stmt 1 view .LVU228
 367:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 694              		.loc 1 367 18 is_stmt 0 view .LVU229
 695 0018 4FF40072 		mov	r2, #512
 696 001c 8261     		str	r2, [r0, #24]
 368:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 697              		.loc 1 368 3 is_stmt 1 view .LVU230
 368:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 698              		.loc 1 368 32 is_stmt 0 view .LVU231
 699 001e C361     		str	r3, [r0, #28]
 369:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 700              		.loc 1 369 3 is_stmt 1 view .LVU232
 369:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 701              		.loc 1 369 23 is_stmt 0 view .LVU233
 702 0020 0362     		str	r3, [r0, #32]
 370:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 703              		.loc 1 370 3 is_stmt 1 view .LVU234
 370:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 704              		.loc 1 370 21 is_stmt 0 view .LVU235
 705 0022 4362     		str	r3, [r0, #36]
 371:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 706              		.loc 1 371 3 is_stmt 1 view .LVU236
 371:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 707              		.loc 1 371 29 is_stmt 0 view .LVU237
 708 0024 8362     		str	r3, [r0, #40]
 372:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 709              		.loc 1 372 3 is_stmt 1 view .LVU238
 372:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 710              		.loc 1 372 28 is_stmt 0 view .LVU239
 711 0026 0A23     		movs	r3, #10
 712 0028 C362     		str	r3, [r0, #44]
 373:Core/Src/main.c ****   {
 713              		.loc 1 373 3 is_stmt 1 view .LVU240
 373:Core/Src/main.c ****   {
 714              		.loc 1 373 7 is_stmt 0 view .LVU241
 715 002a FFF7FEFF 		bl	HAL_SPI_Init
 716              	.LVL20:
 373:Core/Src/main.c ****   {
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 42


 717              		.loc 1 373 6 discriminator 1 view .LVU242
 718 002e 00B9     		cbnz	r0, .L32
 381:Core/Src/main.c **** 
 719              		.loc 1 381 1 view .LVU243
 720 0030 08BD     		pop	{r3, pc}
 721              	.L32:
 375:Core/Src/main.c ****   }
 722              		.loc 1 375 5 is_stmt 1 view .LVU244
 723 0032 FFF7FEFF 		bl	Error_Handler
 724              	.LVL21:
 725              	.L34:
 726 0036 00BF     		.align	2
 727              	.L33:
 728 0038 00000000 		.word	hspi2
 729 003c 00380040 		.word	1073756160
 730              		.cfi_endproc
 731              	.LFE144:
 733              		.section	.text.MX_TIM1_Init,"ax",%progbits
 734              		.align	1
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	MX_TIM1_Init:
 740              	.LFB145:
 389:Core/Src/main.c **** 
 741              		.loc 1 389 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 24
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745 0000 00B5     		push	{lr}
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 14, -4
 748 0002 87B0     		sub	sp, sp, #28
 749              		.cfi_def_cfa_offset 32
 395:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 750              		.loc 1 395 3 view .LVU246
 395:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 751              		.loc 1 395 26 is_stmt 0 view .LVU247
 752 0004 0023     		movs	r3, #0
 753 0006 0293     		str	r3, [sp, #8]
 754 0008 0393     		str	r3, [sp, #12]
 755 000a 0493     		str	r3, [sp, #16]
 756 000c 0593     		str	r3, [sp, #20]
 396:Core/Src/main.c **** 
 757              		.loc 1 396 3 is_stmt 1 view .LVU248
 396:Core/Src/main.c **** 
 758              		.loc 1 396 27 is_stmt 0 view .LVU249
 759 000e 0093     		str	r3, [sp]
 760 0010 0193     		str	r3, [sp, #4]
 401:Core/Src/main.c ****   htim1.Init.Prescaler = 168-1;
 761              		.loc 1 401 3 is_stmt 1 view .LVU250
 401:Core/Src/main.c ****   htim1.Init.Prescaler = 168-1;
 762              		.loc 1 401 18 is_stmt 0 view .LVU251
 763 0012 1448     		ldr	r0, .L43
 764 0014 144A     		ldr	r2, .L43+4
 765 0016 0260     		str	r2, [r0]
 402:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 43


 766              		.loc 1 402 3 is_stmt 1 view .LVU252
 402:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 767              		.loc 1 402 24 is_stmt 0 view .LVU253
 768 0018 A722     		movs	r2, #167
 769 001a 4260     		str	r2, [r0, #4]
 403:Core/Src/main.c ****   htim1.Init.Period = 65536-1;
 770              		.loc 1 403 3 is_stmt 1 view .LVU254
 403:Core/Src/main.c ****   htim1.Init.Period = 65536-1;
 771              		.loc 1 403 26 is_stmt 0 view .LVU255
 772 001c 8360     		str	r3, [r0, #8]
 404:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 773              		.loc 1 404 3 is_stmt 1 view .LVU256
 404:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 774              		.loc 1 404 21 is_stmt 0 view .LVU257
 775 001e 4FF6FF72 		movw	r2, #65535
 776 0022 C260     		str	r2, [r0, #12]
 405:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 777              		.loc 1 405 3 is_stmt 1 view .LVU258
 405:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 778              		.loc 1 405 28 is_stmt 0 view .LVU259
 779 0024 0361     		str	r3, [r0, #16]
 406:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 780              		.loc 1 406 3 is_stmt 1 view .LVU260
 406:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 781              		.loc 1 406 32 is_stmt 0 view .LVU261
 782 0026 4361     		str	r3, [r0, #20]
 407:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 783              		.loc 1 407 3 is_stmt 1 view .LVU262
 407:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 784              		.loc 1 407 32 is_stmt 0 view .LVU263
 785 0028 8361     		str	r3, [r0, #24]
 408:Core/Src/main.c ****   {
 786              		.loc 1 408 3 is_stmt 1 view .LVU264
 408:Core/Src/main.c ****   {
 787              		.loc 1 408 7 is_stmt 0 view .LVU265
 788 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 789              	.LVL22:
 408:Core/Src/main.c ****   {
 790              		.loc 1 408 6 discriminator 1 view .LVU266
 791 002e 90B9     		cbnz	r0, .L40
 412:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 792              		.loc 1 412 3 is_stmt 1 view .LVU267
 412:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 793              		.loc 1 412 34 is_stmt 0 view .LVU268
 794 0030 4FF48053 		mov	r3, #4096
 795 0034 0293     		str	r3, [sp, #8]
 413:Core/Src/main.c ****   {
 796              		.loc 1 413 3 is_stmt 1 view .LVU269
 413:Core/Src/main.c ****   {
 797              		.loc 1 413 7 is_stmt 0 view .LVU270
 798 0036 02A9     		add	r1, sp, #8
 799 0038 0A48     		ldr	r0, .L43
 800 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 801              	.LVL23:
 413:Core/Src/main.c ****   {
 802              		.loc 1 413 6 discriminator 1 view .LVU271
 803 003e 60B9     		cbnz	r0, .L41
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 44


 417:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 804              		.loc 1 417 3 is_stmt 1 view .LVU272
 417:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 805              		.loc 1 417 37 is_stmt 0 view .LVU273
 806 0040 0023     		movs	r3, #0
 807 0042 0093     		str	r3, [sp]
 418:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 808              		.loc 1 418 3 is_stmt 1 view .LVU274
 418:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 809              		.loc 1 418 33 is_stmt 0 view .LVU275
 810 0044 0193     		str	r3, [sp, #4]
 419:Core/Src/main.c ****   {
 811              		.loc 1 419 3 is_stmt 1 view .LVU276
 419:Core/Src/main.c ****   {
 812              		.loc 1 419 7 is_stmt 0 view .LVU277
 813 0046 6946     		mov	r1, sp
 814 0048 0648     		ldr	r0, .L43
 815 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 816              	.LVL24:
 419:Core/Src/main.c ****   {
 817              		.loc 1 419 6 discriminator 1 view .LVU278
 818 004e 30B9     		cbnz	r0, .L42
 427:Core/Src/main.c **** 
 819              		.loc 1 427 1 view .LVU279
 820 0050 07B0     		add	sp, sp, #28
 821              		.cfi_remember_state
 822              		.cfi_def_cfa_offset 4
 823              		@ sp needed
 824 0052 5DF804FB 		ldr	pc, [sp], #4
 825              	.L40:
 826              		.cfi_restore_state
 410:Core/Src/main.c ****   }
 827              		.loc 1 410 5 is_stmt 1 view .LVU280
 828 0056 FFF7FEFF 		bl	Error_Handler
 829              	.LVL25:
 830              	.L41:
 415:Core/Src/main.c ****   }
 831              		.loc 1 415 5 view .LVU281
 832 005a FFF7FEFF 		bl	Error_Handler
 833              	.LVL26:
 834              	.L42:
 421:Core/Src/main.c ****   }
 835              		.loc 1 421 5 view .LVU282
 836 005e FFF7FEFF 		bl	Error_Handler
 837              	.LVL27:
 838              	.L44:
 839 0062 00BF     		.align	2
 840              	.L43:
 841 0064 00000000 		.word	htim1
 842 0068 00000140 		.word	1073807360
 843              		.cfi_endproc
 844              	.LFE145:
 846              		.section	.text.SystemClock_Config,"ax",%progbits
 847              		.align	1
 848              		.global	SystemClock_Config
 849              		.syntax unified
 850              		.thumb
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 45


 851              		.thumb_func
 853              	SystemClock_Config:
 854              	.LFB140:
 199:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 855              		.loc 1 199 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 80
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 00B5     		push	{lr}
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 14, -4
 862 0002 95B0     		sub	sp, sp, #84
 863              		.cfi_def_cfa_offset 88
 200:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 864              		.loc 1 200 3 view .LVU284
 200:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 865              		.loc 1 200 22 is_stmt 0 view .LVU285
 866 0004 3022     		movs	r2, #48
 867 0006 0021     		movs	r1, #0
 868 0008 08A8     		add	r0, sp, #32
 869 000a FFF7FEFF 		bl	memset
 870              	.LVL28:
 201:Core/Src/main.c **** 
 871              		.loc 1 201 3 is_stmt 1 view .LVU286
 201:Core/Src/main.c **** 
 872              		.loc 1 201 22 is_stmt 0 view .LVU287
 873 000e 0023     		movs	r3, #0
 874 0010 0393     		str	r3, [sp, #12]
 875 0012 0493     		str	r3, [sp, #16]
 876 0014 0593     		str	r3, [sp, #20]
 877 0016 0693     		str	r3, [sp, #24]
 878 0018 0793     		str	r3, [sp, #28]
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 879              		.loc 1 205 3 is_stmt 1 view .LVU288
 880              	.LBB13:
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 881              		.loc 1 205 3 view .LVU289
 882 001a 0193     		str	r3, [sp, #4]
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 883              		.loc 1 205 3 view .LVU290
 884 001c 214A     		ldr	r2, .L51
 885 001e 116C     		ldr	r1, [r2, #64]
 886 0020 41F08051 		orr	r1, r1, #268435456
 887 0024 1164     		str	r1, [r2, #64]
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 888              		.loc 1 205 3 view .LVU291
 889 0026 126C     		ldr	r2, [r2, #64]
 890 0028 02F08052 		and	r2, r2, #268435456
 891 002c 0192     		str	r2, [sp, #4]
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 892              		.loc 1 205 3 view .LVU292
 893 002e 019A     		ldr	r2, [sp, #4]
 894              	.LBE13:
 205:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 895              		.loc 1 205 3 view .LVU293
 206:Core/Src/main.c **** 
 896              		.loc 1 206 3 view .LVU294
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 46


 897              	.LBB14:
 206:Core/Src/main.c **** 
 898              		.loc 1 206 3 view .LVU295
 899 0030 0293     		str	r3, [sp, #8]
 206:Core/Src/main.c **** 
 900              		.loc 1 206 3 view .LVU296
 901 0032 1D4B     		ldr	r3, .L51+4
 902 0034 1A68     		ldr	r2, [r3]
 903 0036 42F48042 		orr	r2, r2, #16384
 904 003a 1A60     		str	r2, [r3]
 206:Core/Src/main.c **** 
 905              		.loc 1 206 3 view .LVU297
 906 003c 1B68     		ldr	r3, [r3]
 907 003e 03F48043 		and	r3, r3, #16384
 908 0042 0293     		str	r3, [sp, #8]
 206:Core/Src/main.c **** 
 909              		.loc 1 206 3 view .LVU298
 910 0044 029B     		ldr	r3, [sp, #8]
 911              	.LBE14:
 206:Core/Src/main.c **** 
 912              		.loc 1 206 3 view .LVU299
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 913              		.loc 1 211 3 view .LVU300
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 914              		.loc 1 211 36 is_stmt 0 view .LVU301
 915 0046 0123     		movs	r3, #1
 916 0048 0893     		str	r3, [sp, #32]
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 917              		.loc 1 212 3 is_stmt 1 view .LVU302
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 918              		.loc 1 212 30 is_stmt 0 view .LVU303
 919 004a 4FF48033 		mov	r3, #65536
 920 004e 0993     		str	r3, [sp, #36]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 921              		.loc 1 213 3 is_stmt 1 view .LVU304
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 922              		.loc 1 213 34 is_stmt 0 view .LVU305
 923 0050 0223     		movs	r3, #2
 924 0052 0E93     		str	r3, [sp, #56]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 925              		.loc 1 214 3 is_stmt 1 view .LVU306
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 926              		.loc 1 214 35 is_stmt 0 view .LVU307
 927 0054 4FF48002 		mov	r2, #4194304
 928 0058 0F92     		str	r2, [sp, #60]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 929              		.loc 1 215 3 is_stmt 1 view .LVU308
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 930              		.loc 1 215 30 is_stmt 0 view .LVU309
 931 005a 0822     		movs	r2, #8
 932 005c 1092     		str	r2, [sp, #64]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 933              		.loc 1 216 3 is_stmt 1 view .LVU310
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 934              		.loc 1 216 30 is_stmt 0 view .LVU311
 935 005e 4FF4A872 		mov	r2, #336
 936 0062 1192     		str	r2, [sp, #68]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 47


 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 937              		.loc 1 217 3 is_stmt 1 view .LVU312
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 938              		.loc 1 217 30 is_stmt 0 view .LVU313
 939 0064 1293     		str	r3, [sp, #72]
 218:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 940              		.loc 1 218 3 is_stmt 1 view .LVU314
 218:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 941              		.loc 1 218 30 is_stmt 0 view .LVU315
 942 0066 0723     		movs	r3, #7
 943 0068 1393     		str	r3, [sp, #76]
 219:Core/Src/main.c ****   {
 944              		.loc 1 219 3 is_stmt 1 view .LVU316
 219:Core/Src/main.c ****   {
 945              		.loc 1 219 7 is_stmt 0 view .LVU317
 946 006a 08A8     		add	r0, sp, #32
 947 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 948              	.LVL29:
 219:Core/Src/main.c ****   {
 949              		.loc 1 219 6 discriminator 1 view .LVU318
 950 0070 98B9     		cbnz	r0, .L49
 226:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 951              		.loc 1 226 3 is_stmt 1 view .LVU319
 226:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 952              		.loc 1 226 31 is_stmt 0 view .LVU320
 953 0072 0F23     		movs	r3, #15
 954 0074 0393     		str	r3, [sp, #12]
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 955              		.loc 1 228 3 is_stmt 1 view .LVU321
 228:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 956              		.loc 1 228 34 is_stmt 0 view .LVU322
 957 0076 0223     		movs	r3, #2
 958 0078 0493     		str	r3, [sp, #16]
 229:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 959              		.loc 1 229 3 is_stmt 1 view .LVU323
 229:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 960              		.loc 1 229 35 is_stmt 0 view .LVU324
 961 007a 0023     		movs	r3, #0
 962 007c 0593     		str	r3, [sp, #20]
 230:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 963              		.loc 1 230 3 is_stmt 1 view .LVU325
 230:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 964              		.loc 1 230 36 is_stmt 0 view .LVU326
 965 007e 4FF4A053 		mov	r3, #5120
 966 0082 0693     		str	r3, [sp, #24]
 231:Core/Src/main.c **** 
 967              		.loc 1 231 3 is_stmt 1 view .LVU327
 231:Core/Src/main.c **** 
 968              		.loc 1 231 36 is_stmt 0 view .LVU328
 969 0084 4FF48053 		mov	r3, #4096
 970 0088 0793     		str	r3, [sp, #28]
 233:Core/Src/main.c ****   {
 971              		.loc 1 233 3 is_stmt 1 view .LVU329
 233:Core/Src/main.c ****   {
 972              		.loc 1 233 7 is_stmt 0 view .LVU330
 973 008a 0521     		movs	r1, #5
 974 008c 03A8     		add	r0, sp, #12
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 48


 975 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 976              	.LVL30:
 233:Core/Src/main.c ****   {
 977              		.loc 1 233 6 discriminator 1 view .LVU331
 978 0092 20B9     		cbnz	r0, .L50
 237:Core/Src/main.c **** 
 979              		.loc 1 237 1 view .LVU332
 980 0094 15B0     		add	sp, sp, #84
 981              		.cfi_remember_state
 982              		.cfi_def_cfa_offset 4
 983              		@ sp needed
 984 0096 5DF804FB 		ldr	pc, [sp], #4
 985              	.L49:
 986              		.cfi_restore_state
 221:Core/Src/main.c ****   }
 987              		.loc 1 221 5 is_stmt 1 view .LVU333
 988 009a FFF7FEFF 		bl	Error_Handler
 989              	.LVL31:
 990              	.L50:
 235:Core/Src/main.c ****   }
 991              		.loc 1 235 5 view .LVU334
 992 009e FFF7FEFF 		bl	Error_Handler
 993              	.LVL32:
 994              	.L52:
 995 00a2 00BF     		.align	2
 996              	.L51:
 997 00a4 00380240 		.word	1073887232
 998 00a8 00700040 		.word	1073770496
 999              		.cfi_endproc
 1000              	.LFE140:
 1002              		.section	.text.main,"ax",%progbits
 1003              		.align	1
 1004              		.global	main
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1009              	main:
 1010              	.LFB138:
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1011              		.loc 1 84 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 408
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015 0000 30B5     		push	{r4, r5, lr}
 1016              		.cfi_def_cfa_offset 12
 1017              		.cfi_offset 4, -12
 1018              		.cfi_offset 5, -8
 1019              		.cfi_offset 14, -4
 1020 0002 E7B0     		sub	sp, sp, #412
 1021              		.cfi_def_cfa_offset 424
  92:Core/Src/main.c **** 
 1022              		.loc 1 92 3 view .LVU336
 1023 0004 FFF7FEFF 		bl	HAL_Init
 1024              	.LVL33:
  99:Core/Src/main.c **** 
 1025              		.loc 1 99 3 view .LVU337
 1026 0008 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 49


 1027              	.LVL34:
 106:Core/Src/main.c ****   MX_DMA_Init();
 1028              		.loc 1 106 3 view .LVU338
 1029 000c FFF7FEFF 		bl	MX_GPIO_Init
 1030              	.LVL35:
 107:Core/Src/main.c ****   MX_I2C1_Init();
 1031              		.loc 1 107 3 view .LVU339
 1032 0010 FFF7FEFF 		bl	MX_DMA_Init
 1033              	.LVL36:
 108:Core/Src/main.c ****   MX_I2S3_Init();
 1034              		.loc 1 108 3 view .LVU340
 1035 0014 FFF7FEFF 		bl	MX_I2C1_Init
 1036              	.LVL37:
 109:Core/Src/main.c ****   MX_SPI1_Init();
 1037              		.loc 1 109 3 view .LVU341
 1038 0018 FFF7FEFF 		bl	MX_I2S3_Init
 1039              	.LVL38:
 110:Core/Src/main.c ****   MX_SPI2_Init();
 1040              		.loc 1 110 3 view .LVU342
 1041 001c FFF7FEFF 		bl	MX_SPI1_Init
 1042              	.LVL39:
 111:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 1043              		.loc 1 111 3 view .LVU343
 1044 0020 FFF7FEFF 		bl	MX_SPI2_Init
 1045              	.LVL40:
 112:Core/Src/main.c ****   MX_TIM1_Init();
 1046              		.loc 1 112 3 view .LVU344
 1047 0024 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1048              	.LVL41:
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1049              		.loc 1 113 3 view .LVU345
 1050 0028 FFF7FEFF 		bl	MX_TIM1_Init
 1051              	.LVL42:
 115:Core/Src/main.c ****   MCP3914_Initialise(&adc, &hspi2, NCS_GPIO_Port, NCS_Pin);
 1052              		.loc 1 115 3 view .LVU346
 1053 002c 1B4C     		ldr	r4, .L58
 1054 002e 2046     		mov	r0, r4
 1055 0030 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1056              	.LVL43:
 116:Core/Src/main.c **** 
 1057              		.loc 1 116 3 view .LVU347
 1058 0034 1A4D     		ldr	r5, .L58+4
 1059 0036 4FF48073 		mov	r3, #256
 1060 003a 1A4A     		ldr	r2, .L58+8
 1061 003c 1A49     		ldr	r1, .L58+12
 1062 003e 2846     		mov	r0, r5
 1063 0040 FFF7FEFF 		bl	MCP3914_Initialise
 1064              	.LVL44:
 119:Core/Src/main.c **** 
 1065              		.loc 1 119 3 view .LVU348
 122:Core/Src/main.c ****   osr32[1] = (MCP3914_OSR_64 >> 8) & 0xFF;  // Middle byte
 1066              		.loc 1 122 3 view .LVU349
 122:Core/Src/main.c ****   osr32[1] = (MCP3914_OSR_64 >> 8) & 0xFF;  // Middle byte
 1067              		.loc 1 122 12 is_stmt 0 view .LVU350
 1068 0044 3823     		movs	r3, #56
 1069 0046 8DF89431 		strb	r3, [sp, #404]
 123:Core/Src/main.c ****   osr32[2] = MCP3914_OSR_64 & 0xFF;         // Least significant byte
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 50


 1070              		.loc 1 123 3 is_stmt 1 view .LVU351
 123:Core/Src/main.c ****   osr32[2] = MCP3914_OSR_64 & 0xFF;         // Least significant byte
 1071              		.loc 1 123 12 is_stmt 0 view .LVU352
 1072 004a 2023     		movs	r3, #32
 1073 004c 8DF89531 		strb	r3, [sp, #405]
 124:Core/Src/main.c **** 
 1074              		.loc 1 124 3 is_stmt 1 view .LVU353
 124:Core/Src/main.c **** 
 1075              		.loc 1 124 12 is_stmt 0 view .LVU354
 1076 0050 5023     		movs	r3, #80
 1077 0052 8DF89631 		strb	r3, [sp, #406]
 126:Core/Src/main.c **** 
 1078              		.loc 1 126 3 is_stmt 1 view .LVU355
 1079 0056 65AA     		add	r2, sp, #404
 1080 0058 0D21     		movs	r1, #13
 1081 005a 2846     		mov	r0, r5
 1082 005c FFF7FEFF 		bl	MCP3914_WriteRegister
 1083              	.LVL45:
 129:Core/Src/main.c ****       CDC_Transmit_FS(buffer, buffer_index);  // Transmit data stored in the buffer
 1084              		.loc 1 129 3 view .LVU356
 134:Core/Src/main.c ****   uint16_t timer_val;
 1085              		.loc 1 134 3 view .LVU357
 1086 0060 2046     		mov	r0, r4
 1087 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1088              	.LVL46:
 1089 0066 16E0     		b	.L56
 1090              	.LVL47:
 1091              	.L55:
 1092              	.LBB15:
 1093              	.LBB16:
 147:Core/Src/main.c ****         // Combine adc.adcData into a single uint32_t
 1094              		.loc 1 147 9 view .LVU358
 1095 0068 0D4C     		ldr	r4, .L58+4
 1096 006a 0121     		movs	r1, #1
 1097 006c 2046     		mov	r0, r4
 1098 006e FFF7FEFF 		bl	MCP3914_ReadRegister
 1099              	.LVL48:
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1100              		.loc 1 149 9 view .LVU359
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1101              		.loc 1 149 38 is_stmt 0 view .LVU360
 1102 0072 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1103              		.loc 1 149 63 view .LVU361
 1104 0074 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1105              		.loc 1 149 67 view .LVU362
 1106 0076 1B02     		lsls	r3, r3, #8
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1107              		.loc 1 149 49 view .LVU363
 1108 0078 43EA0243 		orr	r3, r3, r2, lsl #16
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1109              		.loc 1 149 86 view .LVU364
 1110 007c A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 149:Core/Src/main.c ****         dataBuffer[i] = value;
 1111              		.loc 1 149 73 view .LVU365
 1112 007e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 51


 1113              	.LVL49:
 150:Core/Src/main.c ****     }
 1114              		.loc 1 150 9 is_stmt 1 view .LVU366
 150:Core/Src/main.c ****     }
 1115              		.loc 1 150 23 is_stmt 0 view .LVU367
 1116 0080 01AA     		add	r2, sp, #4
 1117 0082 42F82530 		str	r3, [r2, r5, lsl #2]
 1118              	.LBE16:
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1119              		.loc 1 146 31 is_stmt 1 discriminator 3 view .LVU368
 1120 0086 0135     		adds	r5, r5, #1
 1121              	.LVL50:
 1122              	.L54:
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1123              		.loc 1 146 23 discriminator 1 view .LVU369
 1124 0088 632D     		cmp	r5, #99
 1125 008a EDDD     		ble	.L55
 1126              	.LBE15:
 156:Core/Src/main.c ****     
 1127              		.loc 1 156 5 view .LVU370
 1128 008c 4FF4C871 		mov	r1, #400
 1129 0090 01A8     		add	r0, sp, #4
 1130 0092 FFF7FEFF 		bl	CDC_Transmit_FS
 1131              	.LVL51:
 142:Core/Src/main.c ****   {
 1132              		.loc 1 142 9 view .LVU371
 1133              	.L56:
 135:Core/Src/main.c ****   uint32_t dataBuffer[100];
 1134              		.loc 1 135 3 view .LVU372
 136:Core/Src/main.c ****   uint32_t test;
 1135              		.loc 1 136 3 view .LVU373
 137:Core/Src/main.c ****   /* USER CODE END 2 */
 1136              		.loc 1 137 3 view .LVU374
 142:Core/Src/main.c ****   {
 1137              		.loc 1 142 3 view .LVU375
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1138              		.loc 1 146 5 view .LVU376
 1139              	.LBB17:
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1140              		.loc 1 146 10 view .LVU377
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1141              		.loc 1 146 14 is_stmt 0 view .LVU378
 1142 0096 0025     		movs	r5, #0
 146:Core/Src/main.c ****         MCP3914_ReadRegister(&adc, MCP3914_REG_CHANNEL_1);
 1143              		.loc 1 146 5 view .LVU379
 1144 0098 F6E7     		b	.L54
 1145              	.L59:
 1146 009a 00BF     		.align	2
 1147              	.L58:
 1148 009c 00000000 		.word	htim1
 1149 00a0 00000000 		.word	adc
 1150 00a4 000C0240 		.word	1073875968
 1151 00a8 00000000 		.word	hspi2
 1152              	.LBE17:
 1153              		.cfi_endproc
 1154              	.LFE138:
 1156              		.global	raw
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 52


 1157              		.section	.bss.raw,"aw",%nobits
 1158              		.align	2
 1161              	raw:
 1162 0000 000000   		.space	3
 1163              		.global	buffer_index
 1164              		.section	.bss.buffer_index,"aw",%nobits
 1167              	buffer_index:
 1168 0000 00       		.space	1
 1169              		.global	buffer
 1170              		.section	.bss.buffer,"aw",%nobits
 1171              		.align	2
 1174              	buffer:
 1175 0000 00000000 		.space	30
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1176              		.section	.bss.adc,"aw",%nobits
 1177              		.align	2
 1180              	adc:
 1181 0000 00000000 		.space	16
 1181      00000000 
 1181      00000000 
 1181      00000000 
 1182              		.global	htim1
 1183              		.section	.bss.htim1,"aw",%nobits
 1184              		.align	2
 1187              	htim1:
 1188 0000 00000000 		.space	72
 1188      00000000 
 1188      00000000 
 1188      00000000 
 1188      00000000 
 1189              		.global	hdma_spi2_rx
 1190              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 1191              		.align	2
 1194              	hdma_spi2_rx:
 1195 0000 00000000 		.space	96
 1195      00000000 
 1195      00000000 
 1195      00000000 
 1195      00000000 
 1196              		.global	hspi2
 1197              		.section	.bss.hspi2,"aw",%nobits
 1198              		.align	2
 1201              	hspi2:
 1202 0000 00000000 		.space	88
 1202      00000000 
 1202      00000000 
 1202      00000000 
 1202      00000000 
 1203              		.global	hspi1
 1204              		.section	.bss.hspi1,"aw",%nobits
 1205              		.align	2
 1208              	hspi1:
 1209 0000 00000000 		.space	88
 1209      00000000 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 53


 1209      00000000 
 1209      00000000 
 1209      00000000 
 1210              		.global	hi2s3
 1211              		.section	.bss.hi2s3,"aw",%nobits
 1212              		.align	2
 1215              	hi2s3:
 1216 0000 00000000 		.space	72
 1216      00000000 
 1216      00000000 
 1216      00000000 
 1216      00000000 
 1217              		.global	hi2c1
 1218              		.section	.bss.hi2c1,"aw",%nobits
 1219              		.align	2
 1222              	hi2c1:
 1223 0000 00000000 		.space	84
 1223      00000000 
 1223      00000000 
 1223      00000000 
 1223      00000000 
 1224              		.text
 1225              	.Letext0:
 1226              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1227              		.file 4 "C:/Users/gamin/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1228              		.file 5 "C:/Users/gamin/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1229              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1230              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1231              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1232              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1233              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1234              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1235              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 1236              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1237              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1238              		.file 15 "Core/Inc/MCP3914.h"
 1239              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1240              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1241              		.file 18 "USB_DEVICE/App/usbd_cdc_if.h"
 1242              		.file 19 "USB_DEVICE/App/usb_device.h"
 1243              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1244              		.file 21 "<built-in>"
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:336    .text.MX_GPIO_Init:00000170 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:346    .text.MX_DMA_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:351    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:397    .text.MX_DMA_Init:00000030 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:402    .text.Error_Handler:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:408    .text.Error_Handler:00000000 Error_Handler
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:440    .text.MX_I2C1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:445    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:502    .text.MX_I2C1_Init:0000002c $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1222   .bss.hi2c1:00000000 hi2c1
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:509    .text.MX_I2S3_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:514    .text.MX_I2S3_Init:00000000 MX_I2S3_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:571    .text.MX_I2S3_Init:0000002c $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1215   .bss.hi2s3:00000000 hi2s3
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:578    .text.MX_SPI1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:583    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:650    .text.MX_SPI1_Init:00000038 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1208   .bss.hspi1:00000000 hspi1
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:656    .text.MX_SPI2_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:661    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:728    .text.MX_SPI2_Init:00000038 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1201   .bss.hspi2:00000000 hspi2
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:734    .text.MX_TIM1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:739    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:841    .text.MX_TIM1_Init:00000064 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1187   .bss.htim1:00000000 htim1
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:847    .text.SystemClock_Config:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:853    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:997    .text.SystemClock_Config:000000a4 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1003   .text.main:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1009   .text.main:00000000 main
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1148   .text.main:0000009c $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1180   .bss.adc:00000000 adc
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1161   .bss.raw:00000000 raw
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1158   .bss.raw:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1167   .bss.buffer_index:00000000 buffer_index
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1168   .bss.buffer_index:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1174   .bss.buffer:00000000 buffer
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1171   .bss.buffer:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1177   .bss.adc:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1184   .bss.htim1:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1194   .bss.hdma_spi2_rx:00000000 hdma_spi2_rx
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1191   .bss.hdma_spi2_rx:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1198   .bss.hspi2:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1205   .bss.hspi1:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1212   .bss.hi2s3:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s:1219   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccjMqkdZ.s 			page 55


HAL_I2C_Init
HAL_I2S_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_Base_Start_IT
MCP3914_Initialise
MCP3914_WriteRegister
HAL_TIM_Base_Start
MCP3914_ReadRegister
CDC_Transmit_FS
