ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB250:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "usbd_cdc_if.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** #define DMABUFLEN 2048
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** uint16_t dmaBuffer[DMABUFLEN];
  55:Core/Src/main.c **** uint8_t dataReady = 0;
  56:Core/Src/main.c **** uint8_t dataHalfReady = 0;
  57:Core/Src/main.c **** uint16_t *bufPointer;
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_DMA_Init(void);
  64:Core/Src/main.c **** static void MX_ADC1_Init(void);
  65:Core/Src/main.c **** static void MX_I2C1_Init(void);
  66:Core/Src/main.c **** static void MX_SPI1_Init(void);
  67:Core/Src/main.c **** static void MX_TIM2_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 3


  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****   HAL_Init();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_DMA_Init();
 106:Core/Src/main.c ****   MX_ADC1_Init();
 107:Core/Src/main.c ****   MX_I2C1_Init();
 108:Core/Src/main.c ****   MX_SPI1_Init();
 109:Core/Src/main.c ****   MX_TIM2_Init();
 110:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 113:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)dmaBuffer, DMABUFLEN);
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     // if (dataHalfReady == 1)
 123:Core/Src/main.c ****     // {
 124:Core/Src/main.c ****     //   // CDC_Transmit_FS(dmaBuffer, 1024);
 125:Core/Src/main.c ****     //   // HAL_Delay(1000);
 126:Core/Src/main.c ****     //   // dataHalfReady = 0;
 127:Core/Src/main.c ****     // }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     if (dataReady == 1)
 131:Core/Src/main.c ****     {
 132:Core/Src/main.c ****       CDC_Transmit_FS((uint8_t *)bufPointer, 2048);
 133:Core/Src/main.c ****       dataReady = 0;
 134:Core/Src/main.c ****     }
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 4


 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 154:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 157:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 175:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 189:Core/Src/main.c ****   * @param None
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** static void MX_ADC1_Init(void)
 193:Core/Src/main.c **** {
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   hadc1.Instance = ADC1;
 208:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 209:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 210:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 211:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 212:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 213:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING;
 214:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 215:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 216:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 217:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 218:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 219:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 227:Core/Src/main.c ****   sConfig.Rank = 1;
 228:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 229:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 241:Core/Src/main.c ****   * @param None
 242:Core/Src/main.c ****   * @retval None
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c **** static void MX_I2C1_Init(void)
 245:Core/Src/main.c **** {
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 254:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 255:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 256:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 257:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 258:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 259:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 6


 260:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 261:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 262:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 263:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 275:Core/Src/main.c ****   * @param None
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** static void MX_SPI1_Init(void)
 279:Core/Src/main.c **** {
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 288:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 289:Core/Src/main.c ****   hspi1.Instance = SPI1;
 290:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 291:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 292:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 293:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 294:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 295:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 296:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 297:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 298:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 299:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 300:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 301:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** }
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /**
 312:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 313:Core/Src/main.c ****   * @param None
 314:Core/Src/main.c ****   * @retval None
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c **** static void MX_TIM2_Init(void)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 7


 317:Core/Src/main.c **** {
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 324:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 325:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 330:Core/Src/main.c ****   htim2.Instance = TIM2;
 331:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 332:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 333:Core/Src/main.c ****   htim2.Init.Period = 700-1;
 334:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 335:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 336:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 341:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     Error_Handler();
 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 350:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 351:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 352:Core/Src/main.c ****   {
 353:Core/Src/main.c ****     Error_Handler();
 354:Core/Src/main.c ****   }
 355:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 356:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 357:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 358:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 366:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * Enable DMA controller clock
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_DMA_Init(void)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 8


 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* DMA controller clock enable */
 377:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* DMA interrupt init */
 380:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 381:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 382:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** }
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /**
 387:Core/Src/main.c ****   * @brief GPIO Initialization Function
 388:Core/Src/main.c ****   * @param None
 389:Core/Src/main.c ****   * @retval None
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c **** static void MX_GPIO_Init(void)
 392:Core/Src/main.c **** {
  28              		.loc 1 392 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8DB0     		sub	sp, sp, #52
  44              		.cfi_def_cfa_offset 88
 393:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 393 3 view .LVU1
  46              		.loc 1 393 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0794     		str	r4, [sp, #28]
  49 000a 0894     		str	r4, [sp, #32]
  50 000c 0994     		str	r4, [sp, #36]
  51 000e 0A94     		str	r4, [sp, #40]
  52 0010 0B94     		str	r4, [sp, #44]
 394:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 395:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 398:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  53              		.loc 1 398 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 398 3 view .LVU4
  56 0012 0194     		str	r4, [sp, #4]
  57              		.loc 1 398 3 view .LVU5
  58 0014 614B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 9


  60 0018 42F01002 		orr	r2, r2, #16
  61 001c 1A63     		str	r2, [r3, #48]
  62              		.loc 1 398 3 view .LVU6
  63 001e 1A6B     		ldr	r2, [r3, #48]
  64 0020 02F01002 		and	r2, r2, #16
  65 0024 0192     		str	r2, [sp, #4]
  66              		.loc 1 398 3 view .LVU7
  67 0026 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 398 3 view .LVU8
 399:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 399 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 399 3 view .LVU10
  73 0028 0294     		str	r4, [sp, #8]
  74              		.loc 1 399 3 view .LVU11
  75 002a 1A6B     		ldr	r2, [r3, #48]
  76 002c 42F00402 		orr	r2, r2, #4
  77 0030 1A63     		str	r2, [r3, #48]
  78              		.loc 1 399 3 view .LVU12
  79 0032 1A6B     		ldr	r2, [r3, #48]
  80 0034 02F00402 		and	r2, r2, #4
  81 0038 0292     		str	r2, [sp, #8]
  82              		.loc 1 399 3 view .LVU13
  83 003a 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 399 3 view .LVU14
 400:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 400 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 400 3 view .LVU16
  89 003c 0394     		str	r4, [sp, #12]
  90              		.loc 1 400 3 view .LVU17
  91 003e 1A6B     		ldr	r2, [r3, #48]
  92 0040 42F08002 		orr	r2, r2, #128
  93 0044 1A63     		str	r2, [r3, #48]
  94              		.loc 1 400 3 view .LVU18
  95 0046 1A6B     		ldr	r2, [r3, #48]
  96 0048 02F08002 		and	r2, r2, #128
  97 004c 0392     		str	r2, [sp, #12]
  98              		.loc 1 400 3 view .LVU19
  99 004e 039A     		ldr	r2, [sp, #12]
 100              	.LBE6:
 101              		.loc 1 400 3 view .LVU20
 401:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 102              		.loc 1 401 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 401 3 view .LVU22
 105 0050 0494     		str	r4, [sp, #16]
 106              		.loc 1 401 3 view .LVU23
 107 0052 1A6B     		ldr	r2, [r3, #48]
 108 0054 42F00102 		orr	r2, r2, #1
 109 0058 1A63     		str	r2, [r3, #48]
 110              		.loc 1 401 3 view .LVU24
 111 005a 1A6B     		ldr	r2, [r3, #48]
 112 005c 02F00102 		and	r2, r2, #1
 113 0060 0492     		str	r2, [sp, #16]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 10


 114              		.loc 1 401 3 view .LVU25
 115 0062 049A     		ldr	r2, [sp, #16]
 116              	.LBE7:
 117              		.loc 1 401 3 view .LVU26
 402:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 118              		.loc 1 402 3 view .LVU27
 119              	.LBB8:
 120              		.loc 1 402 3 view .LVU28
 121 0064 0594     		str	r4, [sp, #20]
 122              		.loc 1 402 3 view .LVU29
 123 0066 1A6B     		ldr	r2, [r3, #48]
 124 0068 42F00202 		orr	r2, r2, #2
 125 006c 1A63     		str	r2, [r3, #48]
 126              		.loc 1 402 3 view .LVU30
 127 006e 1A6B     		ldr	r2, [r3, #48]
 128 0070 02F00202 		and	r2, r2, #2
 129 0074 0592     		str	r2, [sp, #20]
 130              		.loc 1 402 3 view .LVU31
 131 0076 059A     		ldr	r2, [sp, #20]
 132              	.LBE8:
 133              		.loc 1 402 3 view .LVU32
 403:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 134              		.loc 1 403 3 view .LVU33
 135              	.LBB9:
 136              		.loc 1 403 3 view .LVU34
 137 0078 0694     		str	r4, [sp, #24]
 138              		.loc 1 403 3 view .LVU35
 139 007a 1A6B     		ldr	r2, [r3, #48]
 140 007c 42F00802 		orr	r2, r2, #8
 141 0080 1A63     		str	r2, [r3, #48]
 142              		.loc 1 403 3 view .LVU36
 143 0082 1B6B     		ldr	r3, [r3, #48]
 144 0084 03F00803 		and	r3, r3, #8
 145 0088 0693     		str	r3, [sp, #24]
 146              		.loc 1 403 3 view .LVU37
 147 008a 069B     		ldr	r3, [sp, #24]
 148              	.LBE9:
 149              		.loc 1 403 3 view .LVU38
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 406:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 150              		.loc 1 406 3 view .LVU39
 151 008c DFF81C81 		ldr	r8, .L3+16
 152 0090 2246     		mov	r2, r4
 153 0092 0821     		movs	r1, #8
 154 0094 4046     		mov	r0, r8
 155 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL0:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 409:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 157              		.loc 1 409 3 view .LVU40
 158 009a 414F     		ldr	r7, .L3+4
 159 009c 0122     		movs	r2, #1
 160 009e 1146     		mov	r1, r2
 161 00a0 3846     		mov	r0, r7
 162 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 11


 163              	.LVL1:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 412:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 164              		.loc 1 412 3 view .LVU41
 165 00a6 DFF80891 		ldr	r9, .L3+20
 166 00aa 2246     		mov	r2, r4
 167 00ac 4FF21001 		movw	r1, #61456
 168 00b0 4846     		mov	r0, r9
 169 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 170              	.LVL2:
 413:Core/Src/main.c ****                           |Audio_RST_Pin, GPIO_PIN_RESET);
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /*Configure GPIO pin : CS_I2C_SPI_Pin */
 416:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 171              		.loc 1 416 3 view .LVU42
 172              		.loc 1 416 23 is_stmt 0 view .LVU43
 173 00b6 0825     		movs	r5, #8
 174 00b8 0795     		str	r5, [sp, #28]
 417:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 175              		.loc 1 417 3 is_stmt 1 view .LVU44
 176              		.loc 1 417 24 is_stmt 0 view .LVU45
 177 00ba 0126     		movs	r6, #1
 178 00bc 0896     		str	r6, [sp, #32]
 418:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 179              		.loc 1 418 3 is_stmt 1 view .LVU46
 180              		.loc 1 418 24 is_stmt 0 view .LVU47
 181 00be 0994     		str	r4, [sp, #36]
 419:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 182              		.loc 1 419 3 is_stmt 1 view .LVU48
 183              		.loc 1 419 25 is_stmt 0 view .LVU49
 184 00c0 0A94     		str	r4, [sp, #40]
 420:Core/Src/main.c ****   HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 185              		.loc 1 420 3 is_stmt 1 view .LVU50
 186 00c2 07A9     		add	r1, sp, #28
 187 00c4 4046     		mov	r0, r8
 188 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL3:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 423:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 190              		.loc 1 423 3 view .LVU51
 191              		.loc 1 423 23 is_stmt 0 view .LVU52
 192 00ca 0796     		str	r6, [sp, #28]
 424:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 193              		.loc 1 424 3 is_stmt 1 view .LVU53
 194              		.loc 1 424 24 is_stmt 0 view .LVU54
 195 00cc 0896     		str	r6, [sp, #32]
 425:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 196              		.loc 1 425 3 is_stmt 1 view .LVU55
 197              		.loc 1 425 24 is_stmt 0 view .LVU56
 198 00ce 0994     		str	r4, [sp, #36]
 426:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 199              		.loc 1 426 3 is_stmt 1 view .LVU57
 200              		.loc 1 426 25 is_stmt 0 view .LVU58
 201 00d0 0A94     		str	r4, [sp, #40]
 427:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 12


 202              		.loc 1 427 3 is_stmt 1 view .LVU59
 203 00d2 07A9     		add	r1, sp, #28
 204 00d4 3846     		mov	r0, r7
 205 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 206              	.LVL4:
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /*Configure GPIO pin : PDM_OUT_Pin */
 430:Core/Src/main.c ****   GPIO_InitStruct.Pin = PDM_OUT_Pin;
 207              		.loc 1 430 3 view .LVU60
 208              		.loc 1 430 23 is_stmt 0 view .LVU61
 209 00da 0795     		str	r5, [sp, #28]
 431:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 431 3 is_stmt 1 view .LVU62
 211              		.loc 1 431 24 is_stmt 0 view .LVU63
 212 00dc 0225     		movs	r5, #2
 213 00de 0895     		str	r5, [sp, #32]
 432:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 432 3 is_stmt 1 view .LVU64
 215              		.loc 1 432 24 is_stmt 0 view .LVU65
 216 00e0 0994     		str	r4, [sp, #36]
 433:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 217              		.loc 1 433 3 is_stmt 1 view .LVU66
 218              		.loc 1 433 25 is_stmt 0 view .LVU67
 219 00e2 0A94     		str	r4, [sp, #40]
 434:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 220              		.loc 1 434 3 is_stmt 1 view .LVU68
 221              		.loc 1 434 29 is_stmt 0 view .LVU69
 222 00e4 4FF0050B 		mov	fp, #5
 223 00e8 CDF82CB0 		str	fp, [sp, #44]
 435:Core/Src/main.c ****   HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 224              		.loc 1 435 3 is_stmt 1 view .LVU70
 225 00ec 07A9     		add	r1, sp, #28
 226 00ee 3846     		mov	r0, r7
 227 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL5:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 438:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 229              		.loc 1 438 3 view .LVU71
 230              		.loc 1 438 23 is_stmt 0 view .LVU72
 231 00f4 0796     		str	r6, [sp, #28]
 439:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 232              		.loc 1 439 3 is_stmt 1 view .LVU73
 233              		.loc 1 439 24 is_stmt 0 view .LVU74
 234 00f6 4FF49013 		mov	r3, #1179648
 235 00fa 0893     		str	r3, [sp, #32]
 440:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 440 3 is_stmt 1 view .LVU75
 237              		.loc 1 440 24 is_stmt 0 view .LVU76
 238 00fc 0994     		str	r4, [sp, #36]
 441:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 239              		.loc 1 441 3 is_stmt 1 view .LVU77
 240 00fe 07A9     		add	r1, sp, #28
 241 0100 2848     		ldr	r0, .L3+8
 242 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL6:
 442:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 13


 443:Core/Src/main.c ****   /*Configure GPIO pin : I2S3_WS_Pin */
 444:Core/Src/main.c ****   GPIO_InitStruct.Pin = I2S3_WS_Pin;
 244              		.loc 1 444 3 view .LVU78
 245              		.loc 1 444 23 is_stmt 0 view .LVU79
 246 0106 1023     		movs	r3, #16
 247 0108 0793     		str	r3, [sp, #28]
 445:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 248              		.loc 1 445 3 is_stmt 1 view .LVU80
 249              		.loc 1 445 24 is_stmt 0 view .LVU81
 250 010a 0895     		str	r5, [sp, #32]
 446:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 446 3 is_stmt 1 view .LVU82
 252              		.loc 1 446 24 is_stmt 0 view .LVU83
 253 010c 0994     		str	r4, [sp, #36]
 447:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 254              		.loc 1 447 3 is_stmt 1 view .LVU84
 255              		.loc 1 447 25 is_stmt 0 view .LVU85
 256 010e 0A94     		str	r4, [sp, #40]
 448:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 257              		.loc 1 448 3 is_stmt 1 view .LVU86
 258              		.loc 1 448 29 is_stmt 0 view .LVU87
 259 0110 4FF0060A 		mov	r10, #6
 260 0114 CDF82CA0 		str	r10, [sp, #44]
 449:Core/Src/main.c ****   HAL_GPIO_Init(I2S3_WS_GPIO_Port, &GPIO_InitStruct);
 261              		.loc 1 449 3 is_stmt 1 view .LVU88
 262 0118 07A9     		add	r1, sp, #28
 263 011a 2248     		ldr	r0, .L3+8
 264 011c FFF7FEFF 		bl	HAL_GPIO_Init
 265              	.LVL7:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /*Configure GPIO pin : BOOT1_Pin */
 452:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 266              		.loc 1 452 3 view .LVU89
 267              		.loc 1 452 23 is_stmt 0 view .LVU90
 268 0120 0423     		movs	r3, #4
 269 0122 0793     		str	r3, [sp, #28]
 453:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 270              		.loc 1 453 3 is_stmt 1 view .LVU91
 271              		.loc 1 453 24 is_stmt 0 view .LVU92
 272 0124 0894     		str	r4, [sp, #32]
 454:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 273              		.loc 1 454 3 is_stmt 1 view .LVU93
 274              		.loc 1 454 24 is_stmt 0 view .LVU94
 275 0126 0994     		str	r4, [sp, #36]
 455:Core/Src/main.c ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 276              		.loc 1 455 3 is_stmt 1 view .LVU95
 277 0128 07A9     		add	r1, sp, #28
 278 012a 1F48     		ldr	r0, .L3+12
 279 012c FFF7FEFF 		bl	HAL_GPIO_Init
 280              	.LVL8:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /*Configure GPIO pin : CLK_IN_Pin */
 458:Core/Src/main.c ****   GPIO_InitStruct.Pin = CLK_IN_Pin;
 281              		.loc 1 458 3 view .LVU96
 282              		.loc 1 458 23 is_stmt 0 view .LVU97
 283 0130 4FF48063 		mov	r3, #1024
 284 0134 0793     		str	r3, [sp, #28]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 14


 459:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 285              		.loc 1 459 3 is_stmt 1 view .LVU98
 286              		.loc 1 459 24 is_stmt 0 view .LVU99
 287 0136 0895     		str	r5, [sp, #32]
 460:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 288              		.loc 1 460 3 is_stmt 1 view .LVU100
 289              		.loc 1 460 24 is_stmt 0 view .LVU101
 290 0138 0994     		str	r4, [sp, #36]
 461:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 291              		.loc 1 461 3 is_stmt 1 view .LVU102
 292              		.loc 1 461 25 is_stmt 0 view .LVU103
 293 013a 0A94     		str	r4, [sp, #40]
 462:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 294              		.loc 1 462 3 is_stmt 1 view .LVU104
 295              		.loc 1 462 29 is_stmt 0 view .LVU105
 296 013c CDF82CB0 		str	fp, [sp, #44]
 463:Core/Src/main.c ****   HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 297              		.loc 1 463 3 is_stmt 1 view .LVU106
 298 0140 07A9     		add	r1, sp, #28
 299 0142 1948     		ldr	r0, .L3+12
 300 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 301              	.LVL9:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin
 466:Core/Src/main.c ****                            Audio_RST_Pin */
 467:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 302              		.loc 1 467 3 view .LVU107
 303              		.loc 1 467 23 is_stmt 0 view .LVU108
 304 0148 4FF21003 		movw	r3, #61456
 305 014c 0793     		str	r3, [sp, #28]
 468:Core/Src/main.c ****                           |Audio_RST_Pin;
 469:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 306              		.loc 1 469 3 is_stmt 1 view .LVU109
 307              		.loc 1 469 24 is_stmt 0 view .LVU110
 308 014e 0896     		str	r6, [sp, #32]
 470:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 309              		.loc 1 470 3 is_stmt 1 view .LVU111
 310              		.loc 1 470 24 is_stmt 0 view .LVU112
 311 0150 0994     		str	r4, [sp, #36]
 471:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 471 3 is_stmt 1 view .LVU113
 313              		.loc 1 471 25 is_stmt 0 view .LVU114
 314 0152 0A94     		str	r4, [sp, #40]
 472:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 315              		.loc 1 472 3 is_stmt 1 view .LVU115
 316 0154 07A9     		add	r1, sp, #28
 317 0156 4846     		mov	r0, r9
 318 0158 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL10:
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /*Configure GPIO pins : I2S3_MCK_Pin I2S3_SCK_Pin I2S3_SD_Pin */
 475:Core/Src/main.c ****   GPIO_InitStruct.Pin = I2S3_MCK_Pin|I2S3_SCK_Pin|I2S3_SD_Pin;
 320              		.loc 1 475 3 view .LVU116
 321              		.loc 1 475 23 is_stmt 0 view .LVU117
 322 015c 4FF4A453 		mov	r3, #5248
 323 0160 0793     		str	r3, [sp, #28]
 476:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 15


 324              		.loc 1 476 3 is_stmt 1 view .LVU118
 325              		.loc 1 476 24 is_stmt 0 view .LVU119
 326 0162 0895     		str	r5, [sp, #32]
 477:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 477 3 is_stmt 1 view .LVU120
 328              		.loc 1 477 24 is_stmt 0 view .LVU121
 329 0164 0994     		str	r4, [sp, #36]
 478:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 330              		.loc 1 478 3 is_stmt 1 view .LVU122
 331              		.loc 1 478 25 is_stmt 0 view .LVU123
 332 0166 0A94     		str	r4, [sp, #40]
 479:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 333              		.loc 1 479 3 is_stmt 1 view .LVU124
 334              		.loc 1 479 29 is_stmt 0 view .LVU125
 335 0168 CDF82CA0 		str	r10, [sp, #44]
 480:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 336              		.loc 1 480 3 is_stmt 1 view .LVU126
 337 016c 07A9     		add	r1, sp, #28
 338 016e 3846     		mov	r0, r7
 339 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 340              	.LVL11:
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 483:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 341              		.loc 1 483 3 view .LVU127
 342              		.loc 1 483 23 is_stmt 0 view .LVU128
 343 0174 2023     		movs	r3, #32
 344 0176 0793     		str	r3, [sp, #28]
 484:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 345              		.loc 1 484 3 is_stmt 1 view .LVU129
 346              		.loc 1 484 24 is_stmt 0 view .LVU130
 347 0178 0894     		str	r4, [sp, #32]
 485:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 348              		.loc 1 485 3 is_stmt 1 view .LVU131
 349              		.loc 1 485 24 is_stmt 0 view .LVU132
 350 017a 0994     		str	r4, [sp, #36]
 486:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 351              		.loc 1 486 3 is_stmt 1 view .LVU133
 352 017c 07A9     		add	r1, sp, #28
 353 017e 4846     		mov	r0, r9
 354 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL12:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /*Configure GPIO pin : MEMS_INT2_Pin */
 489:Core/Src/main.c ****   GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 356              		.loc 1 489 3 view .LVU134
 357              		.loc 1 489 23 is_stmt 0 view .LVU135
 358 0184 0795     		str	r5, [sp, #28]
 490:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 359              		.loc 1 490 3 is_stmt 1 view .LVU136
 360              		.loc 1 490 24 is_stmt 0 view .LVU137
 361 0186 4FF49013 		mov	r3, #1179648
 362 018a 0893     		str	r3, [sp, #32]
 491:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 363              		.loc 1 491 3 is_stmt 1 view .LVU138
 364              		.loc 1 491 24 is_stmt 0 view .LVU139
 365 018c 0994     		str	r4, [sp, #36]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 16


 492:Core/Src/main.c ****   HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 366              		.loc 1 492 3 is_stmt 1 view .LVU140
 367 018e 07A9     		add	r1, sp, #28
 368 0190 4046     		mov	r0, r8
 369 0192 FFF7FEFF 		bl	HAL_GPIO_Init
 370              	.LVL13:
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 495:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 496:Core/Src/main.c **** }
 371              		.loc 1 496 1 is_stmt 0 view .LVU141
 372 0196 0DB0     		add	sp, sp, #52
 373              		.cfi_def_cfa_offset 36
 374              		@ sp needed
 375 0198 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 376              	.L4:
 377              		.align	2
 378              	.L3:
 379 019c 00380240 		.word	1073887232
 380 01a0 00080240 		.word	1073874944
 381 01a4 00000240 		.word	1073872896
 382 01a8 00040240 		.word	1073873920
 383 01ac 00100240 		.word	1073876992
 384 01b0 000C0240 		.word	1073875968
 385              		.cfi_endproc
 386              	.LFE250:
 388              		.section	.text.MX_DMA_Init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	MX_DMA_Init:
 395              	.LFB249:
 374:Core/Src/main.c **** 
 396              		.loc 1 374 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 8
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 00B5     		push	{lr}
 401              		.cfi_def_cfa_offset 4
 402              		.cfi_offset 14, -4
 403 0002 83B0     		sub	sp, sp, #12
 404              		.cfi_def_cfa_offset 16
 377:Core/Src/main.c **** 
 405              		.loc 1 377 3 view .LVU143
 406              	.LBB10:
 377:Core/Src/main.c **** 
 407              		.loc 1 377 3 view .LVU144
 408 0004 0021     		movs	r1, #0
 409 0006 0191     		str	r1, [sp, #4]
 377:Core/Src/main.c **** 
 410              		.loc 1 377 3 view .LVU145
 411 0008 094B     		ldr	r3, .L7
 412 000a 1A6B     		ldr	r2, [r3, #48]
 413 000c 42F48002 		orr	r2, r2, #4194304
 414 0010 1A63     		str	r2, [r3, #48]
 377:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 17


 415              		.loc 1 377 3 view .LVU146
 416 0012 1B6B     		ldr	r3, [r3, #48]
 417 0014 03F48003 		and	r3, r3, #4194304
 418 0018 0193     		str	r3, [sp, #4]
 377:Core/Src/main.c **** 
 419              		.loc 1 377 3 view .LVU147
 420 001a 019B     		ldr	r3, [sp, #4]
 421              	.LBE10:
 377:Core/Src/main.c **** 
 422              		.loc 1 377 3 view .LVU148
 381:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 423              		.loc 1 381 3 view .LVU149
 424 001c 0A46     		mov	r2, r1
 425 001e 3820     		movs	r0, #56
 426 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 427              	.LVL14:
 382:Core/Src/main.c **** 
 428              		.loc 1 382 3 view .LVU150
 429 0024 3820     		movs	r0, #56
 430 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 431              	.LVL15:
 384:Core/Src/main.c **** 
 432              		.loc 1 384 1 is_stmt 0 view .LVU151
 433 002a 03B0     		add	sp, sp, #12
 434              		.cfi_def_cfa_offset 4
 435              		@ sp needed
 436 002c 5DF804FB 		ldr	pc, [sp], #4
 437              	.L8:
 438              		.align	2
 439              	.L7:
 440 0030 00380240 		.word	1073887232
 441              		.cfi_endproc
 442              	.LFE249:
 444              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 445              		.align	1
 446              		.global	HAL_ADC_ConvCpltCallback
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	HAL_ADC_ConvCpltCallback:
 452              	.LVL16:
 453              	.LFB251:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 499:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 500:Core/Src/main.c **** {
 454              		.loc 1 500 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		.loc 1 500 1 is_stmt 0 view .LVU153
 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 501:Core/Src/main.c ****   bufPointer = &dmaBuffer[DMABUFLEN/2];
 463              		.loc 1 501 3 is_stmt 1 view .LVU154
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 18


 464              		.loc 1 501 14 is_stmt 0 view .LVU155
 465 0002 0749     		ldr	r1, .L11
 466 0004 074B     		ldr	r3, .L11+4
 467 0006 1960     		str	r1, [r3]
 502:Core/Src/main.c ****   dataReady = 1;
 468              		.loc 1 502 3 is_stmt 1 view .LVU156
 469              		.loc 1 502 13 is_stmt 0 view .LVU157
 470 0008 074B     		ldr	r3, .L11+8
 471 000a 0122     		movs	r2, #1
 472 000c 1A70     		strb	r2, [r3]
 503:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)dmaBuffer, DMABUFLEN);
 473              		.loc 1 503 3 is_stmt 1 view .LVU158
 474 000e 4FF40062 		mov	r2, #2048
 475 0012 A1F50061 		sub	r1, r1, #2048
 476 0016 0548     		ldr	r0, .L11+12
 477              	.LVL17:
 478              		.loc 1 503 3 is_stmt 0 view .LVU159
 479 0018 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 480              	.LVL18:
 504:Core/Src/main.c ****   
 505:Core/Src/main.c **** }
 481              		.loc 1 505 1 view .LVU160
 482 001c 08BD     		pop	{r3, pc}
 483              	.L12:
 484 001e 00BF     		.align	2
 485              	.L11:
 486 0020 00080000 		.word	dmaBuffer+2048
 487 0024 00000000 		.word	bufPointer
 488 0028 00000000 		.word	dataReady
 489 002c 00000000 		.word	hadc1
 490              		.cfi_endproc
 491              	.LFE251:
 493              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 494              		.align	1
 495              		.global	HAL_ADC_ConvHalfCpltCallback
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 500              	HAL_ADC_ConvHalfCpltCallback:
 501              	.LVL19:
 502              	.LFB252:
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 508:Core/Src/main.c **** {
 503              		.loc 1 508 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 509:Core/Src/main.c ****   bufPointer = &dmaBuffer[0];
 508              		.loc 1 509 3 view .LVU162
 509              		.loc 1 509 14 is_stmt 0 view .LVU163
 510 0000 034B     		ldr	r3, .L14
 511 0002 044A     		ldr	r2, .L14+4
 512 0004 1A60     		str	r2, [r3]
 510:Core/Src/main.c ****   dataReady = 1; 
 513              		.loc 1 510 3 is_stmt 1 view .LVU164
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 19


 514              		.loc 1 510 13 is_stmt 0 view .LVU165
 515 0006 044B     		ldr	r3, .L14+8
 516 0008 0122     		movs	r2, #1
 517 000a 1A70     		strb	r2, [r3]
 511:Core/Src/main.c ****   
 512:Core/Src/main.c **** }
 518              		.loc 1 512 1 view .LVU166
 519 000c 7047     		bx	lr
 520              	.L15:
 521 000e 00BF     		.align	2
 522              	.L14:
 523 0010 00000000 		.word	bufPointer
 524 0014 00000000 		.word	dmaBuffer
 525 0018 00000000 		.word	dataReady
 526              		.cfi_endproc
 527              	.LFE252:
 529              		.section	.text.Error_Handler,"ax",%progbits
 530              		.align	1
 531              		.global	Error_Handler
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	Error_Handler:
 537              	.LFB253:
 513:Core/Src/main.c **** /* USER CODE END 4 */
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** /**
 516:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 517:Core/Src/main.c ****   * @retval None
 518:Core/Src/main.c ****   */
 519:Core/Src/main.c **** void Error_Handler(void)
 520:Core/Src/main.c **** {
 538              		.loc 1 520 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ Volatile: function does not return.
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 521:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 522:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 523:Core/Src/main.c ****   __disable_irq();
 544              		.loc 1 523 3 view .LVU168
 545              	.LBB11:
 546              	.LBI11:
 547              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 20


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 21


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 22


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 23


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 24


 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 25


 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 26


 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 27


 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 28


 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 29


 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 30


 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 31


 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 32


 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 33


 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 34


 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 35


 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 36


 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 548              		.loc 2 960 27 view .LVU169
 549              	.LBB12:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 550              		.loc 2 962 3 view .LVU170
 551              		.syntax unified
 552              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 553 0000 72B6     		cpsid i
 554              	@ 0 "" 2
 555              		.thumb
 556              		.syntax unified
 557              	.L17:
 558              	.LBE12:
 559              	.LBE11:
 524:Core/Src/main.c ****   while (1)
 560              		.loc 1 524 3 view .LVU171
 525:Core/Src/main.c ****   {
 526:Core/Src/main.c ****   }
 561              		.loc 1 526 3 view .LVU172
 524:Core/Src/main.c ****   while (1)
 562              		.loc 1 524 9 view .LVU173
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 37


 563 0002 FEE7     		b	.L17
 564              		.cfi_endproc
 565              	.LFE253:
 567              		.section	.text.MX_ADC1_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	MX_ADC1_Init:
 574              	.LFB245:
 193:Core/Src/main.c **** 
 575              		.loc 1 193 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 00B5     		push	{lr}
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 14, -4
 582 0002 85B0     		sub	sp, sp, #20
 583              		.cfi_def_cfa_offset 24
 199:Core/Src/main.c **** 
 584              		.loc 1 199 3 view .LVU175
 199:Core/Src/main.c **** 
 585              		.loc 1 199 26 is_stmt 0 view .LVU176
 586 0004 0023     		movs	r3, #0
 587 0006 0093     		str	r3, [sp]
 588 0008 0193     		str	r3, [sp, #4]
 589 000a 0293     		str	r3, [sp, #8]
 590 000c 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 591              		.loc 1 207 3 is_stmt 1 view .LVU177
 207:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 592              		.loc 1 207 18 is_stmt 0 view .LVU178
 593 000e 1548     		ldr	r0, .L24
 594 0010 154A     		ldr	r2, .L24+4
 595 0012 0260     		str	r2, [r0]
 208:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 596              		.loc 1 208 3 is_stmt 1 view .LVU179
 208:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 597              		.loc 1 208 29 is_stmt 0 view .LVU180
 598 0014 4FF48032 		mov	r2, #65536
 599 0018 4260     		str	r2, [r0, #4]
 209:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 600              		.loc 1 209 3 is_stmt 1 view .LVU181
 209:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 601              		.loc 1 209 25 is_stmt 0 view .LVU182
 602 001a 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 603              		.loc 1 210 3 is_stmt 1 view .LVU183
 210:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 604              		.loc 1 210 27 is_stmt 0 view .LVU184
 605 001c 0361     		str	r3, [r0, #16]
 211:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 606              		.loc 1 211 3 is_stmt 1 view .LVU185
 211:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 607              		.loc 1 211 33 is_stmt 0 view .LVU186
 608 001e 0376     		strb	r3, [r0, #24]
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 38


 212:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING;
 609              		.loc 1 212 3 is_stmt 1 view .LVU187
 212:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING;
 610              		.loc 1 212 36 is_stmt 0 view .LVU188
 611 0020 80F82030 		strb	r3, [r0, #32]
 213:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 612              		.loc 1 213 3 is_stmt 1 view .LVU189
 213:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 613              		.loc 1 213 35 is_stmt 0 view .LVU190
 614 0024 4FF04052 		mov	r2, #805306368
 615 0028 C262     		str	r2, [r0, #44]
 214:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 616              		.loc 1 214 3 is_stmt 1 view .LVU191
 214:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 617              		.loc 1 214 31 is_stmt 0 view .LVU192
 618 002a 4FF0C062 		mov	r2, #100663296
 619 002e 8262     		str	r2, [r0, #40]
 215:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 620              		.loc 1 215 3 is_stmt 1 view .LVU193
 215:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 621              		.loc 1 215 24 is_stmt 0 view .LVU194
 622 0030 C360     		str	r3, [r0, #12]
 216:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 623              		.loc 1 216 3 is_stmt 1 view .LVU195
 216:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 624              		.loc 1 216 30 is_stmt 0 view .LVU196
 625 0032 0122     		movs	r2, #1
 626 0034 C261     		str	r2, [r0, #28]
 217:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 627              		.loc 1 217 3 is_stmt 1 view .LVU197
 217:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 628              		.loc 1 217 36 is_stmt 0 view .LVU198
 629 0036 80F83030 		strb	r3, [r0, #48]
 218:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 630              		.loc 1 218 3 is_stmt 1 view .LVU199
 218:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 631              		.loc 1 218 27 is_stmt 0 view .LVU200
 632 003a 4261     		str	r2, [r0, #20]
 219:Core/Src/main.c ****   {
 633              		.loc 1 219 3 is_stmt 1 view .LVU201
 219:Core/Src/main.c ****   {
 634              		.loc 1 219 7 is_stmt 0 view .LVU202
 635 003c FFF7FEFF 		bl	HAL_ADC_Init
 636              	.LVL20:
 219:Core/Src/main.c ****   {
 637              		.loc 1 219 6 discriminator 1 view .LVU203
 638 0040 60B9     		cbnz	r0, .L22
 226:Core/Src/main.c ****   sConfig.Rank = 1;
 639              		.loc 1 226 3 is_stmt 1 view .LVU204
 226:Core/Src/main.c ****   sConfig.Rank = 1;
 640              		.loc 1 226 19 is_stmt 0 view .LVU205
 641 0042 0123     		movs	r3, #1
 642 0044 0093     		str	r3, [sp]
 227:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 643              		.loc 1 227 3 is_stmt 1 view .LVU206
 227:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 644              		.loc 1 227 16 is_stmt 0 view .LVU207
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 39


 645 0046 0193     		str	r3, [sp, #4]
 228:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 646              		.loc 1 228 3 is_stmt 1 view .LVU208
 228:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 647              		.loc 1 228 24 is_stmt 0 view .LVU209
 648 0048 0023     		movs	r3, #0
 649 004a 0293     		str	r3, [sp, #8]
 229:Core/Src/main.c ****   {
 650              		.loc 1 229 3 is_stmt 1 view .LVU210
 229:Core/Src/main.c ****   {
 651              		.loc 1 229 7 is_stmt 0 view .LVU211
 652 004c 6946     		mov	r1, sp
 653 004e 0548     		ldr	r0, .L24
 654 0050 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 655              	.LVL21:
 229:Core/Src/main.c ****   {
 656              		.loc 1 229 6 discriminator 1 view .LVU212
 657 0054 20B9     		cbnz	r0, .L23
 237:Core/Src/main.c **** 
 658              		.loc 1 237 1 view .LVU213
 659 0056 05B0     		add	sp, sp, #20
 660              		.cfi_remember_state
 661              		.cfi_def_cfa_offset 4
 662              		@ sp needed
 663 0058 5DF804FB 		ldr	pc, [sp], #4
 664              	.L22:
 665              		.cfi_restore_state
 221:Core/Src/main.c ****   }
 666              		.loc 1 221 5 is_stmt 1 view .LVU214
 667 005c FFF7FEFF 		bl	Error_Handler
 668              	.LVL22:
 669              	.L23:
 231:Core/Src/main.c ****   }
 670              		.loc 1 231 5 view .LVU215
 671 0060 FFF7FEFF 		bl	Error_Handler
 672              	.LVL23:
 673              	.L25:
 674              		.align	2
 675              	.L24:
 676 0064 00000000 		.word	hadc1
 677 0068 00200140 		.word	1073815552
 678              		.cfi_endproc
 679              	.LFE245:
 681              		.section	.text.MX_I2C1_Init,"ax",%progbits
 682              		.align	1
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 687              	MX_I2C1_Init:
 688              	.LFB246:
 245:Core/Src/main.c **** 
 689              		.loc 1 245 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693 0000 08B5     		push	{r3, lr}
 694              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 40


 695              		.cfi_offset 3, -8
 696              		.cfi_offset 14, -4
 254:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 697              		.loc 1 254 3 view .LVU217
 254:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 698              		.loc 1 254 18 is_stmt 0 view .LVU218
 699 0002 0A48     		ldr	r0, .L30
 700 0004 0A4B     		ldr	r3, .L30+4
 701 0006 0360     		str	r3, [r0]
 255:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 702              		.loc 1 255 3 is_stmt 1 view .LVU219
 255:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 703              		.loc 1 255 25 is_stmt 0 view .LVU220
 704 0008 0A4B     		ldr	r3, .L30+8
 705 000a 4360     		str	r3, [r0, #4]
 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 706              		.loc 1 256 3 is_stmt 1 view .LVU221
 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 707              		.loc 1 256 24 is_stmt 0 view .LVU222
 708 000c 0023     		movs	r3, #0
 709 000e 8360     		str	r3, [r0, #8]
 257:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 710              		.loc 1 257 3 is_stmt 1 view .LVU223
 257:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 711              		.loc 1 257 26 is_stmt 0 view .LVU224
 712 0010 C360     		str	r3, [r0, #12]
 258:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 713              		.loc 1 258 3 is_stmt 1 view .LVU225
 258:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 714              		.loc 1 258 29 is_stmt 0 view .LVU226
 715 0012 4FF48042 		mov	r2, #16384
 716 0016 0261     		str	r2, [r0, #16]
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 717              		.loc 1 259 3 is_stmt 1 view .LVU227
 259:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 718              		.loc 1 259 30 is_stmt 0 view .LVU228
 719 0018 4361     		str	r3, [r0, #20]
 260:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 720              		.loc 1 260 3 is_stmt 1 view .LVU229
 260:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 721              		.loc 1 260 26 is_stmt 0 view .LVU230
 722 001a 8361     		str	r3, [r0, #24]
 261:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 723              		.loc 1 261 3 is_stmt 1 view .LVU231
 261:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 724              		.loc 1 261 30 is_stmt 0 view .LVU232
 725 001c C361     		str	r3, [r0, #28]
 262:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 726              		.loc 1 262 3 is_stmt 1 view .LVU233
 262:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 727              		.loc 1 262 28 is_stmt 0 view .LVU234
 728 001e 0362     		str	r3, [r0, #32]
 263:Core/Src/main.c ****   {
 729              		.loc 1 263 3 is_stmt 1 view .LVU235
 263:Core/Src/main.c ****   {
 730              		.loc 1 263 7 is_stmt 0 view .LVU236
 731 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 41


 732              	.LVL24:
 263:Core/Src/main.c ****   {
 733              		.loc 1 263 6 discriminator 1 view .LVU237
 734 0024 00B9     		cbnz	r0, .L29
 271:Core/Src/main.c **** 
 735              		.loc 1 271 1 view .LVU238
 736 0026 08BD     		pop	{r3, pc}
 737              	.L29:
 265:Core/Src/main.c ****   }
 738              		.loc 1 265 5 is_stmt 1 view .LVU239
 739 0028 FFF7FEFF 		bl	Error_Handler
 740              	.LVL25:
 741              	.L31:
 742              		.align	2
 743              	.L30:
 744 002c 00000000 		.word	hi2c1
 745 0030 00540040 		.word	1073763328
 746 0034 A0860100 		.word	100000
 747              		.cfi_endproc
 748              	.LFE246:
 750              		.section	.text.MX_SPI1_Init,"ax",%progbits
 751              		.align	1
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	MX_SPI1_Init:
 757              	.LFB247:
 279:Core/Src/main.c **** 
 758              		.loc 1 279 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 08B5     		push	{r3, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 3, -8
 765              		.cfi_offset 14, -4
 289:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 766              		.loc 1 289 3 view .LVU241
 289:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 767              		.loc 1 289 18 is_stmt 0 view .LVU242
 768 0002 0D48     		ldr	r0, .L36
 769 0004 0D4B     		ldr	r3, .L36+4
 770 0006 0360     		str	r3, [r0]
 290:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 771              		.loc 1 290 3 is_stmt 1 view .LVU243
 290:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 772              		.loc 1 290 19 is_stmt 0 view .LVU244
 773 0008 4FF48273 		mov	r3, #260
 774 000c 4360     		str	r3, [r0, #4]
 291:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 775              		.loc 1 291 3 is_stmt 1 view .LVU245
 291:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 776              		.loc 1 291 24 is_stmt 0 view .LVU246
 777 000e 0023     		movs	r3, #0
 778 0010 8360     		str	r3, [r0, #8]
 292:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 779              		.loc 1 292 3 is_stmt 1 view .LVU247
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 42


 292:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 780              		.loc 1 292 23 is_stmt 0 view .LVU248
 781 0012 C360     		str	r3, [r0, #12]
 293:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 782              		.loc 1 293 3 is_stmt 1 view .LVU249
 293:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 783              		.loc 1 293 26 is_stmt 0 view .LVU250
 784 0014 0361     		str	r3, [r0, #16]
 294:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 785              		.loc 1 294 3 is_stmt 1 view .LVU251
 294:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 786              		.loc 1 294 23 is_stmt 0 view .LVU252
 787 0016 4361     		str	r3, [r0, #20]
 295:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 788              		.loc 1 295 3 is_stmt 1 view .LVU253
 295:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 789              		.loc 1 295 18 is_stmt 0 view .LVU254
 790 0018 4FF40072 		mov	r2, #512
 791 001c 8261     		str	r2, [r0, #24]
 296:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 792              		.loc 1 296 3 is_stmt 1 view .LVU255
 296:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 793              		.loc 1 296 32 is_stmt 0 view .LVU256
 794 001e C361     		str	r3, [r0, #28]
 297:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 795              		.loc 1 297 3 is_stmt 1 view .LVU257
 297:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 796              		.loc 1 297 23 is_stmt 0 view .LVU258
 797 0020 0362     		str	r3, [r0, #32]
 298:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 798              		.loc 1 298 3 is_stmt 1 view .LVU259
 298:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 799              		.loc 1 298 21 is_stmt 0 view .LVU260
 800 0022 4362     		str	r3, [r0, #36]
 299:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 801              		.loc 1 299 3 is_stmt 1 view .LVU261
 299:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 802              		.loc 1 299 29 is_stmt 0 view .LVU262
 803 0024 8362     		str	r3, [r0, #40]
 300:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 804              		.loc 1 300 3 is_stmt 1 view .LVU263
 300:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 805              		.loc 1 300 28 is_stmt 0 view .LVU264
 806 0026 0A23     		movs	r3, #10
 807 0028 C362     		str	r3, [r0, #44]
 301:Core/Src/main.c ****   {
 808              		.loc 1 301 3 is_stmt 1 view .LVU265
 301:Core/Src/main.c ****   {
 809              		.loc 1 301 7 is_stmt 0 view .LVU266
 810 002a FFF7FEFF 		bl	HAL_SPI_Init
 811              	.LVL26:
 301:Core/Src/main.c ****   {
 812              		.loc 1 301 6 discriminator 1 view .LVU267
 813 002e 00B9     		cbnz	r0, .L35
 309:Core/Src/main.c **** 
 814              		.loc 1 309 1 view .LVU268
 815 0030 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 43


 816              	.L35:
 303:Core/Src/main.c ****   }
 817              		.loc 1 303 5 is_stmt 1 view .LVU269
 818 0032 FFF7FEFF 		bl	Error_Handler
 819              	.LVL27:
 820              	.L37:
 821 0036 00BF     		.align	2
 822              	.L36:
 823 0038 00000000 		.word	hspi1
 824 003c 00300140 		.word	1073819648
 825              		.cfi_endproc
 826              	.LFE247:
 828              		.section	.text.MX_TIM2_Init,"ax",%progbits
 829              		.align	1
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	MX_TIM2_Init:
 835              	.LFB248:
 317:Core/Src/main.c **** 
 836              		.loc 1 317 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 56
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840 0000 00B5     		push	{lr}
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 14, -4
 843 0002 8FB0     		sub	sp, sp, #60
 844              		.cfi_def_cfa_offset 64
 323:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 845              		.loc 1 323 3 view .LVU271
 323:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 846              		.loc 1 323 26 is_stmt 0 view .LVU272
 847 0004 0023     		movs	r3, #0
 848 0006 0A93     		str	r3, [sp, #40]
 849 0008 0B93     		str	r3, [sp, #44]
 850 000a 0C93     		str	r3, [sp, #48]
 851 000c 0D93     		str	r3, [sp, #52]
 324:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 852              		.loc 1 324 3 is_stmt 1 view .LVU273
 324:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 853              		.loc 1 324 27 is_stmt 0 view .LVU274
 854 000e 0893     		str	r3, [sp, #32]
 855 0010 0993     		str	r3, [sp, #36]
 325:Core/Src/main.c **** 
 856              		.loc 1 325 3 is_stmt 1 view .LVU275
 325:Core/Src/main.c **** 
 857              		.loc 1 325 22 is_stmt 0 view .LVU276
 858 0012 0193     		str	r3, [sp, #4]
 859 0014 0293     		str	r3, [sp, #8]
 860 0016 0393     		str	r3, [sp, #12]
 861 0018 0493     		str	r3, [sp, #16]
 862 001a 0593     		str	r3, [sp, #20]
 863 001c 0693     		str	r3, [sp, #24]
 864 001e 0793     		str	r3, [sp, #28]
 330:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 865              		.loc 1 330 3 is_stmt 1 view .LVU277
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 44


 330:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 866              		.loc 1 330 18 is_stmt 0 view .LVU278
 867 0020 1E48     		ldr	r0, .L50
 868 0022 4FF08042 		mov	r2, #1073741824
 869 0026 0260     		str	r2, [r0]
 331:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 870              		.loc 1 331 3 is_stmt 1 view .LVU279
 331:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 871              		.loc 1 331 24 is_stmt 0 view .LVU280
 872 0028 4360     		str	r3, [r0, #4]
 332:Core/Src/main.c ****   htim2.Init.Period = 700-1;
 873              		.loc 1 332 3 is_stmt 1 view .LVU281
 332:Core/Src/main.c ****   htim2.Init.Period = 700-1;
 874              		.loc 1 332 26 is_stmt 0 view .LVU282
 875 002a 8360     		str	r3, [r0, #8]
 333:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 876              		.loc 1 333 3 is_stmt 1 view .LVU283
 333:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 877              		.loc 1 333 21 is_stmt 0 view .LVU284
 878 002c 40F2BB22 		movw	r2, #699
 879 0030 C260     		str	r2, [r0, #12]
 334:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 880              		.loc 1 334 3 is_stmt 1 view .LVU285
 334:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 881              		.loc 1 334 28 is_stmt 0 view .LVU286
 882 0032 0361     		str	r3, [r0, #16]
 335:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 883              		.loc 1 335 3 is_stmt 1 view .LVU287
 335:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 884              		.loc 1 335 32 is_stmt 0 view .LVU288
 885 0034 8361     		str	r3, [r0, #24]
 336:Core/Src/main.c ****   {
 886              		.loc 1 336 3 is_stmt 1 view .LVU289
 336:Core/Src/main.c ****   {
 887              		.loc 1 336 7 is_stmt 0 view .LVU290
 888 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 889              	.LVL28:
 336:Core/Src/main.c ****   {
 890              		.loc 1 336 6 discriminator 1 view .LVU291
 891 003a 28BB     		cbnz	r0, .L45
 340:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 892              		.loc 1 340 3 is_stmt 1 view .LVU292
 340:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 893              		.loc 1 340 34 is_stmt 0 view .LVU293
 894 003c 4FF48053 		mov	r3, #4096
 895 0040 0A93     		str	r3, [sp, #40]
 341:Core/Src/main.c ****   {
 896              		.loc 1 341 3 is_stmt 1 view .LVU294
 341:Core/Src/main.c ****   {
 897              		.loc 1 341 7 is_stmt 0 view .LVU295
 898 0042 0AA9     		add	r1, sp, #40
 899 0044 1548     		ldr	r0, .L50
 900 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 901              	.LVL29:
 341:Core/Src/main.c ****   {
 902              		.loc 1 341 6 discriminator 1 view .LVU296
 903 004a F8B9     		cbnz	r0, .L46
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 45


 345:Core/Src/main.c ****   {
 904              		.loc 1 345 3 is_stmt 1 view .LVU297
 345:Core/Src/main.c ****   {
 905              		.loc 1 345 7 is_stmt 0 view .LVU298
 906 004c 1348     		ldr	r0, .L50
 907 004e FFF7FEFF 		bl	HAL_TIM_OC_Init
 908              	.LVL30:
 345:Core/Src/main.c ****   {
 909              		.loc 1 345 6 discriminator 1 view .LVU299
 910 0052 E8B9     		cbnz	r0, .L47
 349:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 911              		.loc 1 349 3 is_stmt 1 view .LVU300
 349:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 912              		.loc 1 349 37 is_stmt 0 view .LVU301
 913 0054 2023     		movs	r3, #32
 914 0056 0893     		str	r3, [sp, #32]
 350:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 915              		.loc 1 350 3 is_stmt 1 view .LVU302
 350:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 916              		.loc 1 350 33 is_stmt 0 view .LVU303
 917 0058 0023     		movs	r3, #0
 918 005a 0993     		str	r3, [sp, #36]
 351:Core/Src/main.c ****   {
 919              		.loc 1 351 3 is_stmt 1 view .LVU304
 351:Core/Src/main.c ****   {
 920              		.loc 1 351 7 is_stmt 0 view .LVU305
 921 005c 08A9     		add	r1, sp, #32
 922 005e 0F48     		ldr	r0, .L50
 923 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 924              	.LVL31:
 351:Core/Src/main.c ****   {
 925              		.loc 1 351 6 discriminator 1 view .LVU306
 926 0064 B0B9     		cbnz	r0, .L48
 355:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 927              		.loc 1 355 3 is_stmt 1 view .LVU307
 355:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 928              		.loc 1 355 20 is_stmt 0 view .LVU308
 929 0066 3023     		movs	r3, #48
 930 0068 0193     		str	r3, [sp, #4]
 356:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 931              		.loc 1 356 3 is_stmt 1 view .LVU309
 356:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 932              		.loc 1 356 19 is_stmt 0 view .LVU310
 933 006a 0022     		movs	r2, #0
 934 006c 0292     		str	r2, [sp, #8]
 357:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 935              		.loc 1 357 3 is_stmt 1 view .LVU311
 357:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 936              		.loc 1 357 24 is_stmt 0 view .LVU312
 937 006e 0392     		str	r2, [sp, #12]
 358:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 938              		.loc 1 358 3 is_stmt 1 view .LVU313
 358:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 939              		.loc 1 358 24 is_stmt 0 view .LVU314
 940 0070 0592     		str	r2, [sp, #20]
 359:Core/Src/main.c ****   {
 941              		.loc 1 359 3 is_stmt 1 view .LVU315
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 46


 359:Core/Src/main.c ****   {
 942              		.loc 1 359 7 is_stmt 0 view .LVU316
 943 0072 01A9     		add	r1, sp, #4
 944 0074 0948     		ldr	r0, .L50
 945 0076 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 946              	.LVL32:
 359:Core/Src/main.c ****   {
 947              		.loc 1 359 6 discriminator 1 view .LVU317
 948 007a 68B9     		cbnz	r0, .L49
 366:Core/Src/main.c **** 
 949              		.loc 1 366 3 is_stmt 1 view .LVU318
 950 007c 0748     		ldr	r0, .L50
 951 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 952              	.LVL33:
 368:Core/Src/main.c **** 
 953              		.loc 1 368 1 is_stmt 0 view .LVU319
 954 0082 0FB0     		add	sp, sp, #60
 955              		.cfi_remember_state
 956              		.cfi_def_cfa_offset 4
 957              		@ sp needed
 958 0084 5DF804FB 		ldr	pc, [sp], #4
 959              	.L45:
 960              		.cfi_restore_state
 338:Core/Src/main.c ****   }
 961              		.loc 1 338 5 is_stmt 1 view .LVU320
 962 0088 FFF7FEFF 		bl	Error_Handler
 963              	.LVL34:
 964              	.L46:
 343:Core/Src/main.c ****   }
 965              		.loc 1 343 5 view .LVU321
 966 008c FFF7FEFF 		bl	Error_Handler
 967              	.LVL35:
 968              	.L47:
 347:Core/Src/main.c ****   }
 969              		.loc 1 347 5 view .LVU322
 970 0090 FFF7FEFF 		bl	Error_Handler
 971              	.LVL36:
 972              	.L48:
 353:Core/Src/main.c ****   }
 973              		.loc 1 353 5 view .LVU323
 974 0094 FFF7FEFF 		bl	Error_Handler
 975              	.LVL37:
 976              	.L49:
 361:Core/Src/main.c ****   }
 977              		.loc 1 361 5 view .LVU324
 978 0098 FFF7FEFF 		bl	Error_Handler
 979              	.LVL38:
 980              	.L51:
 981              		.align	2
 982              	.L50:
 983 009c 00000000 		.word	htim2
 984              		.cfi_endproc
 985              	.LFE248:
 987              		.section	.text.SystemClock_Config,"ax",%progbits
 988              		.align	1
 989              		.global	SystemClock_Config
 990              		.syntax unified
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 47


 991              		.thumb
 992              		.thumb_func
 994              	SystemClock_Config:
 995              	.LFB244:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 996              		.loc 1 147 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 80
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000 0000 00B5     		push	{lr}
 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 14, -4
 1003 0002 95B0     		sub	sp, sp, #84
 1004              		.cfi_def_cfa_offset 88
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1005              		.loc 1 148 3 view .LVU326
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1006              		.loc 1 148 22 is_stmt 0 view .LVU327
 1007 0004 3022     		movs	r2, #48
 1008 0006 0021     		movs	r1, #0
 1009 0008 08A8     		add	r0, sp, #32
 1010 000a FFF7FEFF 		bl	memset
 1011              	.LVL39:
 149:Core/Src/main.c **** 
 1012              		.loc 1 149 3 is_stmt 1 view .LVU328
 149:Core/Src/main.c **** 
 1013              		.loc 1 149 22 is_stmt 0 view .LVU329
 1014 000e 0023     		movs	r3, #0
 1015 0010 0393     		str	r3, [sp, #12]
 1016 0012 0493     		str	r3, [sp, #16]
 1017 0014 0593     		str	r3, [sp, #20]
 1018 0016 0693     		str	r3, [sp, #24]
 1019 0018 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1020              		.loc 1 153 3 is_stmt 1 view .LVU330
 1021              	.LBB13:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1022              		.loc 1 153 3 view .LVU331
 1023 001a 0193     		str	r3, [sp, #4]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1024              		.loc 1 153 3 view .LVU332
 1025 001c 204A     		ldr	r2, .L58
 1026 001e 116C     		ldr	r1, [r2, #64]
 1027 0020 41F08051 		orr	r1, r1, #268435456
 1028 0024 1164     		str	r1, [r2, #64]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1029              		.loc 1 153 3 view .LVU333
 1030 0026 126C     		ldr	r2, [r2, #64]
 1031 0028 02F08052 		and	r2, r2, #268435456
 1032 002c 0192     		str	r2, [sp, #4]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1033              		.loc 1 153 3 view .LVU334
 1034 002e 019A     		ldr	r2, [sp, #4]
 1035              	.LBE13:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1036              		.loc 1 153 3 view .LVU335
 154:Core/Src/main.c **** 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 48


 1037              		.loc 1 154 3 view .LVU336
 1038              	.LBB14:
 154:Core/Src/main.c **** 
 1039              		.loc 1 154 3 view .LVU337
 1040 0030 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c **** 
 1041              		.loc 1 154 3 view .LVU338
 1042 0032 1C4B     		ldr	r3, .L58+4
 1043 0034 1A68     		ldr	r2, [r3]
 1044 0036 42F48042 		orr	r2, r2, #16384
 1045 003a 1A60     		str	r2, [r3]
 154:Core/Src/main.c **** 
 1046              		.loc 1 154 3 view .LVU339
 1047 003c 1B68     		ldr	r3, [r3]
 1048 003e 03F48043 		and	r3, r3, #16384
 1049 0042 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c **** 
 1050              		.loc 1 154 3 view .LVU340
 1051 0044 029B     		ldr	r3, [sp, #8]
 1052              	.LBE14:
 154:Core/Src/main.c **** 
 1053              		.loc 1 154 3 view .LVU341
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1054              		.loc 1 159 3 view .LVU342
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1055              		.loc 1 159 36 is_stmt 0 view .LVU343
 1056 0046 0123     		movs	r3, #1
 1057 0048 0893     		str	r3, [sp, #32]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1058              		.loc 1 160 3 is_stmt 1 view .LVU344
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1059              		.loc 1 160 30 is_stmt 0 view .LVU345
 1060 004a 4FF48033 		mov	r3, #65536
 1061 004e 0993     		str	r3, [sp, #36]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1062              		.loc 1 161 3 is_stmt 1 view .LVU346
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1063              		.loc 1 161 34 is_stmt 0 view .LVU347
 1064 0050 0223     		movs	r3, #2
 1065 0052 0E93     		str	r3, [sp, #56]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1066              		.loc 1 162 3 is_stmt 1 view .LVU348
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1067              		.loc 1 162 35 is_stmt 0 view .LVU349
 1068 0054 4FF48002 		mov	r2, #4194304
 1069 0058 0F92     		str	r2, [sp, #60]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1070              		.loc 1 163 3 is_stmt 1 view .LVU350
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1071              		.loc 1 163 30 is_stmt 0 view .LVU351
 1072 005a 0422     		movs	r2, #4
 1073 005c 1092     		str	r2, [sp, #64]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1074              		.loc 1 164 3 is_stmt 1 view .LVU352
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1075              		.loc 1 164 30 is_stmt 0 view .LVU353
 1076 005e A822     		movs	r2, #168
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 49


 1077 0060 1192     		str	r2, [sp, #68]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1078              		.loc 1 165 3 is_stmt 1 view .LVU354
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1079              		.loc 1 165 30 is_stmt 0 view .LVU355
 1080 0062 1293     		str	r3, [sp, #72]
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1081              		.loc 1 166 3 is_stmt 1 view .LVU356
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1082              		.loc 1 166 30 is_stmt 0 view .LVU357
 1083 0064 0723     		movs	r3, #7
 1084 0066 1393     		str	r3, [sp, #76]
 167:Core/Src/main.c ****   {
 1085              		.loc 1 167 3 is_stmt 1 view .LVU358
 167:Core/Src/main.c ****   {
 1086              		.loc 1 167 7 is_stmt 0 view .LVU359
 1087 0068 08A8     		add	r0, sp, #32
 1088 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1089              	.LVL40:
 167:Core/Src/main.c ****   {
 1090              		.loc 1 167 6 discriminator 1 view .LVU360
 1091 006e 98B9     		cbnz	r0, .L56
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1092              		.loc 1 174 3 is_stmt 1 view .LVU361
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1093              		.loc 1 174 31 is_stmt 0 view .LVU362
 1094 0070 0F23     		movs	r3, #15
 1095 0072 0393     		str	r3, [sp, #12]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1096              		.loc 1 176 3 is_stmt 1 view .LVU363
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1097              		.loc 1 176 34 is_stmt 0 view .LVU364
 1098 0074 0223     		movs	r3, #2
 1099 0076 0493     		str	r3, [sp, #16]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1100              		.loc 1 177 3 is_stmt 1 view .LVU365
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1101              		.loc 1 177 35 is_stmt 0 view .LVU366
 1102 0078 0023     		movs	r3, #0
 1103 007a 0593     		str	r3, [sp, #20]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1104              		.loc 1 178 3 is_stmt 1 view .LVU367
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1105              		.loc 1 178 36 is_stmt 0 view .LVU368
 1106 007c 4FF4A053 		mov	r3, #5120
 1107 0080 0693     		str	r3, [sp, #24]
 179:Core/Src/main.c **** 
 1108              		.loc 1 179 3 is_stmt 1 view .LVU369
 179:Core/Src/main.c **** 
 1109              		.loc 1 179 36 is_stmt 0 view .LVU370
 1110 0082 4FF48053 		mov	r3, #4096
 1111 0086 0793     		str	r3, [sp, #28]
 181:Core/Src/main.c ****   {
 1112              		.loc 1 181 3 is_stmt 1 view .LVU371
 181:Core/Src/main.c ****   {
 1113              		.loc 1 181 7 is_stmt 0 view .LVU372
 1114 0088 0521     		movs	r1, #5
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 50


 1115 008a 03A8     		add	r0, sp, #12
 1116 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1117              	.LVL41:
 181:Core/Src/main.c ****   {
 1118              		.loc 1 181 6 discriminator 1 view .LVU373
 1119 0090 20B9     		cbnz	r0, .L57
 185:Core/Src/main.c **** 
 1120              		.loc 1 185 1 view .LVU374
 1121 0092 15B0     		add	sp, sp, #84
 1122              		.cfi_remember_state
 1123              		.cfi_def_cfa_offset 4
 1124              		@ sp needed
 1125 0094 5DF804FB 		ldr	pc, [sp], #4
 1126              	.L56:
 1127              		.cfi_restore_state
 169:Core/Src/main.c ****   }
 1128              		.loc 1 169 5 is_stmt 1 view .LVU375
 1129 0098 FFF7FEFF 		bl	Error_Handler
 1130              	.LVL42:
 1131              	.L57:
 183:Core/Src/main.c ****   }
 1132              		.loc 1 183 5 view .LVU376
 1133 009c FFF7FEFF 		bl	Error_Handler
 1134              	.LVL43:
 1135              	.L59:
 1136              		.align	2
 1137              	.L58:
 1138 00a0 00380240 		.word	1073887232
 1139 00a4 00700040 		.word	1073770496
 1140              		.cfi_endproc
 1141              	.LFE244:
 1143              		.section	.text.main,"ax",%progbits
 1144              		.align	1
 1145              		.global	main
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1150              	main:
 1151              	.LFB243:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1152              		.loc 1 82 1 view -0
 1153              		.cfi_startproc
 1154              		@ Volatile: function does not return.
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 1161              		.loc 1 90 3 view .LVU378
 1162 0002 FFF7FEFF 		bl	HAL_Init
 1163              	.LVL44:
  97:Core/Src/main.c **** 
 1164              		.loc 1 97 3 view .LVU379
 1165 0006 FFF7FEFF 		bl	SystemClock_Config
 1166              	.LVL45:
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 51


 104:Core/Src/main.c ****   MX_DMA_Init();
 1167              		.loc 1 104 3 view .LVU380
 1168 000a FFF7FEFF 		bl	MX_GPIO_Init
 1169              	.LVL46:
 105:Core/Src/main.c ****   MX_ADC1_Init();
 1170              		.loc 1 105 3 view .LVU381
 1171 000e FFF7FEFF 		bl	MX_DMA_Init
 1172              	.LVL47:
 106:Core/Src/main.c ****   MX_I2C1_Init();
 1173              		.loc 1 106 3 view .LVU382
 1174 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1175              	.LVL48:
 107:Core/Src/main.c ****   MX_SPI1_Init();
 1176              		.loc 1 107 3 view .LVU383
 1177 0016 FFF7FEFF 		bl	MX_I2C1_Init
 1178              	.LVL49:
 108:Core/Src/main.c ****   MX_TIM2_Init();
 1179              		.loc 1 108 3 view .LVU384
 1180 001a FFF7FEFF 		bl	MX_SPI1_Init
 1181              	.LVL50:
 109:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 1182              		.loc 1 109 3 view .LVU385
 1183 001e FFF7FEFF 		bl	MX_TIM2_Init
 1184              	.LVL51:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1185              		.loc 1 110 3 view .LVU386
 1186 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1187              	.LVL52:
 112:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 1188              		.loc 1 112 3 view .LVU387
 1189 0026 0E4C     		ldr	r4, .L64
 1190 0028 2046     		mov	r0, r4
 1191 002a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1192              	.LVL53:
 113:Core/Src/main.c **** 
 1193              		.loc 1 113 3 view .LVU388
 1194 002e 0021     		movs	r1, #0
 1195 0030 2046     		mov	r0, r4
 1196 0032 FFF7FEFF 		bl	HAL_TIM_OC_Start
 1197              	.LVL54:
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 1198              		.loc 1 115 3 view .LVU389
 1199 0036 4FF40062 		mov	r2, #2048
 1200 003a 0A49     		ldr	r1, .L64+4
 1201 003c 0A48     		ldr	r0, .L64+8
 1202 003e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1203              	.LVL55:
 1204              	.L61:
 120:Core/Src/main.c ****   {
 1205              		.loc 1 120 3 view .LVU390
 130:Core/Src/main.c ****     {
 1206              		.loc 1 130 5 view .LVU391
 130:Core/Src/main.c ****     {
 1207              		.loc 1 130 19 is_stmt 0 view .LVU392
 1208 0042 0A4B     		ldr	r3, .L64+12
 1209 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:Core/Src/main.c ****     {
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 52


 1210              		.loc 1 130 8 view .LVU393
 1211 0046 012B     		cmp	r3, #1
 1212 0048 FBD1     		bne	.L61
 132:Core/Src/main.c ****       dataReady = 0;
 1213              		.loc 1 132 7 is_stmt 1 view .LVU394
 1214 004a 4FF40061 		mov	r1, #2048
 1215 004e 084B     		ldr	r3, .L64+16
 1216 0050 1868     		ldr	r0, [r3]
 1217 0052 FFF7FEFF 		bl	CDC_Transmit_FS
 1218              	.LVL56:
 133:Core/Src/main.c ****     }
 1219              		.loc 1 133 7 view .LVU395
 133:Core/Src/main.c ****     }
 1220              		.loc 1 133 17 is_stmt 0 view .LVU396
 1221 0056 054B     		ldr	r3, .L64+12
 1222 0058 0022     		movs	r2, #0
 1223 005a 1A70     		strb	r2, [r3]
 1224 005c F1E7     		b	.L61
 1225              	.L65:
 1226 005e 00BF     		.align	2
 1227              	.L64:
 1228 0060 00000000 		.word	htim2
 1229 0064 00000000 		.word	dmaBuffer
 1230 0068 00000000 		.word	hadc1
 1231 006c 00000000 		.word	dataReady
 1232 0070 00000000 		.word	bufPointer
 1233              		.cfi_endproc
 1234              	.LFE243:
 1236              		.global	bufPointer
 1237              		.section	.bss.bufPointer,"aw",%nobits
 1238              		.align	2
 1241              	bufPointer:
 1242 0000 00000000 		.space	4
 1243              		.global	dataHalfReady
 1244              		.section	.bss.dataHalfReady,"aw",%nobits
 1247              	dataHalfReady:
 1248 0000 00       		.space	1
 1249              		.global	dataReady
 1250              		.section	.bss.dataReady,"aw",%nobits
 1253              	dataReady:
 1254 0000 00       		.space	1
 1255              		.global	dmaBuffer
 1256              		.section	.bss.dmaBuffer,"aw",%nobits
 1257              		.align	2
 1260              	dmaBuffer:
 1261 0000 00000000 		.space	4096
 1261      00000000 
 1261      00000000 
 1261      00000000 
 1261      00000000 
 1262              		.global	htim2
 1263              		.section	.bss.htim2,"aw",%nobits
 1264              		.align	2
 1267              	htim2:
 1268 0000 00000000 		.space	72
 1268      00000000 
 1268      00000000 
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 53


 1268      00000000 
 1268      00000000 
 1269              		.global	hspi1
 1270              		.section	.bss.hspi1,"aw",%nobits
 1271              		.align	2
 1274              	hspi1:
 1275 0000 00000000 		.space	88
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1276              		.global	hi2c1
 1277              		.section	.bss.hi2c1,"aw",%nobits
 1278              		.align	2
 1281              	hi2c1:
 1282 0000 00000000 		.space	84
 1282      00000000 
 1282      00000000 
 1282      00000000 
 1282      00000000 
 1283              		.global	hdma_adc1
 1284              		.section	.bss.hdma_adc1,"aw",%nobits
 1285              		.align	2
 1288              	hdma_adc1:
 1289 0000 00000000 		.space	96
 1289      00000000 
 1289      00000000 
 1289      00000000 
 1289      00000000 
 1290              		.global	hadc1
 1291              		.section	.bss.hadc1,"aw",%nobits
 1292              		.align	2
 1295              	hadc1:
 1296 0000 00000000 		.space	72
 1296      00000000 
 1296      00000000 
 1296      00000000 
 1296      00000000 
 1297              		.text
 1298              	.Letext0:
 1299              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1300              		.file 4 "C:/Users/gamin/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1301              		.file 5 "C:/Users/gamin/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1302              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1303              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1304              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1305              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1306              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1307              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1308              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1309              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1310              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1311              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1312              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1313              		.file 17 "Core/Inc/main.h"
 1314              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1315              		.file 19 "USB_DEVICE/App/usbd_cdc_if.h"
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 54


 1316              		.file 20 "USB_DEVICE/App/usb_device.h"
 1317              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1318              		.file 22 "<built-in>"
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:379    .text.MX_GPIO_Init:0000019c $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:389    .text.MX_DMA_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:394    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:440    .text.MX_DMA_Init:00000030 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:445    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:451    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:486    .text.HAL_ADC_ConvCpltCallback:00000020 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1260   .bss.dmaBuffer:00000000 dmaBuffer
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1241   .bss.bufPointer:00000000 bufPointer
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1253   .bss.dataReady:00000000 dataReady
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1295   .bss.hadc1:00000000 hadc1
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:494    .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:500    .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:523    .text.HAL_ADC_ConvHalfCpltCallback:00000010 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:530    .text.Error_Handler:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:536    .text.Error_Handler:00000000 Error_Handler
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:568    .text.MX_ADC1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:573    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:676    .text.MX_ADC1_Init:00000064 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:682    .text.MX_I2C1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:687    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:744    .text.MX_I2C1_Init:0000002c $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1281   .bss.hi2c1:00000000 hi2c1
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:751    .text.MX_SPI1_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:756    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:823    .text.MX_SPI1_Init:00000038 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1274   .bss.hspi1:00000000 hspi1
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:829    .text.MX_TIM2_Init:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:834    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:983    .text.MX_TIM2_Init:0000009c $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1267   .bss.htim2:00000000 htim2
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:988    .text.SystemClock_Config:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:994    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1138   .text.SystemClock_Config:000000a0 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1144   .text.main:00000000 $t
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1150   .text.main:00000000 main
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1228   .text.main:00000060 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1238   .bss.bufPointer:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1247   .bss.dataHalfReady:00000000 dataHalfReady
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1248   .bss.dataHalfReady:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1254   .bss.dataReady:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1257   .bss.dmaBuffer:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1264   .bss.htim2:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1271   .bss.hspi1:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1278   .bss.hi2c1:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1288   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1285   .bss.hdma_adc1:00000000 $d
C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s:1292   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
ARM GAS  C:\Users\gamin\AppData\Local\Temp\ccyNtxm8.s 			page 56


HAL_NVIC_EnableIRQ
HAL_ADC_Start_DMA
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_Base_Start
HAL_TIM_OC_Start
CDC_Transmit_FS
