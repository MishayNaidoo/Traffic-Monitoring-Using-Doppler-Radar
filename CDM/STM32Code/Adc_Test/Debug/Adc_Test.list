
Adc_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009448  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004a8  08009508  08009508  00019508  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080099b0  080099b0  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  080099b0  080099b0  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080099b0  080099b0  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080099b0  080099b0  000199b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080099b4  080099b4  000199b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  080099b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000023c  200001d4  08009b8c  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000410  08009b8c  00020410  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00008b88  00000000  00000000  0002023f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000017fe  00000000  00000000  00028dc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000007a0  00000000  00000000  0002a5c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000005d5  00000000  00000000  0002ad68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00012b86  00000000  00000000  0002b33d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a0f4  00000000  00000000  0003dec3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0006d3b8  00000000  00000000  00047fb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002f20  00000000  00000000  000b5370  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000088  00000000  00000000  000b8290  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d4 	.word	0x200001d4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080094f0 	.word	0x080094f0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001d8 	.word	0x200001d8
 8000104:	080094f0 	.word	0x080094f0

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ffe1 	bl	8001404 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 ff31 	bl	80012b4 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 ffd3 	bl	8001404 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ffc9 	bl	8001404 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ff59 	bl	8001338 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 ff4f 	bl	8001338 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_d2uiz>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	2200      	movs	r2, #0
 80004ac:	4b0c      	ldr	r3, [pc, #48]	; (80004e0 <__aeabi_d2uiz+0x38>)
 80004ae:	0004      	movs	r4, r0
 80004b0:	000d      	movs	r5, r1
 80004b2:	f7ff ffef 	bl	8000494 <__aeabi_dcmpge>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d104      	bne.n	80004c4 <__aeabi_d2uiz+0x1c>
 80004ba:	0020      	movs	r0, r4
 80004bc:	0029      	movs	r1, r5
 80004be:	f001 fe67 	bl	8002190 <__aeabi_d2iz>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	4b06      	ldr	r3, [pc, #24]	; (80004e0 <__aeabi_d2uiz+0x38>)
 80004c6:	2200      	movs	r2, #0
 80004c8:	0020      	movs	r0, r4
 80004ca:	0029      	movs	r1, r5
 80004cc:	f001 fac0 	bl	8001a50 <__aeabi_dsub>
 80004d0:	f001 fe5e 	bl	8002190 <__aeabi_d2iz>
 80004d4:	2380      	movs	r3, #128	; 0x80
 80004d6:	061b      	lsls	r3, r3, #24
 80004d8:	469c      	mov	ip, r3
 80004da:	4460      	add	r0, ip
 80004dc:	e7f1      	b.n	80004c2 <__aeabi_d2uiz+0x1a>
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	41e00000 	.word	0x41e00000

080004e4 <__aeabi_d2lz>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	0005      	movs	r5, r0
 80004e8:	000c      	movs	r4, r1
 80004ea:	2200      	movs	r2, #0
 80004ec:	2300      	movs	r3, #0
 80004ee:	0028      	movs	r0, r5
 80004f0:	0021      	movs	r1, r4
 80004f2:	f7ff ffb1 	bl	8000458 <__aeabi_dcmplt>
 80004f6:	2800      	cmp	r0, #0
 80004f8:	d108      	bne.n	800050c <__aeabi_d2lz+0x28>
 80004fa:	0028      	movs	r0, r5
 80004fc:	0021      	movs	r1, r4
 80004fe:	f000 f80f 	bl	8000520 <__aeabi_d2ulz>
 8000502:	0002      	movs	r2, r0
 8000504:	000b      	movs	r3, r1
 8000506:	0010      	movs	r0, r2
 8000508:	0019      	movs	r1, r3
 800050a:	bd70      	pop	{r4, r5, r6, pc}
 800050c:	2380      	movs	r3, #128	; 0x80
 800050e:	061b      	lsls	r3, r3, #24
 8000510:	18e1      	adds	r1, r4, r3
 8000512:	0028      	movs	r0, r5
 8000514:	f000 f804 	bl	8000520 <__aeabi_d2ulz>
 8000518:	2300      	movs	r3, #0
 800051a:	4242      	negs	r2, r0
 800051c:	418b      	sbcs	r3, r1
 800051e:	e7f2      	b.n	8000506 <__aeabi_d2lz+0x22>

08000520 <__aeabi_d2ulz>:
 8000520:	b570      	push	{r4, r5, r6, lr}
 8000522:	2200      	movs	r2, #0
 8000524:	4b0b      	ldr	r3, [pc, #44]	; (8000554 <__aeabi_d2ulz+0x34>)
 8000526:	000d      	movs	r5, r1
 8000528:	0004      	movs	r4, r0
 800052a:	f000 ffcf 	bl	80014cc <__aeabi_dmul>
 800052e:	f7ff ffbb 	bl	80004a8 <__aeabi_d2uiz>
 8000532:	0006      	movs	r6, r0
 8000534:	f001 fe92 	bl	800225c <__aeabi_ui2d>
 8000538:	2200      	movs	r2, #0
 800053a:	4b07      	ldr	r3, [pc, #28]	; (8000558 <__aeabi_d2ulz+0x38>)
 800053c:	f000 ffc6 	bl	80014cc <__aeabi_dmul>
 8000540:	0002      	movs	r2, r0
 8000542:	000b      	movs	r3, r1
 8000544:	0020      	movs	r0, r4
 8000546:	0029      	movs	r1, r5
 8000548:	f001 fa82 	bl	8001a50 <__aeabi_dsub>
 800054c:	f7ff ffac 	bl	80004a8 <__aeabi_d2uiz>
 8000550:	0031      	movs	r1, r6
 8000552:	bd70      	pop	{r4, r5, r6, pc}
 8000554:	3df00000 	.word	0x3df00000
 8000558:	41f00000 	.word	0x41f00000

0800055c <__aeabi_l2d>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	0006      	movs	r6, r0
 8000560:	0008      	movs	r0, r1
 8000562:	f001 fe4b 	bl	80021fc <__aeabi_i2d>
 8000566:	2200      	movs	r2, #0
 8000568:	4b06      	ldr	r3, [pc, #24]	; (8000584 <__aeabi_l2d+0x28>)
 800056a:	f000 ffaf 	bl	80014cc <__aeabi_dmul>
 800056e:	000d      	movs	r5, r1
 8000570:	0004      	movs	r4, r0
 8000572:	0030      	movs	r0, r6
 8000574:	f001 fe72 	bl	800225c <__aeabi_ui2d>
 8000578:	002b      	movs	r3, r5
 800057a:	0022      	movs	r2, r4
 800057c:	f000 f84c 	bl	8000618 <__aeabi_dadd>
 8000580:	bd70      	pop	{r4, r5, r6, pc}
 8000582:	46c0      	nop			; (mov r8, r8)
 8000584:	41f00000 	.word	0x41f00000

08000588 <__aeabi_ui2f>:
 8000588:	b570      	push	{r4, r5, r6, lr}
 800058a:	1e04      	subs	r4, r0, #0
 800058c:	d00e      	beq.n	80005ac <__aeabi_ui2f+0x24>
 800058e:	f001 ff59 	bl	8002444 <__clzsi2>
 8000592:	239e      	movs	r3, #158	; 0x9e
 8000594:	0001      	movs	r1, r0
 8000596:	1a1b      	subs	r3, r3, r0
 8000598:	2b96      	cmp	r3, #150	; 0x96
 800059a:	dc0c      	bgt.n	80005b6 <__aeabi_ui2f+0x2e>
 800059c:	2808      	cmp	r0, #8
 800059e:	d02c      	beq.n	80005fa <__aeabi_ui2f+0x72>
 80005a0:	3908      	subs	r1, #8
 80005a2:	408c      	lsls	r4, r1
 80005a4:	0264      	lsls	r4, r4, #9
 80005a6:	0a64      	lsrs	r4, r4, #9
 80005a8:	b2d8      	uxtb	r0, r3
 80005aa:	e001      	b.n	80005b0 <__aeabi_ui2f+0x28>
 80005ac:	2000      	movs	r0, #0
 80005ae:	2400      	movs	r4, #0
 80005b0:	05c0      	lsls	r0, r0, #23
 80005b2:	4320      	orrs	r0, r4
 80005b4:	bd70      	pop	{r4, r5, r6, pc}
 80005b6:	2b99      	cmp	r3, #153	; 0x99
 80005b8:	dd0a      	ble.n	80005d0 <__aeabi_ui2f+0x48>
 80005ba:	0002      	movs	r2, r0
 80005bc:	0020      	movs	r0, r4
 80005be:	321b      	adds	r2, #27
 80005c0:	4090      	lsls	r0, r2
 80005c2:	0002      	movs	r2, r0
 80005c4:	1e50      	subs	r0, r2, #1
 80005c6:	4182      	sbcs	r2, r0
 80005c8:	2005      	movs	r0, #5
 80005ca:	1a40      	subs	r0, r0, r1
 80005cc:	40c4      	lsrs	r4, r0
 80005ce:	4314      	orrs	r4, r2
 80005d0:	2905      	cmp	r1, #5
 80005d2:	dc16      	bgt.n	8000602 <__aeabi_ui2f+0x7a>
 80005d4:	0022      	movs	r2, r4
 80005d6:	480f      	ldr	r0, [pc, #60]	; (8000614 <__aeabi_ui2f+0x8c>)
 80005d8:	4002      	ands	r2, r0
 80005da:	0765      	lsls	r5, r4, #29
 80005dc:	d009      	beq.n	80005f2 <__aeabi_ui2f+0x6a>
 80005de:	250f      	movs	r5, #15
 80005e0:	402c      	ands	r4, r5
 80005e2:	2c04      	cmp	r4, #4
 80005e4:	d005      	beq.n	80005f2 <__aeabi_ui2f+0x6a>
 80005e6:	3204      	adds	r2, #4
 80005e8:	0154      	lsls	r4, r2, #5
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_ui2f+0x6a>
 80005ec:	239f      	movs	r3, #159	; 0x9f
 80005ee:	4002      	ands	r2, r0
 80005f0:	1a5b      	subs	r3, r3, r1
 80005f2:	0192      	lsls	r2, r2, #6
 80005f4:	0a54      	lsrs	r4, r2, #9
 80005f6:	b2d8      	uxtb	r0, r3
 80005f8:	e7da      	b.n	80005b0 <__aeabi_ui2f+0x28>
 80005fa:	0264      	lsls	r4, r4, #9
 80005fc:	2096      	movs	r0, #150	; 0x96
 80005fe:	0a64      	lsrs	r4, r4, #9
 8000600:	e7d6      	b.n	80005b0 <__aeabi_ui2f+0x28>
 8000602:	1f4a      	subs	r2, r1, #5
 8000604:	4094      	lsls	r4, r2
 8000606:	0022      	movs	r2, r4
 8000608:	4802      	ldr	r0, [pc, #8]	; (8000614 <__aeabi_ui2f+0x8c>)
 800060a:	4002      	ands	r2, r0
 800060c:	0765      	lsls	r5, r4, #29
 800060e:	d0f0      	beq.n	80005f2 <__aeabi_ui2f+0x6a>
 8000610:	e7e5      	b.n	80005de <__aeabi_ui2f+0x56>
 8000612:	46c0      	nop			; (mov r8, r8)
 8000614:	fbffffff 	.word	0xfbffffff

08000618 <__aeabi_dadd>:
 8000618:	b5f0      	push	{r4, r5, r6, r7, lr}
 800061a:	464f      	mov	r7, r9
 800061c:	4646      	mov	r6, r8
 800061e:	46d6      	mov	lr, sl
 8000620:	0004      	movs	r4, r0
 8000622:	b5c0      	push	{r6, r7, lr}
 8000624:	001f      	movs	r7, r3
 8000626:	030b      	lsls	r3, r1, #12
 8000628:	0010      	movs	r0, r2
 800062a:	004e      	lsls	r6, r1, #1
 800062c:	0a5b      	lsrs	r3, r3, #9
 800062e:	0fcd      	lsrs	r5, r1, #31
 8000630:	0f61      	lsrs	r1, r4, #29
 8000632:	007a      	lsls	r2, r7, #1
 8000634:	4319      	orrs	r1, r3
 8000636:	00e3      	lsls	r3, r4, #3
 8000638:	033c      	lsls	r4, r7, #12
 800063a:	0fff      	lsrs	r7, r7, #31
 800063c:	46bc      	mov	ip, r7
 800063e:	0a64      	lsrs	r4, r4, #9
 8000640:	0f47      	lsrs	r7, r0, #29
 8000642:	4327      	orrs	r7, r4
 8000644:	0d76      	lsrs	r6, r6, #21
 8000646:	0d52      	lsrs	r2, r2, #21
 8000648:	00c0      	lsls	r0, r0, #3
 800064a:	46b9      	mov	r9, r7
 800064c:	4680      	mov	r8, r0
 800064e:	1ab7      	subs	r7, r6, r2
 8000650:	4565      	cmp	r5, ip
 8000652:	d100      	bne.n	8000656 <__aeabi_dadd+0x3e>
 8000654:	e09b      	b.n	800078e <__aeabi_dadd+0x176>
 8000656:	2f00      	cmp	r7, #0
 8000658:	dc00      	bgt.n	800065c <__aeabi_dadd+0x44>
 800065a:	e084      	b.n	8000766 <__aeabi_dadd+0x14e>
 800065c:	2a00      	cmp	r2, #0
 800065e:	d100      	bne.n	8000662 <__aeabi_dadd+0x4a>
 8000660:	e0be      	b.n	80007e0 <__aeabi_dadd+0x1c8>
 8000662:	4ac8      	ldr	r2, [pc, #800]	; (8000984 <__aeabi_dadd+0x36c>)
 8000664:	4296      	cmp	r6, r2
 8000666:	d100      	bne.n	800066a <__aeabi_dadd+0x52>
 8000668:	e124      	b.n	80008b4 <__aeabi_dadd+0x29c>
 800066a:	2280      	movs	r2, #128	; 0x80
 800066c:	464c      	mov	r4, r9
 800066e:	0412      	lsls	r2, r2, #16
 8000670:	4314      	orrs	r4, r2
 8000672:	46a1      	mov	r9, r4
 8000674:	2f38      	cmp	r7, #56	; 0x38
 8000676:	dd00      	ble.n	800067a <__aeabi_dadd+0x62>
 8000678:	e167      	b.n	800094a <__aeabi_dadd+0x332>
 800067a:	2f1f      	cmp	r7, #31
 800067c:	dd00      	ble.n	8000680 <__aeabi_dadd+0x68>
 800067e:	e1d6      	b.n	8000a2e <__aeabi_dadd+0x416>
 8000680:	2220      	movs	r2, #32
 8000682:	464c      	mov	r4, r9
 8000684:	1bd2      	subs	r2, r2, r7
 8000686:	4094      	lsls	r4, r2
 8000688:	46a2      	mov	sl, r4
 800068a:	4644      	mov	r4, r8
 800068c:	40fc      	lsrs	r4, r7
 800068e:	0020      	movs	r0, r4
 8000690:	4654      	mov	r4, sl
 8000692:	4304      	orrs	r4, r0
 8000694:	4640      	mov	r0, r8
 8000696:	4090      	lsls	r0, r2
 8000698:	1e42      	subs	r2, r0, #1
 800069a:	4190      	sbcs	r0, r2
 800069c:	464a      	mov	r2, r9
 800069e:	40fa      	lsrs	r2, r7
 80006a0:	4304      	orrs	r4, r0
 80006a2:	1a89      	subs	r1, r1, r2
 80006a4:	1b1c      	subs	r4, r3, r4
 80006a6:	42a3      	cmp	r3, r4
 80006a8:	4192      	sbcs	r2, r2
 80006aa:	4252      	negs	r2, r2
 80006ac:	1a8b      	subs	r3, r1, r2
 80006ae:	469a      	mov	sl, r3
 80006b0:	4653      	mov	r3, sl
 80006b2:	021b      	lsls	r3, r3, #8
 80006b4:	d400      	bmi.n	80006b8 <__aeabi_dadd+0xa0>
 80006b6:	e0d4      	b.n	8000862 <__aeabi_dadd+0x24a>
 80006b8:	4653      	mov	r3, sl
 80006ba:	025a      	lsls	r2, r3, #9
 80006bc:	0a53      	lsrs	r3, r2, #9
 80006be:	469a      	mov	sl, r3
 80006c0:	4653      	mov	r3, sl
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	d100      	bne.n	80006c8 <__aeabi_dadd+0xb0>
 80006c6:	e104      	b.n	80008d2 <__aeabi_dadd+0x2ba>
 80006c8:	4650      	mov	r0, sl
 80006ca:	f001 febb 	bl	8002444 <__clzsi2>
 80006ce:	0003      	movs	r3, r0
 80006d0:	3b08      	subs	r3, #8
 80006d2:	2220      	movs	r2, #32
 80006d4:	0020      	movs	r0, r4
 80006d6:	1ad2      	subs	r2, r2, r3
 80006d8:	4651      	mov	r1, sl
 80006da:	40d0      	lsrs	r0, r2
 80006dc:	4099      	lsls	r1, r3
 80006de:	0002      	movs	r2, r0
 80006e0:	409c      	lsls	r4, r3
 80006e2:	430a      	orrs	r2, r1
 80006e4:	42b3      	cmp	r3, r6
 80006e6:	da00      	bge.n	80006ea <__aeabi_dadd+0xd2>
 80006e8:	e102      	b.n	80008f0 <__aeabi_dadd+0x2d8>
 80006ea:	1b9b      	subs	r3, r3, r6
 80006ec:	1c59      	adds	r1, r3, #1
 80006ee:	291f      	cmp	r1, #31
 80006f0:	dd00      	ble.n	80006f4 <__aeabi_dadd+0xdc>
 80006f2:	e0a7      	b.n	8000844 <__aeabi_dadd+0x22c>
 80006f4:	2320      	movs	r3, #32
 80006f6:	0010      	movs	r0, r2
 80006f8:	0026      	movs	r6, r4
 80006fa:	1a5b      	subs	r3, r3, r1
 80006fc:	409c      	lsls	r4, r3
 80006fe:	4098      	lsls	r0, r3
 8000700:	40ce      	lsrs	r6, r1
 8000702:	40ca      	lsrs	r2, r1
 8000704:	1e63      	subs	r3, r4, #1
 8000706:	419c      	sbcs	r4, r3
 8000708:	4330      	orrs	r0, r6
 800070a:	4692      	mov	sl, r2
 800070c:	2600      	movs	r6, #0
 800070e:	4304      	orrs	r4, r0
 8000710:	0763      	lsls	r3, r4, #29
 8000712:	d009      	beq.n	8000728 <__aeabi_dadd+0x110>
 8000714:	230f      	movs	r3, #15
 8000716:	4023      	ands	r3, r4
 8000718:	2b04      	cmp	r3, #4
 800071a:	d005      	beq.n	8000728 <__aeabi_dadd+0x110>
 800071c:	1d23      	adds	r3, r4, #4
 800071e:	42a3      	cmp	r3, r4
 8000720:	41a4      	sbcs	r4, r4
 8000722:	4264      	negs	r4, r4
 8000724:	44a2      	add	sl, r4
 8000726:	001c      	movs	r4, r3
 8000728:	4653      	mov	r3, sl
 800072a:	021b      	lsls	r3, r3, #8
 800072c:	d400      	bmi.n	8000730 <__aeabi_dadd+0x118>
 800072e:	e09b      	b.n	8000868 <__aeabi_dadd+0x250>
 8000730:	4b94      	ldr	r3, [pc, #592]	; (8000984 <__aeabi_dadd+0x36c>)
 8000732:	3601      	adds	r6, #1
 8000734:	429e      	cmp	r6, r3
 8000736:	d100      	bne.n	800073a <__aeabi_dadd+0x122>
 8000738:	e0b8      	b.n	80008ac <__aeabi_dadd+0x294>
 800073a:	4653      	mov	r3, sl
 800073c:	4992      	ldr	r1, [pc, #584]	; (8000988 <__aeabi_dadd+0x370>)
 800073e:	08e4      	lsrs	r4, r4, #3
 8000740:	400b      	ands	r3, r1
 8000742:	0019      	movs	r1, r3
 8000744:	075b      	lsls	r3, r3, #29
 8000746:	4323      	orrs	r3, r4
 8000748:	0572      	lsls	r2, r6, #21
 800074a:	024c      	lsls	r4, r1, #9
 800074c:	0b24      	lsrs	r4, r4, #12
 800074e:	0d52      	lsrs	r2, r2, #21
 8000750:	0512      	lsls	r2, r2, #20
 8000752:	07ed      	lsls	r5, r5, #31
 8000754:	4322      	orrs	r2, r4
 8000756:	432a      	orrs	r2, r5
 8000758:	0018      	movs	r0, r3
 800075a:	0011      	movs	r1, r2
 800075c:	bce0      	pop	{r5, r6, r7}
 800075e:	46ba      	mov	sl, r7
 8000760:	46b1      	mov	r9, r6
 8000762:	46a8      	mov	r8, r5
 8000764:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000766:	2f00      	cmp	r7, #0
 8000768:	d048      	beq.n	80007fc <__aeabi_dadd+0x1e4>
 800076a:	1b97      	subs	r7, r2, r6
 800076c:	2e00      	cmp	r6, #0
 800076e:	d000      	beq.n	8000772 <__aeabi_dadd+0x15a>
 8000770:	e10e      	b.n	8000990 <__aeabi_dadd+0x378>
 8000772:	000c      	movs	r4, r1
 8000774:	431c      	orrs	r4, r3
 8000776:	d100      	bne.n	800077a <__aeabi_dadd+0x162>
 8000778:	e1b7      	b.n	8000aea <__aeabi_dadd+0x4d2>
 800077a:	1e7c      	subs	r4, r7, #1
 800077c:	2f01      	cmp	r7, #1
 800077e:	d100      	bne.n	8000782 <__aeabi_dadd+0x16a>
 8000780:	e226      	b.n	8000bd0 <__aeabi_dadd+0x5b8>
 8000782:	4d80      	ldr	r5, [pc, #512]	; (8000984 <__aeabi_dadd+0x36c>)
 8000784:	42af      	cmp	r7, r5
 8000786:	d100      	bne.n	800078a <__aeabi_dadd+0x172>
 8000788:	e1d5      	b.n	8000b36 <__aeabi_dadd+0x51e>
 800078a:	0027      	movs	r7, r4
 800078c:	e107      	b.n	800099e <__aeabi_dadd+0x386>
 800078e:	2f00      	cmp	r7, #0
 8000790:	dc00      	bgt.n	8000794 <__aeabi_dadd+0x17c>
 8000792:	e0b2      	b.n	80008fa <__aeabi_dadd+0x2e2>
 8000794:	2a00      	cmp	r2, #0
 8000796:	d047      	beq.n	8000828 <__aeabi_dadd+0x210>
 8000798:	4a7a      	ldr	r2, [pc, #488]	; (8000984 <__aeabi_dadd+0x36c>)
 800079a:	4296      	cmp	r6, r2
 800079c:	d100      	bne.n	80007a0 <__aeabi_dadd+0x188>
 800079e:	e089      	b.n	80008b4 <__aeabi_dadd+0x29c>
 80007a0:	2280      	movs	r2, #128	; 0x80
 80007a2:	464c      	mov	r4, r9
 80007a4:	0412      	lsls	r2, r2, #16
 80007a6:	4314      	orrs	r4, r2
 80007a8:	46a1      	mov	r9, r4
 80007aa:	2f38      	cmp	r7, #56	; 0x38
 80007ac:	dc6b      	bgt.n	8000886 <__aeabi_dadd+0x26e>
 80007ae:	2f1f      	cmp	r7, #31
 80007b0:	dc00      	bgt.n	80007b4 <__aeabi_dadd+0x19c>
 80007b2:	e16e      	b.n	8000a92 <__aeabi_dadd+0x47a>
 80007b4:	003a      	movs	r2, r7
 80007b6:	4648      	mov	r0, r9
 80007b8:	3a20      	subs	r2, #32
 80007ba:	40d0      	lsrs	r0, r2
 80007bc:	4684      	mov	ip, r0
 80007be:	2f20      	cmp	r7, #32
 80007c0:	d007      	beq.n	80007d2 <__aeabi_dadd+0x1ba>
 80007c2:	2240      	movs	r2, #64	; 0x40
 80007c4:	4648      	mov	r0, r9
 80007c6:	1bd2      	subs	r2, r2, r7
 80007c8:	4090      	lsls	r0, r2
 80007ca:	0002      	movs	r2, r0
 80007cc:	4640      	mov	r0, r8
 80007ce:	4310      	orrs	r0, r2
 80007d0:	4680      	mov	r8, r0
 80007d2:	4640      	mov	r0, r8
 80007d4:	1e42      	subs	r2, r0, #1
 80007d6:	4190      	sbcs	r0, r2
 80007d8:	4662      	mov	r2, ip
 80007da:	0004      	movs	r4, r0
 80007dc:	4314      	orrs	r4, r2
 80007de:	e057      	b.n	8000890 <__aeabi_dadd+0x278>
 80007e0:	464a      	mov	r2, r9
 80007e2:	4302      	orrs	r2, r0
 80007e4:	d100      	bne.n	80007e8 <__aeabi_dadd+0x1d0>
 80007e6:	e103      	b.n	80009f0 <__aeabi_dadd+0x3d8>
 80007e8:	1e7a      	subs	r2, r7, #1
 80007ea:	2f01      	cmp	r7, #1
 80007ec:	d100      	bne.n	80007f0 <__aeabi_dadd+0x1d8>
 80007ee:	e193      	b.n	8000b18 <__aeabi_dadd+0x500>
 80007f0:	4c64      	ldr	r4, [pc, #400]	; (8000984 <__aeabi_dadd+0x36c>)
 80007f2:	42a7      	cmp	r7, r4
 80007f4:	d100      	bne.n	80007f8 <__aeabi_dadd+0x1e0>
 80007f6:	e18a      	b.n	8000b0e <__aeabi_dadd+0x4f6>
 80007f8:	0017      	movs	r7, r2
 80007fa:	e73b      	b.n	8000674 <__aeabi_dadd+0x5c>
 80007fc:	4c63      	ldr	r4, [pc, #396]	; (800098c <__aeabi_dadd+0x374>)
 80007fe:	1c72      	adds	r2, r6, #1
 8000800:	4222      	tst	r2, r4
 8000802:	d000      	beq.n	8000806 <__aeabi_dadd+0x1ee>
 8000804:	e0e0      	b.n	80009c8 <__aeabi_dadd+0x3b0>
 8000806:	000a      	movs	r2, r1
 8000808:	431a      	orrs	r2, r3
 800080a:	2e00      	cmp	r6, #0
 800080c:	d000      	beq.n	8000810 <__aeabi_dadd+0x1f8>
 800080e:	e174      	b.n	8000afa <__aeabi_dadd+0x4e2>
 8000810:	2a00      	cmp	r2, #0
 8000812:	d100      	bne.n	8000816 <__aeabi_dadd+0x1fe>
 8000814:	e1d0      	b.n	8000bb8 <__aeabi_dadd+0x5a0>
 8000816:	464a      	mov	r2, r9
 8000818:	4302      	orrs	r2, r0
 800081a:	d000      	beq.n	800081e <__aeabi_dadd+0x206>
 800081c:	e1e3      	b.n	8000be6 <__aeabi_dadd+0x5ce>
 800081e:	074a      	lsls	r2, r1, #29
 8000820:	08db      	lsrs	r3, r3, #3
 8000822:	4313      	orrs	r3, r2
 8000824:	08c9      	lsrs	r1, r1, #3
 8000826:	e029      	b.n	800087c <__aeabi_dadd+0x264>
 8000828:	464a      	mov	r2, r9
 800082a:	4302      	orrs	r2, r0
 800082c:	d100      	bne.n	8000830 <__aeabi_dadd+0x218>
 800082e:	e17d      	b.n	8000b2c <__aeabi_dadd+0x514>
 8000830:	1e7a      	subs	r2, r7, #1
 8000832:	2f01      	cmp	r7, #1
 8000834:	d100      	bne.n	8000838 <__aeabi_dadd+0x220>
 8000836:	e0e0      	b.n	80009fa <__aeabi_dadd+0x3e2>
 8000838:	4c52      	ldr	r4, [pc, #328]	; (8000984 <__aeabi_dadd+0x36c>)
 800083a:	42a7      	cmp	r7, r4
 800083c:	d100      	bne.n	8000840 <__aeabi_dadd+0x228>
 800083e:	e166      	b.n	8000b0e <__aeabi_dadd+0x4f6>
 8000840:	0017      	movs	r7, r2
 8000842:	e7b2      	b.n	80007aa <__aeabi_dadd+0x192>
 8000844:	0010      	movs	r0, r2
 8000846:	3b1f      	subs	r3, #31
 8000848:	40d8      	lsrs	r0, r3
 800084a:	2920      	cmp	r1, #32
 800084c:	d003      	beq.n	8000856 <__aeabi_dadd+0x23e>
 800084e:	2340      	movs	r3, #64	; 0x40
 8000850:	1a5b      	subs	r3, r3, r1
 8000852:	409a      	lsls	r2, r3
 8000854:	4314      	orrs	r4, r2
 8000856:	1e63      	subs	r3, r4, #1
 8000858:	419c      	sbcs	r4, r3
 800085a:	2300      	movs	r3, #0
 800085c:	2600      	movs	r6, #0
 800085e:	469a      	mov	sl, r3
 8000860:	4304      	orrs	r4, r0
 8000862:	0763      	lsls	r3, r4, #29
 8000864:	d000      	beq.n	8000868 <__aeabi_dadd+0x250>
 8000866:	e755      	b.n	8000714 <__aeabi_dadd+0xfc>
 8000868:	4652      	mov	r2, sl
 800086a:	08e3      	lsrs	r3, r4, #3
 800086c:	0752      	lsls	r2, r2, #29
 800086e:	4313      	orrs	r3, r2
 8000870:	4652      	mov	r2, sl
 8000872:	0037      	movs	r7, r6
 8000874:	08d1      	lsrs	r1, r2, #3
 8000876:	4a43      	ldr	r2, [pc, #268]	; (8000984 <__aeabi_dadd+0x36c>)
 8000878:	4297      	cmp	r7, r2
 800087a:	d01f      	beq.n	80008bc <__aeabi_dadd+0x2a4>
 800087c:	0309      	lsls	r1, r1, #12
 800087e:	057a      	lsls	r2, r7, #21
 8000880:	0b0c      	lsrs	r4, r1, #12
 8000882:	0d52      	lsrs	r2, r2, #21
 8000884:	e764      	b.n	8000750 <__aeabi_dadd+0x138>
 8000886:	4642      	mov	r2, r8
 8000888:	464c      	mov	r4, r9
 800088a:	4314      	orrs	r4, r2
 800088c:	1e62      	subs	r2, r4, #1
 800088e:	4194      	sbcs	r4, r2
 8000890:	18e4      	adds	r4, r4, r3
 8000892:	429c      	cmp	r4, r3
 8000894:	4192      	sbcs	r2, r2
 8000896:	4252      	negs	r2, r2
 8000898:	4692      	mov	sl, r2
 800089a:	448a      	add	sl, r1
 800089c:	4653      	mov	r3, sl
 800089e:	021b      	lsls	r3, r3, #8
 80008a0:	d5df      	bpl.n	8000862 <__aeabi_dadd+0x24a>
 80008a2:	4b38      	ldr	r3, [pc, #224]	; (8000984 <__aeabi_dadd+0x36c>)
 80008a4:	3601      	adds	r6, #1
 80008a6:	429e      	cmp	r6, r3
 80008a8:	d000      	beq.n	80008ac <__aeabi_dadd+0x294>
 80008aa:	e0b3      	b.n	8000a14 <__aeabi_dadd+0x3fc>
 80008ac:	0032      	movs	r2, r6
 80008ae:	2400      	movs	r4, #0
 80008b0:	2300      	movs	r3, #0
 80008b2:	e74d      	b.n	8000750 <__aeabi_dadd+0x138>
 80008b4:	074a      	lsls	r2, r1, #29
 80008b6:	08db      	lsrs	r3, r3, #3
 80008b8:	4313      	orrs	r3, r2
 80008ba:	08c9      	lsrs	r1, r1, #3
 80008bc:	001a      	movs	r2, r3
 80008be:	430a      	orrs	r2, r1
 80008c0:	d100      	bne.n	80008c4 <__aeabi_dadd+0x2ac>
 80008c2:	e200      	b.n	8000cc6 <__aeabi_dadd+0x6ae>
 80008c4:	2480      	movs	r4, #128	; 0x80
 80008c6:	0324      	lsls	r4, r4, #12
 80008c8:	430c      	orrs	r4, r1
 80008ca:	0324      	lsls	r4, r4, #12
 80008cc:	4a2d      	ldr	r2, [pc, #180]	; (8000984 <__aeabi_dadd+0x36c>)
 80008ce:	0b24      	lsrs	r4, r4, #12
 80008d0:	e73e      	b.n	8000750 <__aeabi_dadd+0x138>
 80008d2:	0020      	movs	r0, r4
 80008d4:	f001 fdb6 	bl	8002444 <__clzsi2>
 80008d8:	0003      	movs	r3, r0
 80008da:	3318      	adds	r3, #24
 80008dc:	2b1f      	cmp	r3, #31
 80008de:	dc00      	bgt.n	80008e2 <__aeabi_dadd+0x2ca>
 80008e0:	e6f7      	b.n	80006d2 <__aeabi_dadd+0xba>
 80008e2:	0022      	movs	r2, r4
 80008e4:	3808      	subs	r0, #8
 80008e6:	4082      	lsls	r2, r0
 80008e8:	2400      	movs	r4, #0
 80008ea:	42b3      	cmp	r3, r6
 80008ec:	db00      	blt.n	80008f0 <__aeabi_dadd+0x2d8>
 80008ee:	e6fc      	b.n	80006ea <__aeabi_dadd+0xd2>
 80008f0:	1af6      	subs	r6, r6, r3
 80008f2:	4b25      	ldr	r3, [pc, #148]	; (8000988 <__aeabi_dadd+0x370>)
 80008f4:	401a      	ands	r2, r3
 80008f6:	4692      	mov	sl, r2
 80008f8:	e70a      	b.n	8000710 <__aeabi_dadd+0xf8>
 80008fa:	2f00      	cmp	r7, #0
 80008fc:	d02b      	beq.n	8000956 <__aeabi_dadd+0x33e>
 80008fe:	1b97      	subs	r7, r2, r6
 8000900:	2e00      	cmp	r6, #0
 8000902:	d100      	bne.n	8000906 <__aeabi_dadd+0x2ee>
 8000904:	e0b8      	b.n	8000a78 <__aeabi_dadd+0x460>
 8000906:	4c1f      	ldr	r4, [pc, #124]	; (8000984 <__aeabi_dadd+0x36c>)
 8000908:	42a2      	cmp	r2, r4
 800090a:	d100      	bne.n	800090e <__aeabi_dadd+0x2f6>
 800090c:	e11c      	b.n	8000b48 <__aeabi_dadd+0x530>
 800090e:	2480      	movs	r4, #128	; 0x80
 8000910:	0424      	lsls	r4, r4, #16
 8000912:	4321      	orrs	r1, r4
 8000914:	2f38      	cmp	r7, #56	; 0x38
 8000916:	dd00      	ble.n	800091a <__aeabi_dadd+0x302>
 8000918:	e11e      	b.n	8000b58 <__aeabi_dadd+0x540>
 800091a:	2f1f      	cmp	r7, #31
 800091c:	dd00      	ble.n	8000920 <__aeabi_dadd+0x308>
 800091e:	e19e      	b.n	8000c5e <__aeabi_dadd+0x646>
 8000920:	2620      	movs	r6, #32
 8000922:	000c      	movs	r4, r1
 8000924:	1bf6      	subs	r6, r6, r7
 8000926:	0018      	movs	r0, r3
 8000928:	40b3      	lsls	r3, r6
 800092a:	40b4      	lsls	r4, r6
 800092c:	40f8      	lsrs	r0, r7
 800092e:	1e5e      	subs	r6, r3, #1
 8000930:	41b3      	sbcs	r3, r6
 8000932:	40f9      	lsrs	r1, r7
 8000934:	4304      	orrs	r4, r0
 8000936:	431c      	orrs	r4, r3
 8000938:	4489      	add	r9, r1
 800093a:	4444      	add	r4, r8
 800093c:	4544      	cmp	r4, r8
 800093e:	419b      	sbcs	r3, r3
 8000940:	425b      	negs	r3, r3
 8000942:	444b      	add	r3, r9
 8000944:	469a      	mov	sl, r3
 8000946:	0016      	movs	r6, r2
 8000948:	e7a8      	b.n	800089c <__aeabi_dadd+0x284>
 800094a:	4642      	mov	r2, r8
 800094c:	464c      	mov	r4, r9
 800094e:	4314      	orrs	r4, r2
 8000950:	1e62      	subs	r2, r4, #1
 8000952:	4194      	sbcs	r4, r2
 8000954:	e6a6      	b.n	80006a4 <__aeabi_dadd+0x8c>
 8000956:	4c0d      	ldr	r4, [pc, #52]	; (800098c <__aeabi_dadd+0x374>)
 8000958:	1c72      	adds	r2, r6, #1
 800095a:	4222      	tst	r2, r4
 800095c:	d000      	beq.n	8000960 <__aeabi_dadd+0x348>
 800095e:	e0a8      	b.n	8000ab2 <__aeabi_dadd+0x49a>
 8000960:	000a      	movs	r2, r1
 8000962:	431a      	orrs	r2, r3
 8000964:	2e00      	cmp	r6, #0
 8000966:	d000      	beq.n	800096a <__aeabi_dadd+0x352>
 8000968:	e10a      	b.n	8000b80 <__aeabi_dadd+0x568>
 800096a:	2a00      	cmp	r2, #0
 800096c:	d100      	bne.n	8000970 <__aeabi_dadd+0x358>
 800096e:	e15e      	b.n	8000c2e <__aeabi_dadd+0x616>
 8000970:	464a      	mov	r2, r9
 8000972:	4302      	orrs	r2, r0
 8000974:	d000      	beq.n	8000978 <__aeabi_dadd+0x360>
 8000976:	e161      	b.n	8000c3c <__aeabi_dadd+0x624>
 8000978:	074a      	lsls	r2, r1, #29
 800097a:	08db      	lsrs	r3, r3, #3
 800097c:	4313      	orrs	r3, r2
 800097e:	08c9      	lsrs	r1, r1, #3
 8000980:	e77c      	b.n	800087c <__aeabi_dadd+0x264>
 8000982:	46c0      	nop			; (mov r8, r8)
 8000984:	000007ff 	.word	0x000007ff
 8000988:	ff7fffff 	.word	0xff7fffff
 800098c:	000007fe 	.word	0x000007fe
 8000990:	4ccf      	ldr	r4, [pc, #828]	; (8000cd0 <__aeabi_dadd+0x6b8>)
 8000992:	42a2      	cmp	r2, r4
 8000994:	d100      	bne.n	8000998 <__aeabi_dadd+0x380>
 8000996:	e0ce      	b.n	8000b36 <__aeabi_dadd+0x51e>
 8000998:	2480      	movs	r4, #128	; 0x80
 800099a:	0424      	lsls	r4, r4, #16
 800099c:	4321      	orrs	r1, r4
 800099e:	2f38      	cmp	r7, #56	; 0x38
 80009a0:	dc5b      	bgt.n	8000a5a <__aeabi_dadd+0x442>
 80009a2:	2f1f      	cmp	r7, #31
 80009a4:	dd00      	ble.n	80009a8 <__aeabi_dadd+0x390>
 80009a6:	e0dc      	b.n	8000b62 <__aeabi_dadd+0x54a>
 80009a8:	2520      	movs	r5, #32
 80009aa:	000c      	movs	r4, r1
 80009ac:	1bed      	subs	r5, r5, r7
 80009ae:	001e      	movs	r6, r3
 80009b0:	40ab      	lsls	r3, r5
 80009b2:	40ac      	lsls	r4, r5
 80009b4:	40fe      	lsrs	r6, r7
 80009b6:	1e5d      	subs	r5, r3, #1
 80009b8:	41ab      	sbcs	r3, r5
 80009ba:	4334      	orrs	r4, r6
 80009bc:	40f9      	lsrs	r1, r7
 80009be:	431c      	orrs	r4, r3
 80009c0:	464b      	mov	r3, r9
 80009c2:	1a5b      	subs	r3, r3, r1
 80009c4:	4699      	mov	r9, r3
 80009c6:	e04c      	b.n	8000a62 <__aeabi_dadd+0x44a>
 80009c8:	464a      	mov	r2, r9
 80009ca:	1a1c      	subs	r4, r3, r0
 80009cc:	1a88      	subs	r0, r1, r2
 80009ce:	42a3      	cmp	r3, r4
 80009d0:	4192      	sbcs	r2, r2
 80009d2:	4252      	negs	r2, r2
 80009d4:	4692      	mov	sl, r2
 80009d6:	0002      	movs	r2, r0
 80009d8:	4650      	mov	r0, sl
 80009da:	1a12      	subs	r2, r2, r0
 80009dc:	4692      	mov	sl, r2
 80009de:	0212      	lsls	r2, r2, #8
 80009e0:	d478      	bmi.n	8000ad4 <__aeabi_dadd+0x4bc>
 80009e2:	4653      	mov	r3, sl
 80009e4:	4323      	orrs	r3, r4
 80009e6:	d000      	beq.n	80009ea <__aeabi_dadd+0x3d2>
 80009e8:	e66a      	b.n	80006c0 <__aeabi_dadd+0xa8>
 80009ea:	2100      	movs	r1, #0
 80009ec:	2500      	movs	r5, #0
 80009ee:	e745      	b.n	800087c <__aeabi_dadd+0x264>
 80009f0:	074a      	lsls	r2, r1, #29
 80009f2:	08db      	lsrs	r3, r3, #3
 80009f4:	4313      	orrs	r3, r2
 80009f6:	08c9      	lsrs	r1, r1, #3
 80009f8:	e73d      	b.n	8000876 <__aeabi_dadd+0x25e>
 80009fa:	181c      	adds	r4, r3, r0
 80009fc:	429c      	cmp	r4, r3
 80009fe:	419b      	sbcs	r3, r3
 8000a00:	4449      	add	r1, r9
 8000a02:	468a      	mov	sl, r1
 8000a04:	425b      	negs	r3, r3
 8000a06:	449a      	add	sl, r3
 8000a08:	4653      	mov	r3, sl
 8000a0a:	2601      	movs	r6, #1
 8000a0c:	021b      	lsls	r3, r3, #8
 8000a0e:	d400      	bmi.n	8000a12 <__aeabi_dadd+0x3fa>
 8000a10:	e727      	b.n	8000862 <__aeabi_dadd+0x24a>
 8000a12:	2602      	movs	r6, #2
 8000a14:	4652      	mov	r2, sl
 8000a16:	4baf      	ldr	r3, [pc, #700]	; (8000cd4 <__aeabi_dadd+0x6bc>)
 8000a18:	2101      	movs	r1, #1
 8000a1a:	401a      	ands	r2, r3
 8000a1c:	0013      	movs	r3, r2
 8000a1e:	4021      	ands	r1, r4
 8000a20:	0862      	lsrs	r2, r4, #1
 8000a22:	430a      	orrs	r2, r1
 8000a24:	07dc      	lsls	r4, r3, #31
 8000a26:	085b      	lsrs	r3, r3, #1
 8000a28:	469a      	mov	sl, r3
 8000a2a:	4314      	orrs	r4, r2
 8000a2c:	e670      	b.n	8000710 <__aeabi_dadd+0xf8>
 8000a2e:	003a      	movs	r2, r7
 8000a30:	464c      	mov	r4, r9
 8000a32:	3a20      	subs	r2, #32
 8000a34:	40d4      	lsrs	r4, r2
 8000a36:	46a4      	mov	ip, r4
 8000a38:	2f20      	cmp	r7, #32
 8000a3a:	d007      	beq.n	8000a4c <__aeabi_dadd+0x434>
 8000a3c:	2240      	movs	r2, #64	; 0x40
 8000a3e:	4648      	mov	r0, r9
 8000a40:	1bd2      	subs	r2, r2, r7
 8000a42:	4090      	lsls	r0, r2
 8000a44:	0002      	movs	r2, r0
 8000a46:	4640      	mov	r0, r8
 8000a48:	4310      	orrs	r0, r2
 8000a4a:	4680      	mov	r8, r0
 8000a4c:	4640      	mov	r0, r8
 8000a4e:	1e42      	subs	r2, r0, #1
 8000a50:	4190      	sbcs	r0, r2
 8000a52:	4662      	mov	r2, ip
 8000a54:	0004      	movs	r4, r0
 8000a56:	4314      	orrs	r4, r2
 8000a58:	e624      	b.n	80006a4 <__aeabi_dadd+0x8c>
 8000a5a:	4319      	orrs	r1, r3
 8000a5c:	000c      	movs	r4, r1
 8000a5e:	1e63      	subs	r3, r4, #1
 8000a60:	419c      	sbcs	r4, r3
 8000a62:	4643      	mov	r3, r8
 8000a64:	1b1c      	subs	r4, r3, r4
 8000a66:	45a0      	cmp	r8, r4
 8000a68:	419b      	sbcs	r3, r3
 8000a6a:	4649      	mov	r1, r9
 8000a6c:	425b      	negs	r3, r3
 8000a6e:	1acb      	subs	r3, r1, r3
 8000a70:	469a      	mov	sl, r3
 8000a72:	4665      	mov	r5, ip
 8000a74:	0016      	movs	r6, r2
 8000a76:	e61b      	b.n	80006b0 <__aeabi_dadd+0x98>
 8000a78:	000c      	movs	r4, r1
 8000a7a:	431c      	orrs	r4, r3
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_dadd+0x468>
 8000a7e:	e0c7      	b.n	8000c10 <__aeabi_dadd+0x5f8>
 8000a80:	1e7c      	subs	r4, r7, #1
 8000a82:	2f01      	cmp	r7, #1
 8000a84:	d100      	bne.n	8000a88 <__aeabi_dadd+0x470>
 8000a86:	e0f9      	b.n	8000c7c <__aeabi_dadd+0x664>
 8000a88:	4e91      	ldr	r6, [pc, #580]	; (8000cd0 <__aeabi_dadd+0x6b8>)
 8000a8a:	42b7      	cmp	r7, r6
 8000a8c:	d05c      	beq.n	8000b48 <__aeabi_dadd+0x530>
 8000a8e:	0027      	movs	r7, r4
 8000a90:	e740      	b.n	8000914 <__aeabi_dadd+0x2fc>
 8000a92:	2220      	movs	r2, #32
 8000a94:	464c      	mov	r4, r9
 8000a96:	4640      	mov	r0, r8
 8000a98:	1bd2      	subs	r2, r2, r7
 8000a9a:	4094      	lsls	r4, r2
 8000a9c:	40f8      	lsrs	r0, r7
 8000a9e:	4304      	orrs	r4, r0
 8000aa0:	4640      	mov	r0, r8
 8000aa2:	4090      	lsls	r0, r2
 8000aa4:	1e42      	subs	r2, r0, #1
 8000aa6:	4190      	sbcs	r0, r2
 8000aa8:	464a      	mov	r2, r9
 8000aaa:	40fa      	lsrs	r2, r7
 8000aac:	4304      	orrs	r4, r0
 8000aae:	1889      	adds	r1, r1, r2
 8000ab0:	e6ee      	b.n	8000890 <__aeabi_dadd+0x278>
 8000ab2:	4c87      	ldr	r4, [pc, #540]	; (8000cd0 <__aeabi_dadd+0x6b8>)
 8000ab4:	42a2      	cmp	r2, r4
 8000ab6:	d100      	bne.n	8000aba <__aeabi_dadd+0x4a2>
 8000ab8:	e6f9      	b.n	80008ae <__aeabi_dadd+0x296>
 8000aba:	1818      	adds	r0, r3, r0
 8000abc:	4298      	cmp	r0, r3
 8000abe:	419b      	sbcs	r3, r3
 8000ac0:	4449      	add	r1, r9
 8000ac2:	425b      	negs	r3, r3
 8000ac4:	18cb      	adds	r3, r1, r3
 8000ac6:	07dc      	lsls	r4, r3, #31
 8000ac8:	0840      	lsrs	r0, r0, #1
 8000aca:	085b      	lsrs	r3, r3, #1
 8000acc:	469a      	mov	sl, r3
 8000ace:	0016      	movs	r6, r2
 8000ad0:	4304      	orrs	r4, r0
 8000ad2:	e6c6      	b.n	8000862 <__aeabi_dadd+0x24a>
 8000ad4:	4642      	mov	r2, r8
 8000ad6:	1ad4      	subs	r4, r2, r3
 8000ad8:	45a0      	cmp	r8, r4
 8000ada:	4180      	sbcs	r0, r0
 8000adc:	464b      	mov	r3, r9
 8000ade:	4240      	negs	r0, r0
 8000ae0:	1a59      	subs	r1, r3, r1
 8000ae2:	1a0b      	subs	r3, r1, r0
 8000ae4:	469a      	mov	sl, r3
 8000ae6:	4665      	mov	r5, ip
 8000ae8:	e5ea      	b.n	80006c0 <__aeabi_dadd+0xa8>
 8000aea:	464b      	mov	r3, r9
 8000aec:	464a      	mov	r2, r9
 8000aee:	08c0      	lsrs	r0, r0, #3
 8000af0:	075b      	lsls	r3, r3, #29
 8000af2:	4665      	mov	r5, ip
 8000af4:	4303      	orrs	r3, r0
 8000af6:	08d1      	lsrs	r1, r2, #3
 8000af8:	e6bd      	b.n	8000876 <__aeabi_dadd+0x25e>
 8000afa:	2a00      	cmp	r2, #0
 8000afc:	d000      	beq.n	8000b00 <__aeabi_dadd+0x4e8>
 8000afe:	e08e      	b.n	8000c1e <__aeabi_dadd+0x606>
 8000b00:	464b      	mov	r3, r9
 8000b02:	4303      	orrs	r3, r0
 8000b04:	d117      	bne.n	8000b36 <__aeabi_dadd+0x51e>
 8000b06:	2180      	movs	r1, #128	; 0x80
 8000b08:	2500      	movs	r5, #0
 8000b0a:	0309      	lsls	r1, r1, #12
 8000b0c:	e6da      	b.n	80008c4 <__aeabi_dadd+0x2ac>
 8000b0e:	074a      	lsls	r2, r1, #29
 8000b10:	08db      	lsrs	r3, r3, #3
 8000b12:	4313      	orrs	r3, r2
 8000b14:	08c9      	lsrs	r1, r1, #3
 8000b16:	e6d1      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000b18:	1a1c      	subs	r4, r3, r0
 8000b1a:	464a      	mov	r2, r9
 8000b1c:	42a3      	cmp	r3, r4
 8000b1e:	419b      	sbcs	r3, r3
 8000b20:	1a89      	subs	r1, r1, r2
 8000b22:	425b      	negs	r3, r3
 8000b24:	1acb      	subs	r3, r1, r3
 8000b26:	469a      	mov	sl, r3
 8000b28:	2601      	movs	r6, #1
 8000b2a:	e5c1      	b.n	80006b0 <__aeabi_dadd+0x98>
 8000b2c:	074a      	lsls	r2, r1, #29
 8000b2e:	08db      	lsrs	r3, r3, #3
 8000b30:	4313      	orrs	r3, r2
 8000b32:	08c9      	lsrs	r1, r1, #3
 8000b34:	e69f      	b.n	8000876 <__aeabi_dadd+0x25e>
 8000b36:	4643      	mov	r3, r8
 8000b38:	08d8      	lsrs	r0, r3, #3
 8000b3a:	464b      	mov	r3, r9
 8000b3c:	464a      	mov	r2, r9
 8000b3e:	075b      	lsls	r3, r3, #29
 8000b40:	4665      	mov	r5, ip
 8000b42:	4303      	orrs	r3, r0
 8000b44:	08d1      	lsrs	r1, r2, #3
 8000b46:	e6b9      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000b48:	4643      	mov	r3, r8
 8000b4a:	08d8      	lsrs	r0, r3, #3
 8000b4c:	464b      	mov	r3, r9
 8000b4e:	464a      	mov	r2, r9
 8000b50:	075b      	lsls	r3, r3, #29
 8000b52:	4303      	orrs	r3, r0
 8000b54:	08d1      	lsrs	r1, r2, #3
 8000b56:	e6b1      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000b58:	4319      	orrs	r1, r3
 8000b5a:	000c      	movs	r4, r1
 8000b5c:	1e63      	subs	r3, r4, #1
 8000b5e:	419c      	sbcs	r4, r3
 8000b60:	e6eb      	b.n	800093a <__aeabi_dadd+0x322>
 8000b62:	003c      	movs	r4, r7
 8000b64:	000d      	movs	r5, r1
 8000b66:	3c20      	subs	r4, #32
 8000b68:	40e5      	lsrs	r5, r4
 8000b6a:	2f20      	cmp	r7, #32
 8000b6c:	d003      	beq.n	8000b76 <__aeabi_dadd+0x55e>
 8000b6e:	2440      	movs	r4, #64	; 0x40
 8000b70:	1be4      	subs	r4, r4, r7
 8000b72:	40a1      	lsls	r1, r4
 8000b74:	430b      	orrs	r3, r1
 8000b76:	001c      	movs	r4, r3
 8000b78:	1e63      	subs	r3, r4, #1
 8000b7a:	419c      	sbcs	r4, r3
 8000b7c:	432c      	orrs	r4, r5
 8000b7e:	e770      	b.n	8000a62 <__aeabi_dadd+0x44a>
 8000b80:	2a00      	cmp	r2, #0
 8000b82:	d0e1      	beq.n	8000b48 <__aeabi_dadd+0x530>
 8000b84:	464a      	mov	r2, r9
 8000b86:	4302      	orrs	r2, r0
 8000b88:	d0c1      	beq.n	8000b0e <__aeabi_dadd+0x4f6>
 8000b8a:	074a      	lsls	r2, r1, #29
 8000b8c:	08db      	lsrs	r3, r3, #3
 8000b8e:	4313      	orrs	r3, r2
 8000b90:	2280      	movs	r2, #128	; 0x80
 8000b92:	08c9      	lsrs	r1, r1, #3
 8000b94:	0312      	lsls	r2, r2, #12
 8000b96:	4211      	tst	r1, r2
 8000b98:	d008      	beq.n	8000bac <__aeabi_dadd+0x594>
 8000b9a:	4648      	mov	r0, r9
 8000b9c:	08c4      	lsrs	r4, r0, #3
 8000b9e:	4214      	tst	r4, r2
 8000ba0:	d104      	bne.n	8000bac <__aeabi_dadd+0x594>
 8000ba2:	4643      	mov	r3, r8
 8000ba4:	0021      	movs	r1, r4
 8000ba6:	08db      	lsrs	r3, r3, #3
 8000ba8:	0742      	lsls	r2, r0, #29
 8000baa:	4313      	orrs	r3, r2
 8000bac:	0f5a      	lsrs	r2, r3, #29
 8000bae:	00db      	lsls	r3, r3, #3
 8000bb0:	0752      	lsls	r2, r2, #29
 8000bb2:	08db      	lsrs	r3, r3, #3
 8000bb4:	4313      	orrs	r3, r2
 8000bb6:	e681      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000bb8:	464b      	mov	r3, r9
 8000bba:	4303      	orrs	r3, r0
 8000bbc:	d100      	bne.n	8000bc0 <__aeabi_dadd+0x5a8>
 8000bbe:	e714      	b.n	80009ea <__aeabi_dadd+0x3d2>
 8000bc0:	464b      	mov	r3, r9
 8000bc2:	464a      	mov	r2, r9
 8000bc4:	08c0      	lsrs	r0, r0, #3
 8000bc6:	075b      	lsls	r3, r3, #29
 8000bc8:	4665      	mov	r5, ip
 8000bca:	4303      	orrs	r3, r0
 8000bcc:	08d1      	lsrs	r1, r2, #3
 8000bce:	e655      	b.n	800087c <__aeabi_dadd+0x264>
 8000bd0:	1ac4      	subs	r4, r0, r3
 8000bd2:	45a0      	cmp	r8, r4
 8000bd4:	4180      	sbcs	r0, r0
 8000bd6:	464b      	mov	r3, r9
 8000bd8:	4240      	negs	r0, r0
 8000bda:	1a59      	subs	r1, r3, r1
 8000bdc:	1a0b      	subs	r3, r1, r0
 8000bde:	469a      	mov	sl, r3
 8000be0:	4665      	mov	r5, ip
 8000be2:	2601      	movs	r6, #1
 8000be4:	e564      	b.n	80006b0 <__aeabi_dadd+0x98>
 8000be6:	1a1c      	subs	r4, r3, r0
 8000be8:	464a      	mov	r2, r9
 8000bea:	42a3      	cmp	r3, r4
 8000bec:	4180      	sbcs	r0, r0
 8000bee:	1a8a      	subs	r2, r1, r2
 8000bf0:	4240      	negs	r0, r0
 8000bf2:	1a12      	subs	r2, r2, r0
 8000bf4:	4692      	mov	sl, r2
 8000bf6:	0212      	lsls	r2, r2, #8
 8000bf8:	d549      	bpl.n	8000c8e <__aeabi_dadd+0x676>
 8000bfa:	4642      	mov	r2, r8
 8000bfc:	1ad4      	subs	r4, r2, r3
 8000bfe:	45a0      	cmp	r8, r4
 8000c00:	4180      	sbcs	r0, r0
 8000c02:	464b      	mov	r3, r9
 8000c04:	4240      	negs	r0, r0
 8000c06:	1a59      	subs	r1, r3, r1
 8000c08:	1a0b      	subs	r3, r1, r0
 8000c0a:	469a      	mov	sl, r3
 8000c0c:	4665      	mov	r5, ip
 8000c0e:	e57f      	b.n	8000710 <__aeabi_dadd+0xf8>
 8000c10:	464b      	mov	r3, r9
 8000c12:	464a      	mov	r2, r9
 8000c14:	08c0      	lsrs	r0, r0, #3
 8000c16:	075b      	lsls	r3, r3, #29
 8000c18:	4303      	orrs	r3, r0
 8000c1a:	08d1      	lsrs	r1, r2, #3
 8000c1c:	e62b      	b.n	8000876 <__aeabi_dadd+0x25e>
 8000c1e:	464a      	mov	r2, r9
 8000c20:	08db      	lsrs	r3, r3, #3
 8000c22:	4302      	orrs	r2, r0
 8000c24:	d138      	bne.n	8000c98 <__aeabi_dadd+0x680>
 8000c26:	074a      	lsls	r2, r1, #29
 8000c28:	4313      	orrs	r3, r2
 8000c2a:	08c9      	lsrs	r1, r1, #3
 8000c2c:	e646      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000c2e:	464b      	mov	r3, r9
 8000c30:	464a      	mov	r2, r9
 8000c32:	08c0      	lsrs	r0, r0, #3
 8000c34:	075b      	lsls	r3, r3, #29
 8000c36:	4303      	orrs	r3, r0
 8000c38:	08d1      	lsrs	r1, r2, #3
 8000c3a:	e61f      	b.n	800087c <__aeabi_dadd+0x264>
 8000c3c:	181c      	adds	r4, r3, r0
 8000c3e:	429c      	cmp	r4, r3
 8000c40:	419b      	sbcs	r3, r3
 8000c42:	4449      	add	r1, r9
 8000c44:	468a      	mov	sl, r1
 8000c46:	425b      	negs	r3, r3
 8000c48:	449a      	add	sl, r3
 8000c4a:	4653      	mov	r3, sl
 8000c4c:	021b      	lsls	r3, r3, #8
 8000c4e:	d400      	bmi.n	8000c52 <__aeabi_dadd+0x63a>
 8000c50:	e607      	b.n	8000862 <__aeabi_dadd+0x24a>
 8000c52:	4652      	mov	r2, sl
 8000c54:	4b1f      	ldr	r3, [pc, #124]	; (8000cd4 <__aeabi_dadd+0x6bc>)
 8000c56:	2601      	movs	r6, #1
 8000c58:	401a      	ands	r2, r3
 8000c5a:	4692      	mov	sl, r2
 8000c5c:	e601      	b.n	8000862 <__aeabi_dadd+0x24a>
 8000c5e:	003c      	movs	r4, r7
 8000c60:	000e      	movs	r6, r1
 8000c62:	3c20      	subs	r4, #32
 8000c64:	40e6      	lsrs	r6, r4
 8000c66:	2f20      	cmp	r7, #32
 8000c68:	d003      	beq.n	8000c72 <__aeabi_dadd+0x65a>
 8000c6a:	2440      	movs	r4, #64	; 0x40
 8000c6c:	1be4      	subs	r4, r4, r7
 8000c6e:	40a1      	lsls	r1, r4
 8000c70:	430b      	orrs	r3, r1
 8000c72:	001c      	movs	r4, r3
 8000c74:	1e63      	subs	r3, r4, #1
 8000c76:	419c      	sbcs	r4, r3
 8000c78:	4334      	orrs	r4, r6
 8000c7a:	e65e      	b.n	800093a <__aeabi_dadd+0x322>
 8000c7c:	4443      	add	r3, r8
 8000c7e:	4283      	cmp	r3, r0
 8000c80:	4180      	sbcs	r0, r0
 8000c82:	4449      	add	r1, r9
 8000c84:	468a      	mov	sl, r1
 8000c86:	4240      	negs	r0, r0
 8000c88:	001c      	movs	r4, r3
 8000c8a:	4482      	add	sl, r0
 8000c8c:	e6bc      	b.n	8000a08 <__aeabi_dadd+0x3f0>
 8000c8e:	4653      	mov	r3, sl
 8000c90:	4323      	orrs	r3, r4
 8000c92:	d100      	bne.n	8000c96 <__aeabi_dadd+0x67e>
 8000c94:	e6a9      	b.n	80009ea <__aeabi_dadd+0x3d2>
 8000c96:	e5e4      	b.n	8000862 <__aeabi_dadd+0x24a>
 8000c98:	074a      	lsls	r2, r1, #29
 8000c9a:	4313      	orrs	r3, r2
 8000c9c:	2280      	movs	r2, #128	; 0x80
 8000c9e:	08c9      	lsrs	r1, r1, #3
 8000ca0:	0312      	lsls	r2, r2, #12
 8000ca2:	4211      	tst	r1, r2
 8000ca4:	d009      	beq.n	8000cba <__aeabi_dadd+0x6a2>
 8000ca6:	4648      	mov	r0, r9
 8000ca8:	08c4      	lsrs	r4, r0, #3
 8000caa:	4214      	tst	r4, r2
 8000cac:	d105      	bne.n	8000cba <__aeabi_dadd+0x6a2>
 8000cae:	4643      	mov	r3, r8
 8000cb0:	4665      	mov	r5, ip
 8000cb2:	0021      	movs	r1, r4
 8000cb4:	08db      	lsrs	r3, r3, #3
 8000cb6:	0742      	lsls	r2, r0, #29
 8000cb8:	4313      	orrs	r3, r2
 8000cba:	0f5a      	lsrs	r2, r3, #29
 8000cbc:	00db      	lsls	r3, r3, #3
 8000cbe:	08db      	lsrs	r3, r3, #3
 8000cc0:	0752      	lsls	r2, r2, #29
 8000cc2:	4313      	orrs	r3, r2
 8000cc4:	e5fa      	b.n	80008bc <__aeabi_dadd+0x2a4>
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	4a01      	ldr	r2, [pc, #4]	; (8000cd0 <__aeabi_dadd+0x6b8>)
 8000cca:	001c      	movs	r4, r3
 8000ccc:	e540      	b.n	8000750 <__aeabi_dadd+0x138>
 8000cce:	46c0      	nop			; (mov r8, r8)
 8000cd0:	000007ff 	.word	0x000007ff
 8000cd4:	ff7fffff 	.word	0xff7fffff

08000cd8 <__aeabi_ddiv>:
 8000cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cda:	4657      	mov	r7, sl
 8000cdc:	464e      	mov	r6, r9
 8000cde:	4645      	mov	r5, r8
 8000ce0:	46de      	mov	lr, fp
 8000ce2:	b5e0      	push	{r5, r6, r7, lr}
 8000ce4:	030c      	lsls	r4, r1, #12
 8000ce6:	001f      	movs	r7, r3
 8000ce8:	004b      	lsls	r3, r1, #1
 8000cea:	4681      	mov	r9, r0
 8000cec:	4692      	mov	sl, r2
 8000cee:	0005      	movs	r5, r0
 8000cf0:	b085      	sub	sp, #20
 8000cf2:	0b24      	lsrs	r4, r4, #12
 8000cf4:	0d5b      	lsrs	r3, r3, #21
 8000cf6:	0fce      	lsrs	r6, r1, #31
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	d100      	bne.n	8000cfe <__aeabi_ddiv+0x26>
 8000cfc:	e152      	b.n	8000fa4 <__aeabi_ddiv+0x2cc>
 8000cfe:	4ad2      	ldr	r2, [pc, #840]	; (8001048 <__aeabi_ddiv+0x370>)
 8000d00:	4293      	cmp	r3, r2
 8000d02:	d100      	bne.n	8000d06 <__aeabi_ddiv+0x2e>
 8000d04:	e16e      	b.n	8000fe4 <__aeabi_ddiv+0x30c>
 8000d06:	0f42      	lsrs	r2, r0, #29
 8000d08:	00e4      	lsls	r4, r4, #3
 8000d0a:	4314      	orrs	r4, r2
 8000d0c:	2280      	movs	r2, #128	; 0x80
 8000d0e:	0412      	lsls	r2, r2, #16
 8000d10:	4322      	orrs	r2, r4
 8000d12:	4690      	mov	r8, r2
 8000d14:	4acd      	ldr	r2, [pc, #820]	; (800104c <__aeabi_ddiv+0x374>)
 8000d16:	00c5      	lsls	r5, r0, #3
 8000d18:	4693      	mov	fp, r2
 8000d1a:	449b      	add	fp, r3
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	4699      	mov	r9, r3
 8000d20:	9300      	str	r3, [sp, #0]
 8000d22:	033c      	lsls	r4, r7, #12
 8000d24:	007b      	lsls	r3, r7, #1
 8000d26:	4650      	mov	r0, sl
 8000d28:	0b24      	lsrs	r4, r4, #12
 8000d2a:	0d5b      	lsrs	r3, r3, #21
 8000d2c:	0fff      	lsrs	r7, r7, #31
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d100      	bne.n	8000d34 <__aeabi_ddiv+0x5c>
 8000d32:	e11a      	b.n	8000f6a <__aeabi_ddiv+0x292>
 8000d34:	4ac4      	ldr	r2, [pc, #784]	; (8001048 <__aeabi_ddiv+0x370>)
 8000d36:	4293      	cmp	r3, r2
 8000d38:	d100      	bne.n	8000d3c <__aeabi_ddiv+0x64>
 8000d3a:	e15e      	b.n	8000ffa <__aeabi_ddiv+0x322>
 8000d3c:	0f42      	lsrs	r2, r0, #29
 8000d3e:	00e4      	lsls	r4, r4, #3
 8000d40:	4322      	orrs	r2, r4
 8000d42:	2480      	movs	r4, #128	; 0x80
 8000d44:	0424      	lsls	r4, r4, #16
 8000d46:	4314      	orrs	r4, r2
 8000d48:	4ac0      	ldr	r2, [pc, #768]	; (800104c <__aeabi_ddiv+0x374>)
 8000d4a:	00c1      	lsls	r1, r0, #3
 8000d4c:	4694      	mov	ip, r2
 8000d4e:	465a      	mov	r2, fp
 8000d50:	4463      	add	r3, ip
 8000d52:	1ad3      	subs	r3, r2, r3
 8000d54:	469b      	mov	fp, r3
 8000d56:	2000      	movs	r0, #0
 8000d58:	0033      	movs	r3, r6
 8000d5a:	407b      	eors	r3, r7
 8000d5c:	469a      	mov	sl, r3
 8000d5e:	464b      	mov	r3, r9
 8000d60:	2b0f      	cmp	r3, #15
 8000d62:	d827      	bhi.n	8000db4 <__aeabi_ddiv+0xdc>
 8000d64:	4aba      	ldr	r2, [pc, #744]	; (8001050 <__aeabi_ddiv+0x378>)
 8000d66:	009b      	lsls	r3, r3, #2
 8000d68:	58d3      	ldr	r3, [r2, r3]
 8000d6a:	469f      	mov	pc, r3
 8000d6c:	46b2      	mov	sl, r6
 8000d6e:	9b00      	ldr	r3, [sp, #0]
 8000d70:	2b02      	cmp	r3, #2
 8000d72:	d016      	beq.n	8000da2 <__aeabi_ddiv+0xca>
 8000d74:	2b03      	cmp	r3, #3
 8000d76:	d100      	bne.n	8000d7a <__aeabi_ddiv+0xa2>
 8000d78:	e287      	b.n	800128a <__aeabi_ddiv+0x5b2>
 8000d7a:	2b01      	cmp	r3, #1
 8000d7c:	d000      	beq.n	8000d80 <__aeabi_ddiv+0xa8>
 8000d7e:	e0d5      	b.n	8000f2c <__aeabi_ddiv+0x254>
 8000d80:	2300      	movs	r3, #0
 8000d82:	2200      	movs	r2, #0
 8000d84:	2500      	movs	r5, #0
 8000d86:	051b      	lsls	r3, r3, #20
 8000d88:	4313      	orrs	r3, r2
 8000d8a:	4652      	mov	r2, sl
 8000d8c:	07d2      	lsls	r2, r2, #31
 8000d8e:	4313      	orrs	r3, r2
 8000d90:	0028      	movs	r0, r5
 8000d92:	0019      	movs	r1, r3
 8000d94:	b005      	add	sp, #20
 8000d96:	bcf0      	pop	{r4, r5, r6, r7}
 8000d98:	46bb      	mov	fp, r7
 8000d9a:	46b2      	mov	sl, r6
 8000d9c:	46a9      	mov	r9, r5
 8000d9e:	46a0      	mov	r8, r4
 8000da0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000da2:	2200      	movs	r2, #0
 8000da4:	2500      	movs	r5, #0
 8000da6:	4ba8      	ldr	r3, [pc, #672]	; (8001048 <__aeabi_ddiv+0x370>)
 8000da8:	e7ed      	b.n	8000d86 <__aeabi_ddiv+0xae>
 8000daa:	46ba      	mov	sl, r7
 8000dac:	46a0      	mov	r8, r4
 8000dae:	000d      	movs	r5, r1
 8000db0:	9000      	str	r0, [sp, #0]
 8000db2:	e7dc      	b.n	8000d6e <__aeabi_ddiv+0x96>
 8000db4:	4544      	cmp	r4, r8
 8000db6:	d200      	bcs.n	8000dba <__aeabi_ddiv+0xe2>
 8000db8:	e1c4      	b.n	8001144 <__aeabi_ddiv+0x46c>
 8000dba:	d100      	bne.n	8000dbe <__aeabi_ddiv+0xe6>
 8000dbc:	e1bf      	b.n	800113e <__aeabi_ddiv+0x466>
 8000dbe:	2301      	movs	r3, #1
 8000dc0:	425b      	negs	r3, r3
 8000dc2:	469c      	mov	ip, r3
 8000dc4:	002e      	movs	r6, r5
 8000dc6:	4640      	mov	r0, r8
 8000dc8:	2500      	movs	r5, #0
 8000dca:	44e3      	add	fp, ip
 8000dcc:	0223      	lsls	r3, r4, #8
 8000dce:	0e0c      	lsrs	r4, r1, #24
 8000dd0:	431c      	orrs	r4, r3
 8000dd2:	0c1b      	lsrs	r3, r3, #16
 8000dd4:	4699      	mov	r9, r3
 8000dd6:	0423      	lsls	r3, r4, #16
 8000dd8:	020a      	lsls	r2, r1, #8
 8000dda:	0c1f      	lsrs	r7, r3, #16
 8000ddc:	4649      	mov	r1, r9
 8000dde:	9200      	str	r2, [sp, #0]
 8000de0:	9701      	str	r7, [sp, #4]
 8000de2:	f7ff fa33 	bl	800024c <__aeabi_uidivmod>
 8000de6:	0002      	movs	r2, r0
 8000de8:	437a      	muls	r2, r7
 8000dea:	040b      	lsls	r3, r1, #16
 8000dec:	0c31      	lsrs	r1, r6, #16
 8000dee:	4680      	mov	r8, r0
 8000df0:	4319      	orrs	r1, r3
 8000df2:	428a      	cmp	r2, r1
 8000df4:	d907      	bls.n	8000e06 <__aeabi_ddiv+0x12e>
 8000df6:	2301      	movs	r3, #1
 8000df8:	425b      	negs	r3, r3
 8000dfa:	469c      	mov	ip, r3
 8000dfc:	1909      	adds	r1, r1, r4
 8000dfe:	44e0      	add	r8, ip
 8000e00:	428c      	cmp	r4, r1
 8000e02:	d800      	bhi.n	8000e06 <__aeabi_ddiv+0x12e>
 8000e04:	e201      	b.n	800120a <__aeabi_ddiv+0x532>
 8000e06:	1a88      	subs	r0, r1, r2
 8000e08:	4649      	mov	r1, r9
 8000e0a:	f7ff fa1f 	bl	800024c <__aeabi_uidivmod>
 8000e0e:	9a01      	ldr	r2, [sp, #4]
 8000e10:	0436      	lsls	r6, r6, #16
 8000e12:	4342      	muls	r2, r0
 8000e14:	0409      	lsls	r1, r1, #16
 8000e16:	0c36      	lsrs	r6, r6, #16
 8000e18:	0003      	movs	r3, r0
 8000e1a:	430e      	orrs	r6, r1
 8000e1c:	42b2      	cmp	r2, r6
 8000e1e:	d904      	bls.n	8000e2a <__aeabi_ddiv+0x152>
 8000e20:	1936      	adds	r6, r6, r4
 8000e22:	3b01      	subs	r3, #1
 8000e24:	42b4      	cmp	r4, r6
 8000e26:	d800      	bhi.n	8000e2a <__aeabi_ddiv+0x152>
 8000e28:	e1e9      	b.n	80011fe <__aeabi_ddiv+0x526>
 8000e2a:	1ab0      	subs	r0, r6, r2
 8000e2c:	4642      	mov	r2, r8
 8000e2e:	9e00      	ldr	r6, [sp, #0]
 8000e30:	0412      	lsls	r2, r2, #16
 8000e32:	431a      	orrs	r2, r3
 8000e34:	0c33      	lsrs	r3, r6, #16
 8000e36:	001f      	movs	r7, r3
 8000e38:	0c11      	lsrs	r1, r2, #16
 8000e3a:	4690      	mov	r8, r2
 8000e3c:	9302      	str	r3, [sp, #8]
 8000e3e:	0413      	lsls	r3, r2, #16
 8000e40:	0432      	lsls	r2, r6, #16
 8000e42:	0c16      	lsrs	r6, r2, #16
 8000e44:	0032      	movs	r2, r6
 8000e46:	0c1b      	lsrs	r3, r3, #16
 8000e48:	435a      	muls	r2, r3
 8000e4a:	9603      	str	r6, [sp, #12]
 8000e4c:	437b      	muls	r3, r7
 8000e4e:	434e      	muls	r6, r1
 8000e50:	4379      	muls	r1, r7
 8000e52:	0c17      	lsrs	r7, r2, #16
 8000e54:	46bc      	mov	ip, r7
 8000e56:	199b      	adds	r3, r3, r6
 8000e58:	4463      	add	r3, ip
 8000e5a:	429e      	cmp	r6, r3
 8000e5c:	d903      	bls.n	8000e66 <__aeabi_ddiv+0x18e>
 8000e5e:	2680      	movs	r6, #128	; 0x80
 8000e60:	0276      	lsls	r6, r6, #9
 8000e62:	46b4      	mov	ip, r6
 8000e64:	4461      	add	r1, ip
 8000e66:	0c1e      	lsrs	r6, r3, #16
 8000e68:	1871      	adds	r1, r6, r1
 8000e6a:	0416      	lsls	r6, r2, #16
 8000e6c:	041b      	lsls	r3, r3, #16
 8000e6e:	0c36      	lsrs	r6, r6, #16
 8000e70:	199e      	adds	r6, r3, r6
 8000e72:	4288      	cmp	r0, r1
 8000e74:	d302      	bcc.n	8000e7c <__aeabi_ddiv+0x1a4>
 8000e76:	d112      	bne.n	8000e9e <__aeabi_ddiv+0x1c6>
 8000e78:	42b5      	cmp	r5, r6
 8000e7a:	d210      	bcs.n	8000e9e <__aeabi_ddiv+0x1c6>
 8000e7c:	4643      	mov	r3, r8
 8000e7e:	1e5a      	subs	r2, r3, #1
 8000e80:	9b00      	ldr	r3, [sp, #0]
 8000e82:	469c      	mov	ip, r3
 8000e84:	4465      	add	r5, ip
 8000e86:	001f      	movs	r7, r3
 8000e88:	429d      	cmp	r5, r3
 8000e8a:	419b      	sbcs	r3, r3
 8000e8c:	425b      	negs	r3, r3
 8000e8e:	191b      	adds	r3, r3, r4
 8000e90:	18c0      	adds	r0, r0, r3
 8000e92:	4284      	cmp	r4, r0
 8000e94:	d200      	bcs.n	8000e98 <__aeabi_ddiv+0x1c0>
 8000e96:	e19e      	b.n	80011d6 <__aeabi_ddiv+0x4fe>
 8000e98:	d100      	bne.n	8000e9c <__aeabi_ddiv+0x1c4>
 8000e9a:	e199      	b.n	80011d0 <__aeabi_ddiv+0x4f8>
 8000e9c:	4690      	mov	r8, r2
 8000e9e:	1bae      	subs	r6, r5, r6
 8000ea0:	42b5      	cmp	r5, r6
 8000ea2:	41ad      	sbcs	r5, r5
 8000ea4:	1a40      	subs	r0, r0, r1
 8000ea6:	426d      	negs	r5, r5
 8000ea8:	1b40      	subs	r0, r0, r5
 8000eaa:	4284      	cmp	r4, r0
 8000eac:	d100      	bne.n	8000eb0 <__aeabi_ddiv+0x1d8>
 8000eae:	e1d2      	b.n	8001256 <__aeabi_ddiv+0x57e>
 8000eb0:	4649      	mov	r1, r9
 8000eb2:	f7ff f9cb 	bl	800024c <__aeabi_uidivmod>
 8000eb6:	9a01      	ldr	r2, [sp, #4]
 8000eb8:	040b      	lsls	r3, r1, #16
 8000eba:	4342      	muls	r2, r0
 8000ebc:	0c31      	lsrs	r1, r6, #16
 8000ebe:	0005      	movs	r5, r0
 8000ec0:	4319      	orrs	r1, r3
 8000ec2:	428a      	cmp	r2, r1
 8000ec4:	d900      	bls.n	8000ec8 <__aeabi_ddiv+0x1f0>
 8000ec6:	e16c      	b.n	80011a2 <__aeabi_ddiv+0x4ca>
 8000ec8:	1a88      	subs	r0, r1, r2
 8000eca:	4649      	mov	r1, r9
 8000ecc:	f7ff f9be 	bl	800024c <__aeabi_uidivmod>
 8000ed0:	9a01      	ldr	r2, [sp, #4]
 8000ed2:	0436      	lsls	r6, r6, #16
 8000ed4:	4342      	muls	r2, r0
 8000ed6:	0409      	lsls	r1, r1, #16
 8000ed8:	0c36      	lsrs	r6, r6, #16
 8000eda:	0003      	movs	r3, r0
 8000edc:	430e      	orrs	r6, r1
 8000ede:	42b2      	cmp	r2, r6
 8000ee0:	d900      	bls.n	8000ee4 <__aeabi_ddiv+0x20c>
 8000ee2:	e153      	b.n	800118c <__aeabi_ddiv+0x4b4>
 8000ee4:	9803      	ldr	r0, [sp, #12]
 8000ee6:	1ab6      	subs	r6, r6, r2
 8000ee8:	0002      	movs	r2, r0
 8000eea:	042d      	lsls	r5, r5, #16
 8000eec:	431d      	orrs	r5, r3
 8000eee:	9f02      	ldr	r7, [sp, #8]
 8000ef0:	042b      	lsls	r3, r5, #16
 8000ef2:	0c1b      	lsrs	r3, r3, #16
 8000ef4:	435a      	muls	r2, r3
 8000ef6:	437b      	muls	r3, r7
 8000ef8:	469c      	mov	ip, r3
 8000efa:	0c29      	lsrs	r1, r5, #16
 8000efc:	4348      	muls	r0, r1
 8000efe:	0c13      	lsrs	r3, r2, #16
 8000f00:	4484      	add	ip, r0
 8000f02:	4463      	add	r3, ip
 8000f04:	4379      	muls	r1, r7
 8000f06:	4298      	cmp	r0, r3
 8000f08:	d903      	bls.n	8000f12 <__aeabi_ddiv+0x23a>
 8000f0a:	2080      	movs	r0, #128	; 0x80
 8000f0c:	0240      	lsls	r0, r0, #9
 8000f0e:	4684      	mov	ip, r0
 8000f10:	4461      	add	r1, ip
 8000f12:	0c18      	lsrs	r0, r3, #16
 8000f14:	0412      	lsls	r2, r2, #16
 8000f16:	041b      	lsls	r3, r3, #16
 8000f18:	0c12      	lsrs	r2, r2, #16
 8000f1a:	1840      	adds	r0, r0, r1
 8000f1c:	189b      	adds	r3, r3, r2
 8000f1e:	4286      	cmp	r6, r0
 8000f20:	d200      	bcs.n	8000f24 <__aeabi_ddiv+0x24c>
 8000f22:	e100      	b.n	8001126 <__aeabi_ddiv+0x44e>
 8000f24:	d100      	bne.n	8000f28 <__aeabi_ddiv+0x250>
 8000f26:	e0fb      	b.n	8001120 <__aeabi_ddiv+0x448>
 8000f28:	2301      	movs	r3, #1
 8000f2a:	431d      	orrs	r5, r3
 8000f2c:	4b49      	ldr	r3, [pc, #292]	; (8001054 <__aeabi_ddiv+0x37c>)
 8000f2e:	445b      	add	r3, fp
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	dc00      	bgt.n	8000f36 <__aeabi_ddiv+0x25e>
 8000f34:	e0aa      	b.n	800108c <__aeabi_ddiv+0x3b4>
 8000f36:	076a      	lsls	r2, r5, #29
 8000f38:	d000      	beq.n	8000f3c <__aeabi_ddiv+0x264>
 8000f3a:	e13d      	b.n	80011b8 <__aeabi_ddiv+0x4e0>
 8000f3c:	08e9      	lsrs	r1, r5, #3
 8000f3e:	4642      	mov	r2, r8
 8000f40:	01d2      	lsls	r2, r2, #7
 8000f42:	d506      	bpl.n	8000f52 <__aeabi_ddiv+0x27a>
 8000f44:	4642      	mov	r2, r8
 8000f46:	4b44      	ldr	r3, [pc, #272]	; (8001058 <__aeabi_ddiv+0x380>)
 8000f48:	401a      	ands	r2, r3
 8000f4a:	2380      	movs	r3, #128	; 0x80
 8000f4c:	4690      	mov	r8, r2
 8000f4e:	00db      	lsls	r3, r3, #3
 8000f50:	445b      	add	r3, fp
 8000f52:	4a42      	ldr	r2, [pc, #264]	; (800105c <__aeabi_ddiv+0x384>)
 8000f54:	4293      	cmp	r3, r2
 8000f56:	dd00      	ble.n	8000f5a <__aeabi_ddiv+0x282>
 8000f58:	e723      	b.n	8000da2 <__aeabi_ddiv+0xca>
 8000f5a:	4642      	mov	r2, r8
 8000f5c:	055b      	lsls	r3, r3, #21
 8000f5e:	0755      	lsls	r5, r2, #29
 8000f60:	0252      	lsls	r2, r2, #9
 8000f62:	430d      	orrs	r5, r1
 8000f64:	0b12      	lsrs	r2, r2, #12
 8000f66:	0d5b      	lsrs	r3, r3, #21
 8000f68:	e70d      	b.n	8000d86 <__aeabi_ddiv+0xae>
 8000f6a:	4651      	mov	r1, sl
 8000f6c:	4321      	orrs	r1, r4
 8000f6e:	d100      	bne.n	8000f72 <__aeabi_ddiv+0x29a>
 8000f70:	e07c      	b.n	800106c <__aeabi_ddiv+0x394>
 8000f72:	2c00      	cmp	r4, #0
 8000f74:	d100      	bne.n	8000f78 <__aeabi_ddiv+0x2a0>
 8000f76:	e0fb      	b.n	8001170 <__aeabi_ddiv+0x498>
 8000f78:	0020      	movs	r0, r4
 8000f7a:	f001 fa63 	bl	8002444 <__clzsi2>
 8000f7e:	0002      	movs	r2, r0
 8000f80:	3a0b      	subs	r2, #11
 8000f82:	231d      	movs	r3, #29
 8000f84:	1a9b      	subs	r3, r3, r2
 8000f86:	4652      	mov	r2, sl
 8000f88:	0001      	movs	r1, r0
 8000f8a:	40da      	lsrs	r2, r3
 8000f8c:	4653      	mov	r3, sl
 8000f8e:	3908      	subs	r1, #8
 8000f90:	408b      	lsls	r3, r1
 8000f92:	408c      	lsls	r4, r1
 8000f94:	0019      	movs	r1, r3
 8000f96:	4314      	orrs	r4, r2
 8000f98:	4b31      	ldr	r3, [pc, #196]	; (8001060 <__aeabi_ddiv+0x388>)
 8000f9a:	4458      	add	r0, fp
 8000f9c:	469b      	mov	fp, r3
 8000f9e:	4483      	add	fp, r0
 8000fa0:	2000      	movs	r0, #0
 8000fa2:	e6d9      	b.n	8000d58 <__aeabi_ddiv+0x80>
 8000fa4:	0003      	movs	r3, r0
 8000fa6:	4323      	orrs	r3, r4
 8000fa8:	4698      	mov	r8, r3
 8000faa:	d044      	beq.n	8001036 <__aeabi_ddiv+0x35e>
 8000fac:	2c00      	cmp	r4, #0
 8000fae:	d100      	bne.n	8000fb2 <__aeabi_ddiv+0x2da>
 8000fb0:	e0cf      	b.n	8001152 <__aeabi_ddiv+0x47a>
 8000fb2:	0020      	movs	r0, r4
 8000fb4:	f001 fa46 	bl	8002444 <__clzsi2>
 8000fb8:	0001      	movs	r1, r0
 8000fba:	0002      	movs	r2, r0
 8000fbc:	390b      	subs	r1, #11
 8000fbe:	231d      	movs	r3, #29
 8000fc0:	1a5b      	subs	r3, r3, r1
 8000fc2:	4649      	mov	r1, r9
 8000fc4:	0010      	movs	r0, r2
 8000fc6:	40d9      	lsrs	r1, r3
 8000fc8:	3808      	subs	r0, #8
 8000fca:	4084      	lsls	r4, r0
 8000fcc:	000b      	movs	r3, r1
 8000fce:	464d      	mov	r5, r9
 8000fd0:	4323      	orrs	r3, r4
 8000fd2:	4698      	mov	r8, r3
 8000fd4:	4085      	lsls	r5, r0
 8000fd6:	4b23      	ldr	r3, [pc, #140]	; (8001064 <__aeabi_ddiv+0x38c>)
 8000fd8:	1a9b      	subs	r3, r3, r2
 8000fda:	469b      	mov	fp, r3
 8000fdc:	2300      	movs	r3, #0
 8000fde:	4699      	mov	r9, r3
 8000fe0:	9300      	str	r3, [sp, #0]
 8000fe2:	e69e      	b.n	8000d22 <__aeabi_ddiv+0x4a>
 8000fe4:	0002      	movs	r2, r0
 8000fe6:	4322      	orrs	r2, r4
 8000fe8:	4690      	mov	r8, r2
 8000fea:	d11d      	bne.n	8001028 <__aeabi_ddiv+0x350>
 8000fec:	2208      	movs	r2, #8
 8000fee:	469b      	mov	fp, r3
 8000ff0:	2302      	movs	r3, #2
 8000ff2:	2500      	movs	r5, #0
 8000ff4:	4691      	mov	r9, r2
 8000ff6:	9300      	str	r3, [sp, #0]
 8000ff8:	e693      	b.n	8000d22 <__aeabi_ddiv+0x4a>
 8000ffa:	4651      	mov	r1, sl
 8000ffc:	4321      	orrs	r1, r4
 8000ffe:	d109      	bne.n	8001014 <__aeabi_ddiv+0x33c>
 8001000:	2302      	movs	r3, #2
 8001002:	464a      	mov	r2, r9
 8001004:	431a      	orrs	r2, r3
 8001006:	4b18      	ldr	r3, [pc, #96]	; (8001068 <__aeabi_ddiv+0x390>)
 8001008:	4691      	mov	r9, r2
 800100a:	469c      	mov	ip, r3
 800100c:	2400      	movs	r4, #0
 800100e:	2002      	movs	r0, #2
 8001010:	44e3      	add	fp, ip
 8001012:	e6a1      	b.n	8000d58 <__aeabi_ddiv+0x80>
 8001014:	2303      	movs	r3, #3
 8001016:	464a      	mov	r2, r9
 8001018:	431a      	orrs	r2, r3
 800101a:	4b13      	ldr	r3, [pc, #76]	; (8001068 <__aeabi_ddiv+0x390>)
 800101c:	4691      	mov	r9, r2
 800101e:	469c      	mov	ip, r3
 8001020:	4651      	mov	r1, sl
 8001022:	2003      	movs	r0, #3
 8001024:	44e3      	add	fp, ip
 8001026:	e697      	b.n	8000d58 <__aeabi_ddiv+0x80>
 8001028:	220c      	movs	r2, #12
 800102a:	469b      	mov	fp, r3
 800102c:	2303      	movs	r3, #3
 800102e:	46a0      	mov	r8, r4
 8001030:	4691      	mov	r9, r2
 8001032:	9300      	str	r3, [sp, #0]
 8001034:	e675      	b.n	8000d22 <__aeabi_ddiv+0x4a>
 8001036:	2304      	movs	r3, #4
 8001038:	4699      	mov	r9, r3
 800103a:	2300      	movs	r3, #0
 800103c:	469b      	mov	fp, r3
 800103e:	3301      	adds	r3, #1
 8001040:	2500      	movs	r5, #0
 8001042:	9300      	str	r3, [sp, #0]
 8001044:	e66d      	b.n	8000d22 <__aeabi_ddiv+0x4a>
 8001046:	46c0      	nop			; (mov r8, r8)
 8001048:	000007ff 	.word	0x000007ff
 800104c:	fffffc01 	.word	0xfffffc01
 8001050:	08009514 	.word	0x08009514
 8001054:	000003ff 	.word	0x000003ff
 8001058:	feffffff 	.word	0xfeffffff
 800105c:	000007fe 	.word	0x000007fe
 8001060:	000003f3 	.word	0x000003f3
 8001064:	fffffc0d 	.word	0xfffffc0d
 8001068:	fffff801 	.word	0xfffff801
 800106c:	464a      	mov	r2, r9
 800106e:	2301      	movs	r3, #1
 8001070:	431a      	orrs	r2, r3
 8001072:	4691      	mov	r9, r2
 8001074:	2400      	movs	r4, #0
 8001076:	2001      	movs	r0, #1
 8001078:	e66e      	b.n	8000d58 <__aeabi_ddiv+0x80>
 800107a:	2300      	movs	r3, #0
 800107c:	2280      	movs	r2, #128	; 0x80
 800107e:	469a      	mov	sl, r3
 8001080:	2500      	movs	r5, #0
 8001082:	4b88      	ldr	r3, [pc, #544]	; (80012a4 <__aeabi_ddiv+0x5cc>)
 8001084:	0312      	lsls	r2, r2, #12
 8001086:	e67e      	b.n	8000d86 <__aeabi_ddiv+0xae>
 8001088:	2501      	movs	r5, #1
 800108a:	426d      	negs	r5, r5
 800108c:	2201      	movs	r2, #1
 800108e:	1ad2      	subs	r2, r2, r3
 8001090:	2a38      	cmp	r2, #56	; 0x38
 8001092:	dd00      	ble.n	8001096 <__aeabi_ddiv+0x3be>
 8001094:	e674      	b.n	8000d80 <__aeabi_ddiv+0xa8>
 8001096:	2a1f      	cmp	r2, #31
 8001098:	dc00      	bgt.n	800109c <__aeabi_ddiv+0x3c4>
 800109a:	e0bd      	b.n	8001218 <__aeabi_ddiv+0x540>
 800109c:	211f      	movs	r1, #31
 800109e:	4249      	negs	r1, r1
 80010a0:	1acb      	subs	r3, r1, r3
 80010a2:	4641      	mov	r1, r8
 80010a4:	40d9      	lsrs	r1, r3
 80010a6:	000b      	movs	r3, r1
 80010a8:	2a20      	cmp	r2, #32
 80010aa:	d004      	beq.n	80010b6 <__aeabi_ddiv+0x3de>
 80010ac:	4641      	mov	r1, r8
 80010ae:	4a7e      	ldr	r2, [pc, #504]	; (80012a8 <__aeabi_ddiv+0x5d0>)
 80010b0:	445a      	add	r2, fp
 80010b2:	4091      	lsls	r1, r2
 80010b4:	430d      	orrs	r5, r1
 80010b6:	0029      	movs	r1, r5
 80010b8:	1e4a      	subs	r2, r1, #1
 80010ba:	4191      	sbcs	r1, r2
 80010bc:	4319      	orrs	r1, r3
 80010be:	2307      	movs	r3, #7
 80010c0:	001d      	movs	r5, r3
 80010c2:	2200      	movs	r2, #0
 80010c4:	400d      	ands	r5, r1
 80010c6:	420b      	tst	r3, r1
 80010c8:	d100      	bne.n	80010cc <__aeabi_ddiv+0x3f4>
 80010ca:	e0d0      	b.n	800126e <__aeabi_ddiv+0x596>
 80010cc:	220f      	movs	r2, #15
 80010ce:	2300      	movs	r3, #0
 80010d0:	400a      	ands	r2, r1
 80010d2:	2a04      	cmp	r2, #4
 80010d4:	d100      	bne.n	80010d8 <__aeabi_ddiv+0x400>
 80010d6:	e0c7      	b.n	8001268 <__aeabi_ddiv+0x590>
 80010d8:	1d0a      	adds	r2, r1, #4
 80010da:	428a      	cmp	r2, r1
 80010dc:	4189      	sbcs	r1, r1
 80010de:	4249      	negs	r1, r1
 80010e0:	185b      	adds	r3, r3, r1
 80010e2:	0011      	movs	r1, r2
 80010e4:	021a      	lsls	r2, r3, #8
 80010e6:	d400      	bmi.n	80010ea <__aeabi_ddiv+0x412>
 80010e8:	e0be      	b.n	8001268 <__aeabi_ddiv+0x590>
 80010ea:	2301      	movs	r3, #1
 80010ec:	2200      	movs	r2, #0
 80010ee:	2500      	movs	r5, #0
 80010f0:	e649      	b.n	8000d86 <__aeabi_ddiv+0xae>
 80010f2:	2280      	movs	r2, #128	; 0x80
 80010f4:	4643      	mov	r3, r8
 80010f6:	0312      	lsls	r2, r2, #12
 80010f8:	4213      	tst	r3, r2
 80010fa:	d008      	beq.n	800110e <__aeabi_ddiv+0x436>
 80010fc:	4214      	tst	r4, r2
 80010fe:	d106      	bne.n	800110e <__aeabi_ddiv+0x436>
 8001100:	4322      	orrs	r2, r4
 8001102:	0312      	lsls	r2, r2, #12
 8001104:	46ba      	mov	sl, r7
 8001106:	000d      	movs	r5, r1
 8001108:	4b66      	ldr	r3, [pc, #408]	; (80012a4 <__aeabi_ddiv+0x5cc>)
 800110a:	0b12      	lsrs	r2, r2, #12
 800110c:	e63b      	b.n	8000d86 <__aeabi_ddiv+0xae>
 800110e:	2280      	movs	r2, #128	; 0x80
 8001110:	4643      	mov	r3, r8
 8001112:	0312      	lsls	r2, r2, #12
 8001114:	431a      	orrs	r2, r3
 8001116:	0312      	lsls	r2, r2, #12
 8001118:	46b2      	mov	sl, r6
 800111a:	4b62      	ldr	r3, [pc, #392]	; (80012a4 <__aeabi_ddiv+0x5cc>)
 800111c:	0b12      	lsrs	r2, r2, #12
 800111e:	e632      	b.n	8000d86 <__aeabi_ddiv+0xae>
 8001120:	2b00      	cmp	r3, #0
 8001122:	d100      	bne.n	8001126 <__aeabi_ddiv+0x44e>
 8001124:	e702      	b.n	8000f2c <__aeabi_ddiv+0x254>
 8001126:	19a6      	adds	r6, r4, r6
 8001128:	1e6a      	subs	r2, r5, #1
 800112a:	42a6      	cmp	r6, r4
 800112c:	d200      	bcs.n	8001130 <__aeabi_ddiv+0x458>
 800112e:	e089      	b.n	8001244 <__aeabi_ddiv+0x56c>
 8001130:	4286      	cmp	r6, r0
 8001132:	d200      	bcs.n	8001136 <__aeabi_ddiv+0x45e>
 8001134:	e09f      	b.n	8001276 <__aeabi_ddiv+0x59e>
 8001136:	d100      	bne.n	800113a <__aeabi_ddiv+0x462>
 8001138:	e0af      	b.n	800129a <__aeabi_ddiv+0x5c2>
 800113a:	0015      	movs	r5, r2
 800113c:	e6f4      	b.n	8000f28 <__aeabi_ddiv+0x250>
 800113e:	42a9      	cmp	r1, r5
 8001140:	d900      	bls.n	8001144 <__aeabi_ddiv+0x46c>
 8001142:	e63c      	b.n	8000dbe <__aeabi_ddiv+0xe6>
 8001144:	4643      	mov	r3, r8
 8001146:	07de      	lsls	r6, r3, #31
 8001148:	0858      	lsrs	r0, r3, #1
 800114a:	086b      	lsrs	r3, r5, #1
 800114c:	431e      	orrs	r6, r3
 800114e:	07ed      	lsls	r5, r5, #31
 8001150:	e63c      	b.n	8000dcc <__aeabi_ddiv+0xf4>
 8001152:	f001 f977 	bl	8002444 <__clzsi2>
 8001156:	0001      	movs	r1, r0
 8001158:	0002      	movs	r2, r0
 800115a:	3115      	adds	r1, #21
 800115c:	3220      	adds	r2, #32
 800115e:	291c      	cmp	r1, #28
 8001160:	dc00      	bgt.n	8001164 <__aeabi_ddiv+0x48c>
 8001162:	e72c      	b.n	8000fbe <__aeabi_ddiv+0x2e6>
 8001164:	464b      	mov	r3, r9
 8001166:	3808      	subs	r0, #8
 8001168:	4083      	lsls	r3, r0
 800116a:	2500      	movs	r5, #0
 800116c:	4698      	mov	r8, r3
 800116e:	e732      	b.n	8000fd6 <__aeabi_ddiv+0x2fe>
 8001170:	f001 f968 	bl	8002444 <__clzsi2>
 8001174:	0003      	movs	r3, r0
 8001176:	001a      	movs	r2, r3
 8001178:	3215      	adds	r2, #21
 800117a:	3020      	adds	r0, #32
 800117c:	2a1c      	cmp	r2, #28
 800117e:	dc00      	bgt.n	8001182 <__aeabi_ddiv+0x4aa>
 8001180:	e6ff      	b.n	8000f82 <__aeabi_ddiv+0x2aa>
 8001182:	4654      	mov	r4, sl
 8001184:	3b08      	subs	r3, #8
 8001186:	2100      	movs	r1, #0
 8001188:	409c      	lsls	r4, r3
 800118a:	e705      	b.n	8000f98 <__aeabi_ddiv+0x2c0>
 800118c:	1936      	adds	r6, r6, r4
 800118e:	3b01      	subs	r3, #1
 8001190:	42b4      	cmp	r4, r6
 8001192:	d900      	bls.n	8001196 <__aeabi_ddiv+0x4be>
 8001194:	e6a6      	b.n	8000ee4 <__aeabi_ddiv+0x20c>
 8001196:	42b2      	cmp	r2, r6
 8001198:	d800      	bhi.n	800119c <__aeabi_ddiv+0x4c4>
 800119a:	e6a3      	b.n	8000ee4 <__aeabi_ddiv+0x20c>
 800119c:	1e83      	subs	r3, r0, #2
 800119e:	1936      	adds	r6, r6, r4
 80011a0:	e6a0      	b.n	8000ee4 <__aeabi_ddiv+0x20c>
 80011a2:	1909      	adds	r1, r1, r4
 80011a4:	3d01      	subs	r5, #1
 80011a6:	428c      	cmp	r4, r1
 80011a8:	d900      	bls.n	80011ac <__aeabi_ddiv+0x4d4>
 80011aa:	e68d      	b.n	8000ec8 <__aeabi_ddiv+0x1f0>
 80011ac:	428a      	cmp	r2, r1
 80011ae:	d800      	bhi.n	80011b2 <__aeabi_ddiv+0x4da>
 80011b0:	e68a      	b.n	8000ec8 <__aeabi_ddiv+0x1f0>
 80011b2:	1e85      	subs	r5, r0, #2
 80011b4:	1909      	adds	r1, r1, r4
 80011b6:	e687      	b.n	8000ec8 <__aeabi_ddiv+0x1f0>
 80011b8:	220f      	movs	r2, #15
 80011ba:	402a      	ands	r2, r5
 80011bc:	2a04      	cmp	r2, #4
 80011be:	d100      	bne.n	80011c2 <__aeabi_ddiv+0x4ea>
 80011c0:	e6bc      	b.n	8000f3c <__aeabi_ddiv+0x264>
 80011c2:	1d29      	adds	r1, r5, #4
 80011c4:	42a9      	cmp	r1, r5
 80011c6:	41ad      	sbcs	r5, r5
 80011c8:	426d      	negs	r5, r5
 80011ca:	08c9      	lsrs	r1, r1, #3
 80011cc:	44a8      	add	r8, r5
 80011ce:	e6b6      	b.n	8000f3e <__aeabi_ddiv+0x266>
 80011d0:	42af      	cmp	r7, r5
 80011d2:	d900      	bls.n	80011d6 <__aeabi_ddiv+0x4fe>
 80011d4:	e662      	b.n	8000e9c <__aeabi_ddiv+0x1c4>
 80011d6:	4281      	cmp	r1, r0
 80011d8:	d804      	bhi.n	80011e4 <__aeabi_ddiv+0x50c>
 80011da:	d000      	beq.n	80011de <__aeabi_ddiv+0x506>
 80011dc:	e65e      	b.n	8000e9c <__aeabi_ddiv+0x1c4>
 80011de:	42ae      	cmp	r6, r5
 80011e0:	d800      	bhi.n	80011e4 <__aeabi_ddiv+0x50c>
 80011e2:	e65b      	b.n	8000e9c <__aeabi_ddiv+0x1c4>
 80011e4:	2302      	movs	r3, #2
 80011e6:	425b      	negs	r3, r3
 80011e8:	469c      	mov	ip, r3
 80011ea:	9b00      	ldr	r3, [sp, #0]
 80011ec:	44e0      	add	r8, ip
 80011ee:	469c      	mov	ip, r3
 80011f0:	4465      	add	r5, ip
 80011f2:	429d      	cmp	r5, r3
 80011f4:	419b      	sbcs	r3, r3
 80011f6:	425b      	negs	r3, r3
 80011f8:	191b      	adds	r3, r3, r4
 80011fa:	18c0      	adds	r0, r0, r3
 80011fc:	e64f      	b.n	8000e9e <__aeabi_ddiv+0x1c6>
 80011fe:	42b2      	cmp	r2, r6
 8001200:	d800      	bhi.n	8001204 <__aeabi_ddiv+0x52c>
 8001202:	e612      	b.n	8000e2a <__aeabi_ddiv+0x152>
 8001204:	1e83      	subs	r3, r0, #2
 8001206:	1936      	adds	r6, r6, r4
 8001208:	e60f      	b.n	8000e2a <__aeabi_ddiv+0x152>
 800120a:	428a      	cmp	r2, r1
 800120c:	d800      	bhi.n	8001210 <__aeabi_ddiv+0x538>
 800120e:	e5fa      	b.n	8000e06 <__aeabi_ddiv+0x12e>
 8001210:	1e83      	subs	r3, r0, #2
 8001212:	4698      	mov	r8, r3
 8001214:	1909      	adds	r1, r1, r4
 8001216:	e5f6      	b.n	8000e06 <__aeabi_ddiv+0x12e>
 8001218:	4b24      	ldr	r3, [pc, #144]	; (80012ac <__aeabi_ddiv+0x5d4>)
 800121a:	0028      	movs	r0, r5
 800121c:	445b      	add	r3, fp
 800121e:	4641      	mov	r1, r8
 8001220:	409d      	lsls	r5, r3
 8001222:	4099      	lsls	r1, r3
 8001224:	40d0      	lsrs	r0, r2
 8001226:	1e6b      	subs	r3, r5, #1
 8001228:	419d      	sbcs	r5, r3
 800122a:	4643      	mov	r3, r8
 800122c:	4301      	orrs	r1, r0
 800122e:	4329      	orrs	r1, r5
 8001230:	40d3      	lsrs	r3, r2
 8001232:	074a      	lsls	r2, r1, #29
 8001234:	d100      	bne.n	8001238 <__aeabi_ddiv+0x560>
 8001236:	e755      	b.n	80010e4 <__aeabi_ddiv+0x40c>
 8001238:	220f      	movs	r2, #15
 800123a:	400a      	ands	r2, r1
 800123c:	2a04      	cmp	r2, #4
 800123e:	d000      	beq.n	8001242 <__aeabi_ddiv+0x56a>
 8001240:	e74a      	b.n	80010d8 <__aeabi_ddiv+0x400>
 8001242:	e74f      	b.n	80010e4 <__aeabi_ddiv+0x40c>
 8001244:	0015      	movs	r5, r2
 8001246:	4286      	cmp	r6, r0
 8001248:	d000      	beq.n	800124c <__aeabi_ddiv+0x574>
 800124a:	e66d      	b.n	8000f28 <__aeabi_ddiv+0x250>
 800124c:	9a00      	ldr	r2, [sp, #0]
 800124e:	429a      	cmp	r2, r3
 8001250:	d000      	beq.n	8001254 <__aeabi_ddiv+0x57c>
 8001252:	e669      	b.n	8000f28 <__aeabi_ddiv+0x250>
 8001254:	e66a      	b.n	8000f2c <__aeabi_ddiv+0x254>
 8001256:	4b16      	ldr	r3, [pc, #88]	; (80012b0 <__aeabi_ddiv+0x5d8>)
 8001258:	445b      	add	r3, fp
 800125a:	2b00      	cmp	r3, #0
 800125c:	dc00      	bgt.n	8001260 <__aeabi_ddiv+0x588>
 800125e:	e713      	b.n	8001088 <__aeabi_ddiv+0x3b0>
 8001260:	2501      	movs	r5, #1
 8001262:	2100      	movs	r1, #0
 8001264:	44a8      	add	r8, r5
 8001266:	e66a      	b.n	8000f3e <__aeabi_ddiv+0x266>
 8001268:	075d      	lsls	r5, r3, #29
 800126a:	025b      	lsls	r3, r3, #9
 800126c:	0b1a      	lsrs	r2, r3, #12
 800126e:	08c9      	lsrs	r1, r1, #3
 8001270:	2300      	movs	r3, #0
 8001272:	430d      	orrs	r5, r1
 8001274:	e587      	b.n	8000d86 <__aeabi_ddiv+0xae>
 8001276:	9900      	ldr	r1, [sp, #0]
 8001278:	3d02      	subs	r5, #2
 800127a:	004a      	lsls	r2, r1, #1
 800127c:	428a      	cmp	r2, r1
 800127e:	41bf      	sbcs	r7, r7
 8001280:	427f      	negs	r7, r7
 8001282:	193f      	adds	r7, r7, r4
 8001284:	19f6      	adds	r6, r6, r7
 8001286:	9200      	str	r2, [sp, #0]
 8001288:	e7dd      	b.n	8001246 <__aeabi_ddiv+0x56e>
 800128a:	2280      	movs	r2, #128	; 0x80
 800128c:	4643      	mov	r3, r8
 800128e:	0312      	lsls	r2, r2, #12
 8001290:	431a      	orrs	r2, r3
 8001292:	0312      	lsls	r2, r2, #12
 8001294:	4b03      	ldr	r3, [pc, #12]	; (80012a4 <__aeabi_ddiv+0x5cc>)
 8001296:	0b12      	lsrs	r2, r2, #12
 8001298:	e575      	b.n	8000d86 <__aeabi_ddiv+0xae>
 800129a:	9900      	ldr	r1, [sp, #0]
 800129c:	4299      	cmp	r1, r3
 800129e:	d3ea      	bcc.n	8001276 <__aeabi_ddiv+0x59e>
 80012a0:	0015      	movs	r5, r2
 80012a2:	e7d3      	b.n	800124c <__aeabi_ddiv+0x574>
 80012a4:	000007ff 	.word	0x000007ff
 80012a8:	0000043e 	.word	0x0000043e
 80012ac:	0000041e 	.word	0x0000041e
 80012b0:	000003ff 	.word	0x000003ff

080012b4 <__eqdf2>:
 80012b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012b6:	464e      	mov	r6, r9
 80012b8:	4645      	mov	r5, r8
 80012ba:	46de      	mov	lr, fp
 80012bc:	4657      	mov	r7, sl
 80012be:	4690      	mov	r8, r2
 80012c0:	b5e0      	push	{r5, r6, r7, lr}
 80012c2:	0017      	movs	r7, r2
 80012c4:	031a      	lsls	r2, r3, #12
 80012c6:	0b12      	lsrs	r2, r2, #12
 80012c8:	0005      	movs	r5, r0
 80012ca:	4684      	mov	ip, r0
 80012cc:	4819      	ldr	r0, [pc, #100]	; (8001334 <__eqdf2+0x80>)
 80012ce:	030e      	lsls	r6, r1, #12
 80012d0:	004c      	lsls	r4, r1, #1
 80012d2:	4691      	mov	r9, r2
 80012d4:	005a      	lsls	r2, r3, #1
 80012d6:	0fdb      	lsrs	r3, r3, #31
 80012d8:	469b      	mov	fp, r3
 80012da:	0b36      	lsrs	r6, r6, #12
 80012dc:	0d64      	lsrs	r4, r4, #21
 80012de:	0fc9      	lsrs	r1, r1, #31
 80012e0:	0d52      	lsrs	r2, r2, #21
 80012e2:	4284      	cmp	r4, r0
 80012e4:	d019      	beq.n	800131a <__eqdf2+0x66>
 80012e6:	4282      	cmp	r2, r0
 80012e8:	d010      	beq.n	800130c <__eqdf2+0x58>
 80012ea:	2001      	movs	r0, #1
 80012ec:	4294      	cmp	r4, r2
 80012ee:	d10e      	bne.n	800130e <__eqdf2+0x5a>
 80012f0:	454e      	cmp	r6, r9
 80012f2:	d10c      	bne.n	800130e <__eqdf2+0x5a>
 80012f4:	2001      	movs	r0, #1
 80012f6:	45c4      	cmp	ip, r8
 80012f8:	d109      	bne.n	800130e <__eqdf2+0x5a>
 80012fa:	4559      	cmp	r1, fp
 80012fc:	d017      	beq.n	800132e <__eqdf2+0x7a>
 80012fe:	2c00      	cmp	r4, #0
 8001300:	d105      	bne.n	800130e <__eqdf2+0x5a>
 8001302:	0030      	movs	r0, r6
 8001304:	4328      	orrs	r0, r5
 8001306:	1e43      	subs	r3, r0, #1
 8001308:	4198      	sbcs	r0, r3
 800130a:	e000      	b.n	800130e <__eqdf2+0x5a>
 800130c:	2001      	movs	r0, #1
 800130e:	bcf0      	pop	{r4, r5, r6, r7}
 8001310:	46bb      	mov	fp, r7
 8001312:	46b2      	mov	sl, r6
 8001314:	46a9      	mov	r9, r5
 8001316:	46a0      	mov	r8, r4
 8001318:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800131a:	0033      	movs	r3, r6
 800131c:	2001      	movs	r0, #1
 800131e:	432b      	orrs	r3, r5
 8001320:	d1f5      	bne.n	800130e <__eqdf2+0x5a>
 8001322:	42a2      	cmp	r2, r4
 8001324:	d1f3      	bne.n	800130e <__eqdf2+0x5a>
 8001326:	464b      	mov	r3, r9
 8001328:	433b      	orrs	r3, r7
 800132a:	d1f0      	bne.n	800130e <__eqdf2+0x5a>
 800132c:	e7e2      	b.n	80012f4 <__eqdf2+0x40>
 800132e:	2000      	movs	r0, #0
 8001330:	e7ed      	b.n	800130e <__eqdf2+0x5a>
 8001332:	46c0      	nop			; (mov r8, r8)
 8001334:	000007ff 	.word	0x000007ff

08001338 <__gedf2>:
 8001338:	b5f0      	push	{r4, r5, r6, r7, lr}
 800133a:	4647      	mov	r7, r8
 800133c:	46ce      	mov	lr, r9
 800133e:	0004      	movs	r4, r0
 8001340:	0018      	movs	r0, r3
 8001342:	0016      	movs	r6, r2
 8001344:	031b      	lsls	r3, r3, #12
 8001346:	0b1b      	lsrs	r3, r3, #12
 8001348:	4d2d      	ldr	r5, [pc, #180]	; (8001400 <__gedf2+0xc8>)
 800134a:	004a      	lsls	r2, r1, #1
 800134c:	4699      	mov	r9, r3
 800134e:	b580      	push	{r7, lr}
 8001350:	0043      	lsls	r3, r0, #1
 8001352:	030f      	lsls	r7, r1, #12
 8001354:	46a4      	mov	ip, r4
 8001356:	46b0      	mov	r8, r6
 8001358:	0b3f      	lsrs	r7, r7, #12
 800135a:	0d52      	lsrs	r2, r2, #21
 800135c:	0fc9      	lsrs	r1, r1, #31
 800135e:	0d5b      	lsrs	r3, r3, #21
 8001360:	0fc0      	lsrs	r0, r0, #31
 8001362:	42aa      	cmp	r2, r5
 8001364:	d021      	beq.n	80013aa <__gedf2+0x72>
 8001366:	42ab      	cmp	r3, r5
 8001368:	d013      	beq.n	8001392 <__gedf2+0x5a>
 800136a:	2a00      	cmp	r2, #0
 800136c:	d122      	bne.n	80013b4 <__gedf2+0x7c>
 800136e:	433c      	orrs	r4, r7
 8001370:	2b00      	cmp	r3, #0
 8001372:	d102      	bne.n	800137a <__gedf2+0x42>
 8001374:	464d      	mov	r5, r9
 8001376:	432e      	orrs	r6, r5
 8001378:	d022      	beq.n	80013c0 <__gedf2+0x88>
 800137a:	2c00      	cmp	r4, #0
 800137c:	d010      	beq.n	80013a0 <__gedf2+0x68>
 800137e:	4281      	cmp	r1, r0
 8001380:	d022      	beq.n	80013c8 <__gedf2+0x90>
 8001382:	2002      	movs	r0, #2
 8001384:	3901      	subs	r1, #1
 8001386:	4008      	ands	r0, r1
 8001388:	3801      	subs	r0, #1
 800138a:	bcc0      	pop	{r6, r7}
 800138c:	46b9      	mov	r9, r7
 800138e:	46b0      	mov	r8, r6
 8001390:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001392:	464d      	mov	r5, r9
 8001394:	432e      	orrs	r6, r5
 8001396:	d129      	bne.n	80013ec <__gedf2+0xb4>
 8001398:	2a00      	cmp	r2, #0
 800139a:	d1f0      	bne.n	800137e <__gedf2+0x46>
 800139c:	433c      	orrs	r4, r7
 800139e:	d1ee      	bne.n	800137e <__gedf2+0x46>
 80013a0:	2800      	cmp	r0, #0
 80013a2:	d1f2      	bne.n	800138a <__gedf2+0x52>
 80013a4:	2001      	movs	r0, #1
 80013a6:	4240      	negs	r0, r0
 80013a8:	e7ef      	b.n	800138a <__gedf2+0x52>
 80013aa:	003d      	movs	r5, r7
 80013ac:	4325      	orrs	r5, r4
 80013ae:	d11d      	bne.n	80013ec <__gedf2+0xb4>
 80013b0:	4293      	cmp	r3, r2
 80013b2:	d0ee      	beq.n	8001392 <__gedf2+0x5a>
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	d1e2      	bne.n	800137e <__gedf2+0x46>
 80013b8:	464c      	mov	r4, r9
 80013ba:	4326      	orrs	r6, r4
 80013bc:	d1df      	bne.n	800137e <__gedf2+0x46>
 80013be:	e7e0      	b.n	8001382 <__gedf2+0x4a>
 80013c0:	2000      	movs	r0, #0
 80013c2:	2c00      	cmp	r4, #0
 80013c4:	d0e1      	beq.n	800138a <__gedf2+0x52>
 80013c6:	e7dc      	b.n	8001382 <__gedf2+0x4a>
 80013c8:	429a      	cmp	r2, r3
 80013ca:	dc0a      	bgt.n	80013e2 <__gedf2+0xaa>
 80013cc:	dbe8      	blt.n	80013a0 <__gedf2+0x68>
 80013ce:	454f      	cmp	r7, r9
 80013d0:	d8d7      	bhi.n	8001382 <__gedf2+0x4a>
 80013d2:	d00e      	beq.n	80013f2 <__gedf2+0xba>
 80013d4:	2000      	movs	r0, #0
 80013d6:	454f      	cmp	r7, r9
 80013d8:	d2d7      	bcs.n	800138a <__gedf2+0x52>
 80013da:	2900      	cmp	r1, #0
 80013dc:	d0e2      	beq.n	80013a4 <__gedf2+0x6c>
 80013de:	0008      	movs	r0, r1
 80013e0:	e7d3      	b.n	800138a <__gedf2+0x52>
 80013e2:	4243      	negs	r3, r0
 80013e4:	4158      	adcs	r0, r3
 80013e6:	0040      	lsls	r0, r0, #1
 80013e8:	3801      	subs	r0, #1
 80013ea:	e7ce      	b.n	800138a <__gedf2+0x52>
 80013ec:	2002      	movs	r0, #2
 80013ee:	4240      	negs	r0, r0
 80013f0:	e7cb      	b.n	800138a <__gedf2+0x52>
 80013f2:	45c4      	cmp	ip, r8
 80013f4:	d8c5      	bhi.n	8001382 <__gedf2+0x4a>
 80013f6:	2000      	movs	r0, #0
 80013f8:	45c4      	cmp	ip, r8
 80013fa:	d2c6      	bcs.n	800138a <__gedf2+0x52>
 80013fc:	e7ed      	b.n	80013da <__gedf2+0xa2>
 80013fe:	46c0      	nop			; (mov r8, r8)
 8001400:	000007ff 	.word	0x000007ff

08001404 <__ledf2>:
 8001404:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001406:	4647      	mov	r7, r8
 8001408:	46ce      	mov	lr, r9
 800140a:	0004      	movs	r4, r0
 800140c:	0018      	movs	r0, r3
 800140e:	0016      	movs	r6, r2
 8001410:	031b      	lsls	r3, r3, #12
 8001412:	0b1b      	lsrs	r3, r3, #12
 8001414:	4d2c      	ldr	r5, [pc, #176]	; (80014c8 <__ledf2+0xc4>)
 8001416:	004a      	lsls	r2, r1, #1
 8001418:	4699      	mov	r9, r3
 800141a:	b580      	push	{r7, lr}
 800141c:	0043      	lsls	r3, r0, #1
 800141e:	030f      	lsls	r7, r1, #12
 8001420:	46a4      	mov	ip, r4
 8001422:	46b0      	mov	r8, r6
 8001424:	0b3f      	lsrs	r7, r7, #12
 8001426:	0d52      	lsrs	r2, r2, #21
 8001428:	0fc9      	lsrs	r1, r1, #31
 800142a:	0d5b      	lsrs	r3, r3, #21
 800142c:	0fc0      	lsrs	r0, r0, #31
 800142e:	42aa      	cmp	r2, r5
 8001430:	d00d      	beq.n	800144e <__ledf2+0x4a>
 8001432:	42ab      	cmp	r3, r5
 8001434:	d010      	beq.n	8001458 <__ledf2+0x54>
 8001436:	2a00      	cmp	r2, #0
 8001438:	d127      	bne.n	800148a <__ledf2+0x86>
 800143a:	433c      	orrs	r4, r7
 800143c:	2b00      	cmp	r3, #0
 800143e:	d111      	bne.n	8001464 <__ledf2+0x60>
 8001440:	464d      	mov	r5, r9
 8001442:	432e      	orrs	r6, r5
 8001444:	d10e      	bne.n	8001464 <__ledf2+0x60>
 8001446:	2000      	movs	r0, #0
 8001448:	2c00      	cmp	r4, #0
 800144a:	d015      	beq.n	8001478 <__ledf2+0x74>
 800144c:	e00e      	b.n	800146c <__ledf2+0x68>
 800144e:	003d      	movs	r5, r7
 8001450:	4325      	orrs	r5, r4
 8001452:	d110      	bne.n	8001476 <__ledf2+0x72>
 8001454:	4293      	cmp	r3, r2
 8001456:	d118      	bne.n	800148a <__ledf2+0x86>
 8001458:	464d      	mov	r5, r9
 800145a:	432e      	orrs	r6, r5
 800145c:	d10b      	bne.n	8001476 <__ledf2+0x72>
 800145e:	2a00      	cmp	r2, #0
 8001460:	d102      	bne.n	8001468 <__ledf2+0x64>
 8001462:	433c      	orrs	r4, r7
 8001464:	2c00      	cmp	r4, #0
 8001466:	d00b      	beq.n	8001480 <__ledf2+0x7c>
 8001468:	4281      	cmp	r1, r0
 800146a:	d014      	beq.n	8001496 <__ledf2+0x92>
 800146c:	2002      	movs	r0, #2
 800146e:	3901      	subs	r1, #1
 8001470:	4008      	ands	r0, r1
 8001472:	3801      	subs	r0, #1
 8001474:	e000      	b.n	8001478 <__ledf2+0x74>
 8001476:	2002      	movs	r0, #2
 8001478:	bcc0      	pop	{r6, r7}
 800147a:	46b9      	mov	r9, r7
 800147c:	46b0      	mov	r8, r6
 800147e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001480:	2800      	cmp	r0, #0
 8001482:	d1f9      	bne.n	8001478 <__ledf2+0x74>
 8001484:	2001      	movs	r0, #1
 8001486:	4240      	negs	r0, r0
 8001488:	e7f6      	b.n	8001478 <__ledf2+0x74>
 800148a:	2b00      	cmp	r3, #0
 800148c:	d1ec      	bne.n	8001468 <__ledf2+0x64>
 800148e:	464c      	mov	r4, r9
 8001490:	4326      	orrs	r6, r4
 8001492:	d1e9      	bne.n	8001468 <__ledf2+0x64>
 8001494:	e7ea      	b.n	800146c <__ledf2+0x68>
 8001496:	429a      	cmp	r2, r3
 8001498:	dd04      	ble.n	80014a4 <__ledf2+0xa0>
 800149a:	4243      	negs	r3, r0
 800149c:	4158      	adcs	r0, r3
 800149e:	0040      	lsls	r0, r0, #1
 80014a0:	3801      	subs	r0, #1
 80014a2:	e7e9      	b.n	8001478 <__ledf2+0x74>
 80014a4:	429a      	cmp	r2, r3
 80014a6:	dbeb      	blt.n	8001480 <__ledf2+0x7c>
 80014a8:	454f      	cmp	r7, r9
 80014aa:	d8df      	bhi.n	800146c <__ledf2+0x68>
 80014ac:	d006      	beq.n	80014bc <__ledf2+0xb8>
 80014ae:	2000      	movs	r0, #0
 80014b0:	454f      	cmp	r7, r9
 80014b2:	d2e1      	bcs.n	8001478 <__ledf2+0x74>
 80014b4:	2900      	cmp	r1, #0
 80014b6:	d0e5      	beq.n	8001484 <__ledf2+0x80>
 80014b8:	0008      	movs	r0, r1
 80014ba:	e7dd      	b.n	8001478 <__ledf2+0x74>
 80014bc:	45c4      	cmp	ip, r8
 80014be:	d8d5      	bhi.n	800146c <__ledf2+0x68>
 80014c0:	2000      	movs	r0, #0
 80014c2:	45c4      	cmp	ip, r8
 80014c4:	d2d8      	bcs.n	8001478 <__ledf2+0x74>
 80014c6:	e7f5      	b.n	80014b4 <__ledf2+0xb0>
 80014c8:	000007ff 	.word	0x000007ff

080014cc <__aeabi_dmul>:
 80014cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014ce:	4645      	mov	r5, r8
 80014d0:	46de      	mov	lr, fp
 80014d2:	4657      	mov	r7, sl
 80014d4:	464e      	mov	r6, r9
 80014d6:	b5e0      	push	{r5, r6, r7, lr}
 80014d8:	001f      	movs	r7, r3
 80014da:	030b      	lsls	r3, r1, #12
 80014dc:	0b1b      	lsrs	r3, r3, #12
 80014de:	469b      	mov	fp, r3
 80014e0:	004d      	lsls	r5, r1, #1
 80014e2:	0fcb      	lsrs	r3, r1, #31
 80014e4:	0004      	movs	r4, r0
 80014e6:	4691      	mov	r9, r2
 80014e8:	4698      	mov	r8, r3
 80014ea:	b087      	sub	sp, #28
 80014ec:	0d6d      	lsrs	r5, r5, #21
 80014ee:	d100      	bne.n	80014f2 <__aeabi_dmul+0x26>
 80014f0:	e1cd      	b.n	800188e <__aeabi_dmul+0x3c2>
 80014f2:	4bce      	ldr	r3, [pc, #824]	; (800182c <__aeabi_dmul+0x360>)
 80014f4:	429d      	cmp	r5, r3
 80014f6:	d100      	bne.n	80014fa <__aeabi_dmul+0x2e>
 80014f8:	e1e9      	b.n	80018ce <__aeabi_dmul+0x402>
 80014fa:	465a      	mov	r2, fp
 80014fc:	0f43      	lsrs	r3, r0, #29
 80014fe:	00d2      	lsls	r2, r2, #3
 8001500:	4313      	orrs	r3, r2
 8001502:	2280      	movs	r2, #128	; 0x80
 8001504:	0412      	lsls	r2, r2, #16
 8001506:	431a      	orrs	r2, r3
 8001508:	00c3      	lsls	r3, r0, #3
 800150a:	469a      	mov	sl, r3
 800150c:	4bc8      	ldr	r3, [pc, #800]	; (8001830 <__aeabi_dmul+0x364>)
 800150e:	4693      	mov	fp, r2
 8001510:	469c      	mov	ip, r3
 8001512:	2300      	movs	r3, #0
 8001514:	2600      	movs	r6, #0
 8001516:	4465      	add	r5, ip
 8001518:	9300      	str	r3, [sp, #0]
 800151a:	033c      	lsls	r4, r7, #12
 800151c:	007b      	lsls	r3, r7, #1
 800151e:	4648      	mov	r0, r9
 8001520:	0b24      	lsrs	r4, r4, #12
 8001522:	0d5b      	lsrs	r3, r3, #21
 8001524:	0fff      	lsrs	r7, r7, #31
 8001526:	2b00      	cmp	r3, #0
 8001528:	d100      	bne.n	800152c <__aeabi_dmul+0x60>
 800152a:	e189      	b.n	8001840 <__aeabi_dmul+0x374>
 800152c:	4abf      	ldr	r2, [pc, #764]	; (800182c <__aeabi_dmul+0x360>)
 800152e:	4293      	cmp	r3, r2
 8001530:	d019      	beq.n	8001566 <__aeabi_dmul+0x9a>
 8001532:	0f42      	lsrs	r2, r0, #29
 8001534:	00e4      	lsls	r4, r4, #3
 8001536:	4322      	orrs	r2, r4
 8001538:	2480      	movs	r4, #128	; 0x80
 800153a:	0424      	lsls	r4, r4, #16
 800153c:	4314      	orrs	r4, r2
 800153e:	4abc      	ldr	r2, [pc, #752]	; (8001830 <__aeabi_dmul+0x364>)
 8001540:	2100      	movs	r1, #0
 8001542:	4694      	mov	ip, r2
 8001544:	4642      	mov	r2, r8
 8001546:	4463      	add	r3, ip
 8001548:	195b      	adds	r3, r3, r5
 800154a:	9301      	str	r3, [sp, #4]
 800154c:	9b01      	ldr	r3, [sp, #4]
 800154e:	407a      	eors	r2, r7
 8001550:	3301      	adds	r3, #1
 8001552:	00c0      	lsls	r0, r0, #3
 8001554:	b2d2      	uxtb	r2, r2
 8001556:	9302      	str	r3, [sp, #8]
 8001558:	2e0a      	cmp	r6, #10
 800155a:	dd1c      	ble.n	8001596 <__aeabi_dmul+0xca>
 800155c:	003a      	movs	r2, r7
 800155e:	2e0b      	cmp	r6, #11
 8001560:	d05e      	beq.n	8001620 <__aeabi_dmul+0x154>
 8001562:	4647      	mov	r7, r8
 8001564:	e056      	b.n	8001614 <__aeabi_dmul+0x148>
 8001566:	4649      	mov	r1, r9
 8001568:	4bb0      	ldr	r3, [pc, #704]	; (800182c <__aeabi_dmul+0x360>)
 800156a:	4321      	orrs	r1, r4
 800156c:	18eb      	adds	r3, r5, r3
 800156e:	9301      	str	r3, [sp, #4]
 8001570:	2900      	cmp	r1, #0
 8001572:	d12a      	bne.n	80015ca <__aeabi_dmul+0xfe>
 8001574:	2080      	movs	r0, #128	; 0x80
 8001576:	2202      	movs	r2, #2
 8001578:	0100      	lsls	r0, r0, #4
 800157a:	002b      	movs	r3, r5
 800157c:	4684      	mov	ip, r0
 800157e:	4316      	orrs	r6, r2
 8001580:	4642      	mov	r2, r8
 8001582:	4463      	add	r3, ip
 8001584:	407a      	eors	r2, r7
 8001586:	b2d2      	uxtb	r2, r2
 8001588:	9302      	str	r3, [sp, #8]
 800158a:	2e0a      	cmp	r6, #10
 800158c:	dd00      	ble.n	8001590 <__aeabi_dmul+0xc4>
 800158e:	e231      	b.n	80019f4 <__aeabi_dmul+0x528>
 8001590:	2000      	movs	r0, #0
 8001592:	2400      	movs	r4, #0
 8001594:	2102      	movs	r1, #2
 8001596:	2e02      	cmp	r6, #2
 8001598:	dc26      	bgt.n	80015e8 <__aeabi_dmul+0x11c>
 800159a:	3e01      	subs	r6, #1
 800159c:	2e01      	cmp	r6, #1
 800159e:	d852      	bhi.n	8001646 <__aeabi_dmul+0x17a>
 80015a0:	2902      	cmp	r1, #2
 80015a2:	d04c      	beq.n	800163e <__aeabi_dmul+0x172>
 80015a4:	2901      	cmp	r1, #1
 80015a6:	d000      	beq.n	80015aa <__aeabi_dmul+0xde>
 80015a8:	e118      	b.n	80017dc <__aeabi_dmul+0x310>
 80015aa:	2300      	movs	r3, #0
 80015ac:	2400      	movs	r4, #0
 80015ae:	2500      	movs	r5, #0
 80015b0:	051b      	lsls	r3, r3, #20
 80015b2:	4323      	orrs	r3, r4
 80015b4:	07d2      	lsls	r2, r2, #31
 80015b6:	4313      	orrs	r3, r2
 80015b8:	0028      	movs	r0, r5
 80015ba:	0019      	movs	r1, r3
 80015bc:	b007      	add	sp, #28
 80015be:	bcf0      	pop	{r4, r5, r6, r7}
 80015c0:	46bb      	mov	fp, r7
 80015c2:	46b2      	mov	sl, r6
 80015c4:	46a9      	mov	r9, r5
 80015c6:	46a0      	mov	r8, r4
 80015c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015ca:	2180      	movs	r1, #128	; 0x80
 80015cc:	2203      	movs	r2, #3
 80015ce:	0109      	lsls	r1, r1, #4
 80015d0:	002b      	movs	r3, r5
 80015d2:	468c      	mov	ip, r1
 80015d4:	4316      	orrs	r6, r2
 80015d6:	4642      	mov	r2, r8
 80015d8:	4463      	add	r3, ip
 80015da:	407a      	eors	r2, r7
 80015dc:	b2d2      	uxtb	r2, r2
 80015de:	9302      	str	r3, [sp, #8]
 80015e0:	2e0a      	cmp	r6, #10
 80015e2:	dd00      	ble.n	80015e6 <__aeabi_dmul+0x11a>
 80015e4:	e228      	b.n	8001a38 <__aeabi_dmul+0x56c>
 80015e6:	2103      	movs	r1, #3
 80015e8:	2501      	movs	r5, #1
 80015ea:	40b5      	lsls	r5, r6
 80015ec:	46ac      	mov	ip, r5
 80015ee:	26a6      	movs	r6, #166	; 0xa6
 80015f0:	4663      	mov	r3, ip
 80015f2:	00f6      	lsls	r6, r6, #3
 80015f4:	4035      	ands	r5, r6
 80015f6:	4233      	tst	r3, r6
 80015f8:	d10b      	bne.n	8001612 <__aeabi_dmul+0x146>
 80015fa:	2690      	movs	r6, #144	; 0x90
 80015fc:	00b6      	lsls	r6, r6, #2
 80015fe:	4233      	tst	r3, r6
 8001600:	d118      	bne.n	8001634 <__aeabi_dmul+0x168>
 8001602:	3eb9      	subs	r6, #185	; 0xb9
 8001604:	3eff      	subs	r6, #255	; 0xff
 8001606:	421e      	tst	r6, r3
 8001608:	d01d      	beq.n	8001646 <__aeabi_dmul+0x17a>
 800160a:	46a3      	mov	fp, r4
 800160c:	4682      	mov	sl, r0
 800160e:	9100      	str	r1, [sp, #0]
 8001610:	e000      	b.n	8001614 <__aeabi_dmul+0x148>
 8001612:	0017      	movs	r7, r2
 8001614:	9900      	ldr	r1, [sp, #0]
 8001616:	003a      	movs	r2, r7
 8001618:	2902      	cmp	r1, #2
 800161a:	d010      	beq.n	800163e <__aeabi_dmul+0x172>
 800161c:	465c      	mov	r4, fp
 800161e:	4650      	mov	r0, sl
 8001620:	2903      	cmp	r1, #3
 8001622:	d1bf      	bne.n	80015a4 <__aeabi_dmul+0xd8>
 8001624:	2380      	movs	r3, #128	; 0x80
 8001626:	031b      	lsls	r3, r3, #12
 8001628:	431c      	orrs	r4, r3
 800162a:	0324      	lsls	r4, r4, #12
 800162c:	0005      	movs	r5, r0
 800162e:	4b7f      	ldr	r3, [pc, #508]	; (800182c <__aeabi_dmul+0x360>)
 8001630:	0b24      	lsrs	r4, r4, #12
 8001632:	e7bd      	b.n	80015b0 <__aeabi_dmul+0xe4>
 8001634:	2480      	movs	r4, #128	; 0x80
 8001636:	2200      	movs	r2, #0
 8001638:	4b7c      	ldr	r3, [pc, #496]	; (800182c <__aeabi_dmul+0x360>)
 800163a:	0324      	lsls	r4, r4, #12
 800163c:	e7b8      	b.n	80015b0 <__aeabi_dmul+0xe4>
 800163e:	2400      	movs	r4, #0
 8001640:	2500      	movs	r5, #0
 8001642:	4b7a      	ldr	r3, [pc, #488]	; (800182c <__aeabi_dmul+0x360>)
 8001644:	e7b4      	b.n	80015b0 <__aeabi_dmul+0xe4>
 8001646:	4653      	mov	r3, sl
 8001648:	041e      	lsls	r6, r3, #16
 800164a:	0c36      	lsrs	r6, r6, #16
 800164c:	0c1f      	lsrs	r7, r3, #16
 800164e:	0033      	movs	r3, r6
 8001650:	0c01      	lsrs	r1, r0, #16
 8001652:	0400      	lsls	r0, r0, #16
 8001654:	0c00      	lsrs	r0, r0, #16
 8001656:	4343      	muls	r3, r0
 8001658:	4698      	mov	r8, r3
 800165a:	0003      	movs	r3, r0
 800165c:	437b      	muls	r3, r7
 800165e:	4699      	mov	r9, r3
 8001660:	0033      	movs	r3, r6
 8001662:	434b      	muls	r3, r1
 8001664:	469c      	mov	ip, r3
 8001666:	4643      	mov	r3, r8
 8001668:	000d      	movs	r5, r1
 800166a:	0c1b      	lsrs	r3, r3, #16
 800166c:	469a      	mov	sl, r3
 800166e:	437d      	muls	r5, r7
 8001670:	44cc      	add	ip, r9
 8001672:	44d4      	add	ip, sl
 8001674:	9500      	str	r5, [sp, #0]
 8001676:	45e1      	cmp	r9, ip
 8001678:	d904      	bls.n	8001684 <__aeabi_dmul+0x1b8>
 800167a:	2380      	movs	r3, #128	; 0x80
 800167c:	025b      	lsls	r3, r3, #9
 800167e:	4699      	mov	r9, r3
 8001680:	444d      	add	r5, r9
 8001682:	9500      	str	r5, [sp, #0]
 8001684:	4663      	mov	r3, ip
 8001686:	0c1b      	lsrs	r3, r3, #16
 8001688:	001d      	movs	r5, r3
 800168a:	4663      	mov	r3, ip
 800168c:	041b      	lsls	r3, r3, #16
 800168e:	469c      	mov	ip, r3
 8001690:	4643      	mov	r3, r8
 8001692:	041b      	lsls	r3, r3, #16
 8001694:	0c1b      	lsrs	r3, r3, #16
 8001696:	4698      	mov	r8, r3
 8001698:	4663      	mov	r3, ip
 800169a:	4443      	add	r3, r8
 800169c:	9303      	str	r3, [sp, #12]
 800169e:	0c23      	lsrs	r3, r4, #16
 80016a0:	4698      	mov	r8, r3
 80016a2:	0033      	movs	r3, r6
 80016a4:	0424      	lsls	r4, r4, #16
 80016a6:	0c24      	lsrs	r4, r4, #16
 80016a8:	4363      	muls	r3, r4
 80016aa:	469c      	mov	ip, r3
 80016ac:	0023      	movs	r3, r4
 80016ae:	437b      	muls	r3, r7
 80016b0:	4699      	mov	r9, r3
 80016b2:	4643      	mov	r3, r8
 80016b4:	435e      	muls	r6, r3
 80016b6:	435f      	muls	r7, r3
 80016b8:	444e      	add	r6, r9
 80016ba:	4663      	mov	r3, ip
 80016bc:	46b2      	mov	sl, r6
 80016be:	0c1e      	lsrs	r6, r3, #16
 80016c0:	4456      	add	r6, sl
 80016c2:	45b1      	cmp	r9, r6
 80016c4:	d903      	bls.n	80016ce <__aeabi_dmul+0x202>
 80016c6:	2380      	movs	r3, #128	; 0x80
 80016c8:	025b      	lsls	r3, r3, #9
 80016ca:	4699      	mov	r9, r3
 80016cc:	444f      	add	r7, r9
 80016ce:	0c33      	lsrs	r3, r6, #16
 80016d0:	4699      	mov	r9, r3
 80016d2:	003b      	movs	r3, r7
 80016d4:	444b      	add	r3, r9
 80016d6:	9305      	str	r3, [sp, #20]
 80016d8:	4663      	mov	r3, ip
 80016da:	46ac      	mov	ip, r5
 80016dc:	041f      	lsls	r7, r3, #16
 80016de:	0c3f      	lsrs	r7, r7, #16
 80016e0:	0436      	lsls	r6, r6, #16
 80016e2:	19f6      	adds	r6, r6, r7
 80016e4:	44b4      	add	ip, r6
 80016e6:	4663      	mov	r3, ip
 80016e8:	9304      	str	r3, [sp, #16]
 80016ea:	465b      	mov	r3, fp
 80016ec:	0c1b      	lsrs	r3, r3, #16
 80016ee:	469c      	mov	ip, r3
 80016f0:	465b      	mov	r3, fp
 80016f2:	041f      	lsls	r7, r3, #16
 80016f4:	0c3f      	lsrs	r7, r7, #16
 80016f6:	003b      	movs	r3, r7
 80016f8:	4343      	muls	r3, r0
 80016fa:	4699      	mov	r9, r3
 80016fc:	4663      	mov	r3, ip
 80016fe:	4343      	muls	r3, r0
 8001700:	469a      	mov	sl, r3
 8001702:	464b      	mov	r3, r9
 8001704:	4660      	mov	r0, ip
 8001706:	0c1b      	lsrs	r3, r3, #16
 8001708:	469b      	mov	fp, r3
 800170a:	4348      	muls	r0, r1
 800170c:	4379      	muls	r1, r7
 800170e:	4451      	add	r1, sl
 8001710:	4459      	add	r1, fp
 8001712:	458a      	cmp	sl, r1
 8001714:	d903      	bls.n	800171e <__aeabi_dmul+0x252>
 8001716:	2380      	movs	r3, #128	; 0x80
 8001718:	025b      	lsls	r3, r3, #9
 800171a:	469a      	mov	sl, r3
 800171c:	4450      	add	r0, sl
 800171e:	0c0b      	lsrs	r3, r1, #16
 8001720:	469a      	mov	sl, r3
 8001722:	464b      	mov	r3, r9
 8001724:	041b      	lsls	r3, r3, #16
 8001726:	0c1b      	lsrs	r3, r3, #16
 8001728:	4699      	mov	r9, r3
 800172a:	003b      	movs	r3, r7
 800172c:	4363      	muls	r3, r4
 800172e:	0409      	lsls	r1, r1, #16
 8001730:	4645      	mov	r5, r8
 8001732:	4449      	add	r1, r9
 8001734:	4699      	mov	r9, r3
 8001736:	4663      	mov	r3, ip
 8001738:	435c      	muls	r4, r3
 800173a:	436b      	muls	r3, r5
 800173c:	469c      	mov	ip, r3
 800173e:	464b      	mov	r3, r9
 8001740:	0c1b      	lsrs	r3, r3, #16
 8001742:	4698      	mov	r8, r3
 8001744:	436f      	muls	r7, r5
 8001746:	193f      	adds	r7, r7, r4
 8001748:	4447      	add	r7, r8
 800174a:	4450      	add	r0, sl
 800174c:	42bc      	cmp	r4, r7
 800174e:	d903      	bls.n	8001758 <__aeabi_dmul+0x28c>
 8001750:	2380      	movs	r3, #128	; 0x80
 8001752:	025b      	lsls	r3, r3, #9
 8001754:	4698      	mov	r8, r3
 8001756:	44c4      	add	ip, r8
 8001758:	9b04      	ldr	r3, [sp, #16]
 800175a:	9d00      	ldr	r5, [sp, #0]
 800175c:	4698      	mov	r8, r3
 800175e:	4445      	add	r5, r8
 8001760:	42b5      	cmp	r5, r6
 8001762:	41b6      	sbcs	r6, r6
 8001764:	4273      	negs	r3, r6
 8001766:	4698      	mov	r8, r3
 8001768:	464b      	mov	r3, r9
 800176a:	041e      	lsls	r6, r3, #16
 800176c:	9b05      	ldr	r3, [sp, #20]
 800176e:	043c      	lsls	r4, r7, #16
 8001770:	4699      	mov	r9, r3
 8001772:	0c36      	lsrs	r6, r6, #16
 8001774:	19a4      	adds	r4, r4, r6
 8001776:	444c      	add	r4, r9
 8001778:	46a1      	mov	r9, r4
 800177a:	4683      	mov	fp, r0
 800177c:	186e      	adds	r6, r5, r1
 800177e:	44c1      	add	r9, r8
 8001780:	428e      	cmp	r6, r1
 8001782:	4189      	sbcs	r1, r1
 8001784:	44cb      	add	fp, r9
 8001786:	465d      	mov	r5, fp
 8001788:	4249      	negs	r1, r1
 800178a:	186d      	adds	r5, r5, r1
 800178c:	429c      	cmp	r4, r3
 800178e:	41a4      	sbcs	r4, r4
 8001790:	45c1      	cmp	r9, r8
 8001792:	419b      	sbcs	r3, r3
 8001794:	4583      	cmp	fp, r0
 8001796:	4180      	sbcs	r0, r0
 8001798:	428d      	cmp	r5, r1
 800179a:	4189      	sbcs	r1, r1
 800179c:	425b      	negs	r3, r3
 800179e:	4264      	negs	r4, r4
 80017a0:	431c      	orrs	r4, r3
 80017a2:	4240      	negs	r0, r0
 80017a4:	9b03      	ldr	r3, [sp, #12]
 80017a6:	4249      	negs	r1, r1
 80017a8:	4301      	orrs	r1, r0
 80017aa:	0270      	lsls	r0, r6, #9
 80017ac:	0c3f      	lsrs	r7, r7, #16
 80017ae:	4318      	orrs	r0, r3
 80017b0:	19e4      	adds	r4, r4, r7
 80017b2:	1e47      	subs	r7, r0, #1
 80017b4:	41b8      	sbcs	r0, r7
 80017b6:	1864      	adds	r4, r4, r1
 80017b8:	4464      	add	r4, ip
 80017ba:	0df6      	lsrs	r6, r6, #23
 80017bc:	0261      	lsls	r1, r4, #9
 80017be:	4330      	orrs	r0, r6
 80017c0:	0dec      	lsrs	r4, r5, #23
 80017c2:	026e      	lsls	r6, r5, #9
 80017c4:	430c      	orrs	r4, r1
 80017c6:	4330      	orrs	r0, r6
 80017c8:	01c9      	lsls	r1, r1, #7
 80017ca:	d400      	bmi.n	80017ce <__aeabi_dmul+0x302>
 80017cc:	e0f1      	b.n	80019b2 <__aeabi_dmul+0x4e6>
 80017ce:	2101      	movs	r1, #1
 80017d0:	0843      	lsrs	r3, r0, #1
 80017d2:	4001      	ands	r1, r0
 80017d4:	430b      	orrs	r3, r1
 80017d6:	07e0      	lsls	r0, r4, #31
 80017d8:	4318      	orrs	r0, r3
 80017da:	0864      	lsrs	r4, r4, #1
 80017dc:	4915      	ldr	r1, [pc, #84]	; (8001834 <__aeabi_dmul+0x368>)
 80017de:	9b02      	ldr	r3, [sp, #8]
 80017e0:	468c      	mov	ip, r1
 80017e2:	4463      	add	r3, ip
 80017e4:	2b00      	cmp	r3, #0
 80017e6:	dc00      	bgt.n	80017ea <__aeabi_dmul+0x31e>
 80017e8:	e097      	b.n	800191a <__aeabi_dmul+0x44e>
 80017ea:	0741      	lsls	r1, r0, #29
 80017ec:	d009      	beq.n	8001802 <__aeabi_dmul+0x336>
 80017ee:	210f      	movs	r1, #15
 80017f0:	4001      	ands	r1, r0
 80017f2:	2904      	cmp	r1, #4
 80017f4:	d005      	beq.n	8001802 <__aeabi_dmul+0x336>
 80017f6:	1d01      	adds	r1, r0, #4
 80017f8:	4281      	cmp	r1, r0
 80017fa:	4180      	sbcs	r0, r0
 80017fc:	4240      	negs	r0, r0
 80017fe:	1824      	adds	r4, r4, r0
 8001800:	0008      	movs	r0, r1
 8001802:	01e1      	lsls	r1, r4, #7
 8001804:	d506      	bpl.n	8001814 <__aeabi_dmul+0x348>
 8001806:	2180      	movs	r1, #128	; 0x80
 8001808:	00c9      	lsls	r1, r1, #3
 800180a:	468c      	mov	ip, r1
 800180c:	4b0a      	ldr	r3, [pc, #40]	; (8001838 <__aeabi_dmul+0x36c>)
 800180e:	401c      	ands	r4, r3
 8001810:	9b02      	ldr	r3, [sp, #8]
 8001812:	4463      	add	r3, ip
 8001814:	4909      	ldr	r1, [pc, #36]	; (800183c <__aeabi_dmul+0x370>)
 8001816:	428b      	cmp	r3, r1
 8001818:	dd00      	ble.n	800181c <__aeabi_dmul+0x350>
 800181a:	e710      	b.n	800163e <__aeabi_dmul+0x172>
 800181c:	0761      	lsls	r1, r4, #29
 800181e:	08c5      	lsrs	r5, r0, #3
 8001820:	0264      	lsls	r4, r4, #9
 8001822:	055b      	lsls	r3, r3, #21
 8001824:	430d      	orrs	r5, r1
 8001826:	0b24      	lsrs	r4, r4, #12
 8001828:	0d5b      	lsrs	r3, r3, #21
 800182a:	e6c1      	b.n	80015b0 <__aeabi_dmul+0xe4>
 800182c:	000007ff 	.word	0x000007ff
 8001830:	fffffc01 	.word	0xfffffc01
 8001834:	000003ff 	.word	0x000003ff
 8001838:	feffffff 	.word	0xfeffffff
 800183c:	000007fe 	.word	0x000007fe
 8001840:	464b      	mov	r3, r9
 8001842:	4323      	orrs	r3, r4
 8001844:	d059      	beq.n	80018fa <__aeabi_dmul+0x42e>
 8001846:	2c00      	cmp	r4, #0
 8001848:	d100      	bne.n	800184c <__aeabi_dmul+0x380>
 800184a:	e0a3      	b.n	8001994 <__aeabi_dmul+0x4c8>
 800184c:	0020      	movs	r0, r4
 800184e:	f000 fdf9 	bl	8002444 <__clzsi2>
 8001852:	0001      	movs	r1, r0
 8001854:	0003      	movs	r3, r0
 8001856:	390b      	subs	r1, #11
 8001858:	221d      	movs	r2, #29
 800185a:	1a52      	subs	r2, r2, r1
 800185c:	4649      	mov	r1, r9
 800185e:	0018      	movs	r0, r3
 8001860:	40d1      	lsrs	r1, r2
 8001862:	464a      	mov	r2, r9
 8001864:	3808      	subs	r0, #8
 8001866:	4082      	lsls	r2, r0
 8001868:	4084      	lsls	r4, r0
 800186a:	0010      	movs	r0, r2
 800186c:	430c      	orrs	r4, r1
 800186e:	4a74      	ldr	r2, [pc, #464]	; (8001a40 <__aeabi_dmul+0x574>)
 8001870:	1aeb      	subs	r3, r5, r3
 8001872:	4694      	mov	ip, r2
 8001874:	4642      	mov	r2, r8
 8001876:	4463      	add	r3, ip
 8001878:	9301      	str	r3, [sp, #4]
 800187a:	9b01      	ldr	r3, [sp, #4]
 800187c:	407a      	eors	r2, r7
 800187e:	3301      	adds	r3, #1
 8001880:	2100      	movs	r1, #0
 8001882:	b2d2      	uxtb	r2, r2
 8001884:	9302      	str	r3, [sp, #8]
 8001886:	2e0a      	cmp	r6, #10
 8001888:	dd00      	ble.n	800188c <__aeabi_dmul+0x3c0>
 800188a:	e667      	b.n	800155c <__aeabi_dmul+0x90>
 800188c:	e683      	b.n	8001596 <__aeabi_dmul+0xca>
 800188e:	465b      	mov	r3, fp
 8001890:	4303      	orrs	r3, r0
 8001892:	469a      	mov	sl, r3
 8001894:	d02a      	beq.n	80018ec <__aeabi_dmul+0x420>
 8001896:	465b      	mov	r3, fp
 8001898:	2b00      	cmp	r3, #0
 800189a:	d06d      	beq.n	8001978 <__aeabi_dmul+0x4ac>
 800189c:	4658      	mov	r0, fp
 800189e:	f000 fdd1 	bl	8002444 <__clzsi2>
 80018a2:	0001      	movs	r1, r0
 80018a4:	0003      	movs	r3, r0
 80018a6:	390b      	subs	r1, #11
 80018a8:	221d      	movs	r2, #29
 80018aa:	1a52      	subs	r2, r2, r1
 80018ac:	0021      	movs	r1, r4
 80018ae:	0018      	movs	r0, r3
 80018b0:	465d      	mov	r5, fp
 80018b2:	40d1      	lsrs	r1, r2
 80018b4:	3808      	subs	r0, #8
 80018b6:	4085      	lsls	r5, r0
 80018b8:	000a      	movs	r2, r1
 80018ba:	4084      	lsls	r4, r0
 80018bc:	432a      	orrs	r2, r5
 80018be:	4693      	mov	fp, r2
 80018c0:	46a2      	mov	sl, r4
 80018c2:	4d5f      	ldr	r5, [pc, #380]	; (8001a40 <__aeabi_dmul+0x574>)
 80018c4:	2600      	movs	r6, #0
 80018c6:	1aed      	subs	r5, r5, r3
 80018c8:	2300      	movs	r3, #0
 80018ca:	9300      	str	r3, [sp, #0]
 80018cc:	e625      	b.n	800151a <__aeabi_dmul+0x4e>
 80018ce:	465b      	mov	r3, fp
 80018d0:	4303      	orrs	r3, r0
 80018d2:	469a      	mov	sl, r3
 80018d4:	d105      	bne.n	80018e2 <__aeabi_dmul+0x416>
 80018d6:	2300      	movs	r3, #0
 80018d8:	469b      	mov	fp, r3
 80018da:	3302      	adds	r3, #2
 80018dc:	2608      	movs	r6, #8
 80018de:	9300      	str	r3, [sp, #0]
 80018e0:	e61b      	b.n	800151a <__aeabi_dmul+0x4e>
 80018e2:	2303      	movs	r3, #3
 80018e4:	4682      	mov	sl, r0
 80018e6:	260c      	movs	r6, #12
 80018e8:	9300      	str	r3, [sp, #0]
 80018ea:	e616      	b.n	800151a <__aeabi_dmul+0x4e>
 80018ec:	2300      	movs	r3, #0
 80018ee:	469b      	mov	fp, r3
 80018f0:	3301      	adds	r3, #1
 80018f2:	2604      	movs	r6, #4
 80018f4:	2500      	movs	r5, #0
 80018f6:	9300      	str	r3, [sp, #0]
 80018f8:	e60f      	b.n	800151a <__aeabi_dmul+0x4e>
 80018fa:	4642      	mov	r2, r8
 80018fc:	3301      	adds	r3, #1
 80018fe:	9501      	str	r5, [sp, #4]
 8001900:	431e      	orrs	r6, r3
 8001902:	9b01      	ldr	r3, [sp, #4]
 8001904:	407a      	eors	r2, r7
 8001906:	3301      	adds	r3, #1
 8001908:	2400      	movs	r4, #0
 800190a:	2000      	movs	r0, #0
 800190c:	2101      	movs	r1, #1
 800190e:	b2d2      	uxtb	r2, r2
 8001910:	9302      	str	r3, [sp, #8]
 8001912:	2e0a      	cmp	r6, #10
 8001914:	dd00      	ble.n	8001918 <__aeabi_dmul+0x44c>
 8001916:	e621      	b.n	800155c <__aeabi_dmul+0x90>
 8001918:	e63d      	b.n	8001596 <__aeabi_dmul+0xca>
 800191a:	2101      	movs	r1, #1
 800191c:	1ac9      	subs	r1, r1, r3
 800191e:	2938      	cmp	r1, #56	; 0x38
 8001920:	dd00      	ble.n	8001924 <__aeabi_dmul+0x458>
 8001922:	e642      	b.n	80015aa <__aeabi_dmul+0xde>
 8001924:	291f      	cmp	r1, #31
 8001926:	dd47      	ble.n	80019b8 <__aeabi_dmul+0x4ec>
 8001928:	261f      	movs	r6, #31
 800192a:	0025      	movs	r5, r4
 800192c:	4276      	negs	r6, r6
 800192e:	1af3      	subs	r3, r6, r3
 8001930:	40dd      	lsrs	r5, r3
 8001932:	002b      	movs	r3, r5
 8001934:	2920      	cmp	r1, #32
 8001936:	d005      	beq.n	8001944 <__aeabi_dmul+0x478>
 8001938:	4942      	ldr	r1, [pc, #264]	; (8001a44 <__aeabi_dmul+0x578>)
 800193a:	9d02      	ldr	r5, [sp, #8]
 800193c:	468c      	mov	ip, r1
 800193e:	4465      	add	r5, ip
 8001940:	40ac      	lsls	r4, r5
 8001942:	4320      	orrs	r0, r4
 8001944:	1e41      	subs	r1, r0, #1
 8001946:	4188      	sbcs	r0, r1
 8001948:	4318      	orrs	r0, r3
 800194a:	2307      	movs	r3, #7
 800194c:	001d      	movs	r5, r3
 800194e:	2400      	movs	r4, #0
 8001950:	4005      	ands	r5, r0
 8001952:	4203      	tst	r3, r0
 8001954:	d04a      	beq.n	80019ec <__aeabi_dmul+0x520>
 8001956:	230f      	movs	r3, #15
 8001958:	2400      	movs	r4, #0
 800195a:	4003      	ands	r3, r0
 800195c:	2b04      	cmp	r3, #4
 800195e:	d042      	beq.n	80019e6 <__aeabi_dmul+0x51a>
 8001960:	1d03      	adds	r3, r0, #4
 8001962:	4283      	cmp	r3, r0
 8001964:	4180      	sbcs	r0, r0
 8001966:	4240      	negs	r0, r0
 8001968:	1824      	adds	r4, r4, r0
 800196a:	0018      	movs	r0, r3
 800196c:	0223      	lsls	r3, r4, #8
 800196e:	d53a      	bpl.n	80019e6 <__aeabi_dmul+0x51a>
 8001970:	2301      	movs	r3, #1
 8001972:	2400      	movs	r4, #0
 8001974:	2500      	movs	r5, #0
 8001976:	e61b      	b.n	80015b0 <__aeabi_dmul+0xe4>
 8001978:	f000 fd64 	bl	8002444 <__clzsi2>
 800197c:	0001      	movs	r1, r0
 800197e:	0003      	movs	r3, r0
 8001980:	3115      	adds	r1, #21
 8001982:	3320      	adds	r3, #32
 8001984:	291c      	cmp	r1, #28
 8001986:	dd8f      	ble.n	80018a8 <__aeabi_dmul+0x3dc>
 8001988:	3808      	subs	r0, #8
 800198a:	2200      	movs	r2, #0
 800198c:	4084      	lsls	r4, r0
 800198e:	4692      	mov	sl, r2
 8001990:	46a3      	mov	fp, r4
 8001992:	e796      	b.n	80018c2 <__aeabi_dmul+0x3f6>
 8001994:	f000 fd56 	bl	8002444 <__clzsi2>
 8001998:	0001      	movs	r1, r0
 800199a:	0003      	movs	r3, r0
 800199c:	3115      	adds	r1, #21
 800199e:	3320      	adds	r3, #32
 80019a0:	291c      	cmp	r1, #28
 80019a2:	dc00      	bgt.n	80019a6 <__aeabi_dmul+0x4da>
 80019a4:	e758      	b.n	8001858 <__aeabi_dmul+0x38c>
 80019a6:	0002      	movs	r2, r0
 80019a8:	464c      	mov	r4, r9
 80019aa:	3a08      	subs	r2, #8
 80019ac:	2000      	movs	r0, #0
 80019ae:	4094      	lsls	r4, r2
 80019b0:	e75d      	b.n	800186e <__aeabi_dmul+0x3a2>
 80019b2:	9b01      	ldr	r3, [sp, #4]
 80019b4:	9302      	str	r3, [sp, #8]
 80019b6:	e711      	b.n	80017dc <__aeabi_dmul+0x310>
 80019b8:	4b23      	ldr	r3, [pc, #140]	; (8001a48 <__aeabi_dmul+0x57c>)
 80019ba:	0026      	movs	r6, r4
 80019bc:	469c      	mov	ip, r3
 80019be:	0003      	movs	r3, r0
 80019c0:	9d02      	ldr	r5, [sp, #8]
 80019c2:	40cb      	lsrs	r3, r1
 80019c4:	4465      	add	r5, ip
 80019c6:	40ae      	lsls	r6, r5
 80019c8:	431e      	orrs	r6, r3
 80019ca:	0003      	movs	r3, r0
 80019cc:	40ab      	lsls	r3, r5
 80019ce:	1e58      	subs	r0, r3, #1
 80019d0:	4183      	sbcs	r3, r0
 80019d2:	0030      	movs	r0, r6
 80019d4:	4318      	orrs	r0, r3
 80019d6:	40cc      	lsrs	r4, r1
 80019d8:	0743      	lsls	r3, r0, #29
 80019da:	d0c7      	beq.n	800196c <__aeabi_dmul+0x4a0>
 80019dc:	230f      	movs	r3, #15
 80019de:	4003      	ands	r3, r0
 80019e0:	2b04      	cmp	r3, #4
 80019e2:	d1bd      	bne.n	8001960 <__aeabi_dmul+0x494>
 80019e4:	e7c2      	b.n	800196c <__aeabi_dmul+0x4a0>
 80019e6:	0765      	lsls	r5, r4, #29
 80019e8:	0264      	lsls	r4, r4, #9
 80019ea:	0b24      	lsrs	r4, r4, #12
 80019ec:	08c0      	lsrs	r0, r0, #3
 80019ee:	2300      	movs	r3, #0
 80019f0:	4305      	orrs	r5, r0
 80019f2:	e5dd      	b.n	80015b0 <__aeabi_dmul+0xe4>
 80019f4:	2500      	movs	r5, #0
 80019f6:	2302      	movs	r3, #2
 80019f8:	2e0f      	cmp	r6, #15
 80019fa:	d10c      	bne.n	8001a16 <__aeabi_dmul+0x54a>
 80019fc:	2480      	movs	r4, #128	; 0x80
 80019fe:	465b      	mov	r3, fp
 8001a00:	0324      	lsls	r4, r4, #12
 8001a02:	4223      	tst	r3, r4
 8001a04:	d00e      	beq.n	8001a24 <__aeabi_dmul+0x558>
 8001a06:	4221      	tst	r1, r4
 8001a08:	d10c      	bne.n	8001a24 <__aeabi_dmul+0x558>
 8001a0a:	430c      	orrs	r4, r1
 8001a0c:	0324      	lsls	r4, r4, #12
 8001a0e:	003a      	movs	r2, r7
 8001a10:	4b0e      	ldr	r3, [pc, #56]	; (8001a4c <__aeabi_dmul+0x580>)
 8001a12:	0b24      	lsrs	r4, r4, #12
 8001a14:	e5cc      	b.n	80015b0 <__aeabi_dmul+0xe4>
 8001a16:	2e0b      	cmp	r6, #11
 8001a18:	d000      	beq.n	8001a1c <__aeabi_dmul+0x550>
 8001a1a:	e5a2      	b.n	8001562 <__aeabi_dmul+0x96>
 8001a1c:	468b      	mov	fp, r1
 8001a1e:	46aa      	mov	sl, r5
 8001a20:	9300      	str	r3, [sp, #0]
 8001a22:	e5f7      	b.n	8001614 <__aeabi_dmul+0x148>
 8001a24:	2480      	movs	r4, #128	; 0x80
 8001a26:	465b      	mov	r3, fp
 8001a28:	0324      	lsls	r4, r4, #12
 8001a2a:	431c      	orrs	r4, r3
 8001a2c:	0324      	lsls	r4, r4, #12
 8001a2e:	4642      	mov	r2, r8
 8001a30:	4655      	mov	r5, sl
 8001a32:	4b06      	ldr	r3, [pc, #24]	; (8001a4c <__aeabi_dmul+0x580>)
 8001a34:	0b24      	lsrs	r4, r4, #12
 8001a36:	e5bb      	b.n	80015b0 <__aeabi_dmul+0xe4>
 8001a38:	464d      	mov	r5, r9
 8001a3a:	0021      	movs	r1, r4
 8001a3c:	2303      	movs	r3, #3
 8001a3e:	e7db      	b.n	80019f8 <__aeabi_dmul+0x52c>
 8001a40:	fffffc0d 	.word	0xfffffc0d
 8001a44:	0000043e 	.word	0x0000043e
 8001a48:	0000041e 	.word	0x0000041e
 8001a4c:	000007ff 	.word	0x000007ff

08001a50 <__aeabi_dsub>:
 8001a50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a52:	4657      	mov	r7, sl
 8001a54:	464e      	mov	r6, r9
 8001a56:	4645      	mov	r5, r8
 8001a58:	46de      	mov	lr, fp
 8001a5a:	b5e0      	push	{r5, r6, r7, lr}
 8001a5c:	000d      	movs	r5, r1
 8001a5e:	0004      	movs	r4, r0
 8001a60:	0019      	movs	r1, r3
 8001a62:	0010      	movs	r0, r2
 8001a64:	032b      	lsls	r3, r5, #12
 8001a66:	0a5b      	lsrs	r3, r3, #9
 8001a68:	0f62      	lsrs	r2, r4, #29
 8001a6a:	431a      	orrs	r2, r3
 8001a6c:	00e3      	lsls	r3, r4, #3
 8001a6e:	030c      	lsls	r4, r1, #12
 8001a70:	0a64      	lsrs	r4, r4, #9
 8001a72:	0f47      	lsrs	r7, r0, #29
 8001a74:	4327      	orrs	r7, r4
 8001a76:	4cd0      	ldr	r4, [pc, #832]	; (8001db8 <__aeabi_dsub+0x368>)
 8001a78:	006e      	lsls	r6, r5, #1
 8001a7a:	4691      	mov	r9, r2
 8001a7c:	b083      	sub	sp, #12
 8001a7e:	004a      	lsls	r2, r1, #1
 8001a80:	00c0      	lsls	r0, r0, #3
 8001a82:	4698      	mov	r8, r3
 8001a84:	46a2      	mov	sl, r4
 8001a86:	0d76      	lsrs	r6, r6, #21
 8001a88:	0fed      	lsrs	r5, r5, #31
 8001a8a:	0d52      	lsrs	r2, r2, #21
 8001a8c:	0fc9      	lsrs	r1, r1, #31
 8001a8e:	9001      	str	r0, [sp, #4]
 8001a90:	42a2      	cmp	r2, r4
 8001a92:	d100      	bne.n	8001a96 <__aeabi_dsub+0x46>
 8001a94:	e0b9      	b.n	8001c0a <__aeabi_dsub+0x1ba>
 8001a96:	2401      	movs	r4, #1
 8001a98:	4061      	eors	r1, r4
 8001a9a:	468b      	mov	fp, r1
 8001a9c:	428d      	cmp	r5, r1
 8001a9e:	d100      	bne.n	8001aa2 <__aeabi_dsub+0x52>
 8001aa0:	e08d      	b.n	8001bbe <__aeabi_dsub+0x16e>
 8001aa2:	1ab4      	subs	r4, r6, r2
 8001aa4:	46a4      	mov	ip, r4
 8001aa6:	2c00      	cmp	r4, #0
 8001aa8:	dc00      	bgt.n	8001aac <__aeabi_dsub+0x5c>
 8001aaa:	e0b7      	b.n	8001c1c <__aeabi_dsub+0x1cc>
 8001aac:	2a00      	cmp	r2, #0
 8001aae:	d100      	bne.n	8001ab2 <__aeabi_dsub+0x62>
 8001ab0:	e0cb      	b.n	8001c4a <__aeabi_dsub+0x1fa>
 8001ab2:	4ac1      	ldr	r2, [pc, #772]	; (8001db8 <__aeabi_dsub+0x368>)
 8001ab4:	4296      	cmp	r6, r2
 8001ab6:	d100      	bne.n	8001aba <__aeabi_dsub+0x6a>
 8001ab8:	e186      	b.n	8001dc8 <__aeabi_dsub+0x378>
 8001aba:	2280      	movs	r2, #128	; 0x80
 8001abc:	0412      	lsls	r2, r2, #16
 8001abe:	4317      	orrs	r7, r2
 8001ac0:	4662      	mov	r2, ip
 8001ac2:	2a38      	cmp	r2, #56	; 0x38
 8001ac4:	dd00      	ble.n	8001ac8 <__aeabi_dsub+0x78>
 8001ac6:	e1a4      	b.n	8001e12 <__aeabi_dsub+0x3c2>
 8001ac8:	2a1f      	cmp	r2, #31
 8001aca:	dd00      	ble.n	8001ace <__aeabi_dsub+0x7e>
 8001acc:	e21d      	b.n	8001f0a <__aeabi_dsub+0x4ba>
 8001ace:	4661      	mov	r1, ip
 8001ad0:	2220      	movs	r2, #32
 8001ad2:	003c      	movs	r4, r7
 8001ad4:	1a52      	subs	r2, r2, r1
 8001ad6:	0001      	movs	r1, r0
 8001ad8:	4090      	lsls	r0, r2
 8001ada:	4094      	lsls	r4, r2
 8001adc:	1e42      	subs	r2, r0, #1
 8001ade:	4190      	sbcs	r0, r2
 8001ae0:	4662      	mov	r2, ip
 8001ae2:	46a0      	mov	r8, r4
 8001ae4:	4664      	mov	r4, ip
 8001ae6:	40d7      	lsrs	r7, r2
 8001ae8:	464a      	mov	r2, r9
 8001aea:	40e1      	lsrs	r1, r4
 8001aec:	4644      	mov	r4, r8
 8001aee:	1bd2      	subs	r2, r2, r7
 8001af0:	4691      	mov	r9, r2
 8001af2:	430c      	orrs	r4, r1
 8001af4:	4304      	orrs	r4, r0
 8001af6:	1b1c      	subs	r4, r3, r4
 8001af8:	42a3      	cmp	r3, r4
 8001afa:	4192      	sbcs	r2, r2
 8001afc:	464b      	mov	r3, r9
 8001afe:	4252      	negs	r2, r2
 8001b00:	1a9b      	subs	r3, r3, r2
 8001b02:	469a      	mov	sl, r3
 8001b04:	4653      	mov	r3, sl
 8001b06:	021b      	lsls	r3, r3, #8
 8001b08:	d400      	bmi.n	8001b0c <__aeabi_dsub+0xbc>
 8001b0a:	e12b      	b.n	8001d64 <__aeabi_dsub+0x314>
 8001b0c:	4653      	mov	r3, sl
 8001b0e:	025a      	lsls	r2, r3, #9
 8001b10:	0a53      	lsrs	r3, r2, #9
 8001b12:	469a      	mov	sl, r3
 8001b14:	4653      	mov	r3, sl
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d100      	bne.n	8001b1c <__aeabi_dsub+0xcc>
 8001b1a:	e166      	b.n	8001dea <__aeabi_dsub+0x39a>
 8001b1c:	4650      	mov	r0, sl
 8001b1e:	f000 fc91 	bl	8002444 <__clzsi2>
 8001b22:	0003      	movs	r3, r0
 8001b24:	3b08      	subs	r3, #8
 8001b26:	2220      	movs	r2, #32
 8001b28:	0020      	movs	r0, r4
 8001b2a:	1ad2      	subs	r2, r2, r3
 8001b2c:	4651      	mov	r1, sl
 8001b2e:	40d0      	lsrs	r0, r2
 8001b30:	4099      	lsls	r1, r3
 8001b32:	0002      	movs	r2, r0
 8001b34:	409c      	lsls	r4, r3
 8001b36:	430a      	orrs	r2, r1
 8001b38:	429e      	cmp	r6, r3
 8001b3a:	dd00      	ble.n	8001b3e <__aeabi_dsub+0xee>
 8001b3c:	e164      	b.n	8001e08 <__aeabi_dsub+0x3b8>
 8001b3e:	1b9b      	subs	r3, r3, r6
 8001b40:	1c59      	adds	r1, r3, #1
 8001b42:	291f      	cmp	r1, #31
 8001b44:	dd00      	ble.n	8001b48 <__aeabi_dsub+0xf8>
 8001b46:	e0fe      	b.n	8001d46 <__aeabi_dsub+0x2f6>
 8001b48:	2320      	movs	r3, #32
 8001b4a:	0010      	movs	r0, r2
 8001b4c:	0026      	movs	r6, r4
 8001b4e:	1a5b      	subs	r3, r3, r1
 8001b50:	409c      	lsls	r4, r3
 8001b52:	4098      	lsls	r0, r3
 8001b54:	40ce      	lsrs	r6, r1
 8001b56:	40ca      	lsrs	r2, r1
 8001b58:	1e63      	subs	r3, r4, #1
 8001b5a:	419c      	sbcs	r4, r3
 8001b5c:	4330      	orrs	r0, r6
 8001b5e:	4692      	mov	sl, r2
 8001b60:	2600      	movs	r6, #0
 8001b62:	4304      	orrs	r4, r0
 8001b64:	0763      	lsls	r3, r4, #29
 8001b66:	d009      	beq.n	8001b7c <__aeabi_dsub+0x12c>
 8001b68:	230f      	movs	r3, #15
 8001b6a:	4023      	ands	r3, r4
 8001b6c:	2b04      	cmp	r3, #4
 8001b6e:	d005      	beq.n	8001b7c <__aeabi_dsub+0x12c>
 8001b70:	1d23      	adds	r3, r4, #4
 8001b72:	42a3      	cmp	r3, r4
 8001b74:	41a4      	sbcs	r4, r4
 8001b76:	4264      	negs	r4, r4
 8001b78:	44a2      	add	sl, r4
 8001b7a:	001c      	movs	r4, r3
 8001b7c:	4653      	mov	r3, sl
 8001b7e:	021b      	lsls	r3, r3, #8
 8001b80:	d400      	bmi.n	8001b84 <__aeabi_dsub+0x134>
 8001b82:	e0f2      	b.n	8001d6a <__aeabi_dsub+0x31a>
 8001b84:	4b8c      	ldr	r3, [pc, #560]	; (8001db8 <__aeabi_dsub+0x368>)
 8001b86:	3601      	adds	r6, #1
 8001b88:	429e      	cmp	r6, r3
 8001b8a:	d100      	bne.n	8001b8e <__aeabi_dsub+0x13e>
 8001b8c:	e10f      	b.n	8001dae <__aeabi_dsub+0x35e>
 8001b8e:	4653      	mov	r3, sl
 8001b90:	498a      	ldr	r1, [pc, #552]	; (8001dbc <__aeabi_dsub+0x36c>)
 8001b92:	08e4      	lsrs	r4, r4, #3
 8001b94:	400b      	ands	r3, r1
 8001b96:	0019      	movs	r1, r3
 8001b98:	075b      	lsls	r3, r3, #29
 8001b9a:	4323      	orrs	r3, r4
 8001b9c:	0572      	lsls	r2, r6, #21
 8001b9e:	024c      	lsls	r4, r1, #9
 8001ba0:	0b24      	lsrs	r4, r4, #12
 8001ba2:	0d52      	lsrs	r2, r2, #21
 8001ba4:	0512      	lsls	r2, r2, #20
 8001ba6:	4322      	orrs	r2, r4
 8001ba8:	07ed      	lsls	r5, r5, #31
 8001baa:	432a      	orrs	r2, r5
 8001bac:	0018      	movs	r0, r3
 8001bae:	0011      	movs	r1, r2
 8001bb0:	b003      	add	sp, #12
 8001bb2:	bcf0      	pop	{r4, r5, r6, r7}
 8001bb4:	46bb      	mov	fp, r7
 8001bb6:	46b2      	mov	sl, r6
 8001bb8:	46a9      	mov	r9, r5
 8001bba:	46a0      	mov	r8, r4
 8001bbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bbe:	1ab4      	subs	r4, r6, r2
 8001bc0:	46a4      	mov	ip, r4
 8001bc2:	2c00      	cmp	r4, #0
 8001bc4:	dd59      	ble.n	8001c7a <__aeabi_dsub+0x22a>
 8001bc6:	2a00      	cmp	r2, #0
 8001bc8:	d100      	bne.n	8001bcc <__aeabi_dsub+0x17c>
 8001bca:	e0b0      	b.n	8001d2e <__aeabi_dsub+0x2de>
 8001bcc:	4556      	cmp	r6, sl
 8001bce:	d100      	bne.n	8001bd2 <__aeabi_dsub+0x182>
 8001bd0:	e0fa      	b.n	8001dc8 <__aeabi_dsub+0x378>
 8001bd2:	2280      	movs	r2, #128	; 0x80
 8001bd4:	0412      	lsls	r2, r2, #16
 8001bd6:	4317      	orrs	r7, r2
 8001bd8:	4662      	mov	r2, ip
 8001bda:	2a38      	cmp	r2, #56	; 0x38
 8001bdc:	dd00      	ble.n	8001be0 <__aeabi_dsub+0x190>
 8001bde:	e0d4      	b.n	8001d8a <__aeabi_dsub+0x33a>
 8001be0:	2a1f      	cmp	r2, #31
 8001be2:	dc00      	bgt.n	8001be6 <__aeabi_dsub+0x196>
 8001be4:	e1c0      	b.n	8001f68 <__aeabi_dsub+0x518>
 8001be6:	0039      	movs	r1, r7
 8001be8:	3a20      	subs	r2, #32
 8001bea:	40d1      	lsrs	r1, r2
 8001bec:	4662      	mov	r2, ip
 8001bee:	2a20      	cmp	r2, #32
 8001bf0:	d006      	beq.n	8001c00 <__aeabi_dsub+0x1b0>
 8001bf2:	4664      	mov	r4, ip
 8001bf4:	2240      	movs	r2, #64	; 0x40
 8001bf6:	1b12      	subs	r2, r2, r4
 8001bf8:	003c      	movs	r4, r7
 8001bfa:	4094      	lsls	r4, r2
 8001bfc:	4304      	orrs	r4, r0
 8001bfe:	9401      	str	r4, [sp, #4]
 8001c00:	9c01      	ldr	r4, [sp, #4]
 8001c02:	1e62      	subs	r2, r4, #1
 8001c04:	4194      	sbcs	r4, r2
 8001c06:	430c      	orrs	r4, r1
 8001c08:	e0c3      	b.n	8001d92 <__aeabi_dsub+0x342>
 8001c0a:	003c      	movs	r4, r7
 8001c0c:	4304      	orrs	r4, r0
 8001c0e:	d02b      	beq.n	8001c68 <__aeabi_dsub+0x218>
 8001c10:	468b      	mov	fp, r1
 8001c12:	428d      	cmp	r5, r1
 8001c14:	d02e      	beq.n	8001c74 <__aeabi_dsub+0x224>
 8001c16:	4c6a      	ldr	r4, [pc, #424]	; (8001dc0 <__aeabi_dsub+0x370>)
 8001c18:	46a4      	mov	ip, r4
 8001c1a:	44b4      	add	ip, r6
 8001c1c:	4664      	mov	r4, ip
 8001c1e:	2c00      	cmp	r4, #0
 8001c20:	d05f      	beq.n	8001ce2 <__aeabi_dsub+0x292>
 8001c22:	1b94      	subs	r4, r2, r6
 8001c24:	46a4      	mov	ip, r4
 8001c26:	2e00      	cmp	r6, #0
 8001c28:	d000      	beq.n	8001c2c <__aeabi_dsub+0x1dc>
 8001c2a:	e120      	b.n	8001e6e <__aeabi_dsub+0x41e>
 8001c2c:	464c      	mov	r4, r9
 8001c2e:	431c      	orrs	r4, r3
 8001c30:	d100      	bne.n	8001c34 <__aeabi_dsub+0x1e4>
 8001c32:	e1c7      	b.n	8001fc4 <__aeabi_dsub+0x574>
 8001c34:	4661      	mov	r1, ip
 8001c36:	1e4c      	subs	r4, r1, #1
 8001c38:	2901      	cmp	r1, #1
 8001c3a:	d100      	bne.n	8001c3e <__aeabi_dsub+0x1ee>
 8001c3c:	e223      	b.n	8002086 <__aeabi_dsub+0x636>
 8001c3e:	4d5e      	ldr	r5, [pc, #376]	; (8001db8 <__aeabi_dsub+0x368>)
 8001c40:	45ac      	cmp	ip, r5
 8001c42:	d100      	bne.n	8001c46 <__aeabi_dsub+0x1f6>
 8001c44:	e1d8      	b.n	8001ff8 <__aeabi_dsub+0x5a8>
 8001c46:	46a4      	mov	ip, r4
 8001c48:	e11a      	b.n	8001e80 <__aeabi_dsub+0x430>
 8001c4a:	003a      	movs	r2, r7
 8001c4c:	4302      	orrs	r2, r0
 8001c4e:	d100      	bne.n	8001c52 <__aeabi_dsub+0x202>
 8001c50:	e0e4      	b.n	8001e1c <__aeabi_dsub+0x3cc>
 8001c52:	0022      	movs	r2, r4
 8001c54:	3a01      	subs	r2, #1
 8001c56:	2c01      	cmp	r4, #1
 8001c58:	d100      	bne.n	8001c5c <__aeabi_dsub+0x20c>
 8001c5a:	e1c3      	b.n	8001fe4 <__aeabi_dsub+0x594>
 8001c5c:	4956      	ldr	r1, [pc, #344]	; (8001db8 <__aeabi_dsub+0x368>)
 8001c5e:	428c      	cmp	r4, r1
 8001c60:	d100      	bne.n	8001c64 <__aeabi_dsub+0x214>
 8001c62:	e0b1      	b.n	8001dc8 <__aeabi_dsub+0x378>
 8001c64:	4694      	mov	ip, r2
 8001c66:	e72b      	b.n	8001ac0 <__aeabi_dsub+0x70>
 8001c68:	2401      	movs	r4, #1
 8001c6a:	4061      	eors	r1, r4
 8001c6c:	468b      	mov	fp, r1
 8001c6e:	428d      	cmp	r5, r1
 8001c70:	d000      	beq.n	8001c74 <__aeabi_dsub+0x224>
 8001c72:	e716      	b.n	8001aa2 <__aeabi_dsub+0x52>
 8001c74:	4952      	ldr	r1, [pc, #328]	; (8001dc0 <__aeabi_dsub+0x370>)
 8001c76:	468c      	mov	ip, r1
 8001c78:	44b4      	add	ip, r6
 8001c7a:	4664      	mov	r4, ip
 8001c7c:	2c00      	cmp	r4, #0
 8001c7e:	d100      	bne.n	8001c82 <__aeabi_dsub+0x232>
 8001c80:	e0d3      	b.n	8001e2a <__aeabi_dsub+0x3da>
 8001c82:	1b91      	subs	r1, r2, r6
 8001c84:	468c      	mov	ip, r1
 8001c86:	2e00      	cmp	r6, #0
 8001c88:	d100      	bne.n	8001c8c <__aeabi_dsub+0x23c>
 8001c8a:	e15e      	b.n	8001f4a <__aeabi_dsub+0x4fa>
 8001c8c:	494a      	ldr	r1, [pc, #296]	; (8001db8 <__aeabi_dsub+0x368>)
 8001c8e:	428a      	cmp	r2, r1
 8001c90:	d100      	bne.n	8001c94 <__aeabi_dsub+0x244>
 8001c92:	e1be      	b.n	8002012 <__aeabi_dsub+0x5c2>
 8001c94:	2180      	movs	r1, #128	; 0x80
 8001c96:	464c      	mov	r4, r9
 8001c98:	0409      	lsls	r1, r1, #16
 8001c9a:	430c      	orrs	r4, r1
 8001c9c:	46a1      	mov	r9, r4
 8001c9e:	4661      	mov	r1, ip
 8001ca0:	2938      	cmp	r1, #56	; 0x38
 8001ca2:	dd00      	ble.n	8001ca6 <__aeabi_dsub+0x256>
 8001ca4:	e1ba      	b.n	800201c <__aeabi_dsub+0x5cc>
 8001ca6:	291f      	cmp	r1, #31
 8001ca8:	dd00      	ble.n	8001cac <__aeabi_dsub+0x25c>
 8001caa:	e227      	b.n	80020fc <__aeabi_dsub+0x6ac>
 8001cac:	2420      	movs	r4, #32
 8001cae:	1a64      	subs	r4, r4, r1
 8001cb0:	4649      	mov	r1, r9
 8001cb2:	40a1      	lsls	r1, r4
 8001cb4:	001e      	movs	r6, r3
 8001cb6:	4688      	mov	r8, r1
 8001cb8:	4661      	mov	r1, ip
 8001cba:	40a3      	lsls	r3, r4
 8001cbc:	40ce      	lsrs	r6, r1
 8001cbe:	4641      	mov	r1, r8
 8001cc0:	1e5c      	subs	r4, r3, #1
 8001cc2:	41a3      	sbcs	r3, r4
 8001cc4:	4331      	orrs	r1, r6
 8001cc6:	4319      	orrs	r1, r3
 8001cc8:	000c      	movs	r4, r1
 8001cca:	4663      	mov	r3, ip
 8001ccc:	4649      	mov	r1, r9
 8001cce:	40d9      	lsrs	r1, r3
 8001cd0:	187f      	adds	r7, r7, r1
 8001cd2:	1824      	adds	r4, r4, r0
 8001cd4:	4284      	cmp	r4, r0
 8001cd6:	419b      	sbcs	r3, r3
 8001cd8:	425b      	negs	r3, r3
 8001cda:	469a      	mov	sl, r3
 8001cdc:	0016      	movs	r6, r2
 8001cde:	44ba      	add	sl, r7
 8001ce0:	e05d      	b.n	8001d9e <__aeabi_dsub+0x34e>
 8001ce2:	4c38      	ldr	r4, [pc, #224]	; (8001dc4 <__aeabi_dsub+0x374>)
 8001ce4:	1c72      	adds	r2, r6, #1
 8001ce6:	4222      	tst	r2, r4
 8001ce8:	d000      	beq.n	8001cec <__aeabi_dsub+0x29c>
 8001cea:	e0df      	b.n	8001eac <__aeabi_dsub+0x45c>
 8001cec:	464a      	mov	r2, r9
 8001cee:	431a      	orrs	r2, r3
 8001cf0:	2e00      	cmp	r6, #0
 8001cf2:	d000      	beq.n	8001cf6 <__aeabi_dsub+0x2a6>
 8001cf4:	e15c      	b.n	8001fb0 <__aeabi_dsub+0x560>
 8001cf6:	2a00      	cmp	r2, #0
 8001cf8:	d100      	bne.n	8001cfc <__aeabi_dsub+0x2ac>
 8001cfa:	e1cf      	b.n	800209c <__aeabi_dsub+0x64c>
 8001cfc:	003a      	movs	r2, r7
 8001cfe:	4302      	orrs	r2, r0
 8001d00:	d100      	bne.n	8001d04 <__aeabi_dsub+0x2b4>
 8001d02:	e17f      	b.n	8002004 <__aeabi_dsub+0x5b4>
 8001d04:	1a1c      	subs	r4, r3, r0
 8001d06:	464a      	mov	r2, r9
 8001d08:	42a3      	cmp	r3, r4
 8001d0a:	4189      	sbcs	r1, r1
 8001d0c:	1bd2      	subs	r2, r2, r7
 8001d0e:	4249      	negs	r1, r1
 8001d10:	1a52      	subs	r2, r2, r1
 8001d12:	4692      	mov	sl, r2
 8001d14:	0212      	lsls	r2, r2, #8
 8001d16:	d400      	bmi.n	8001d1a <__aeabi_dsub+0x2ca>
 8001d18:	e20a      	b.n	8002130 <__aeabi_dsub+0x6e0>
 8001d1a:	1ac4      	subs	r4, r0, r3
 8001d1c:	42a0      	cmp	r0, r4
 8001d1e:	4180      	sbcs	r0, r0
 8001d20:	464b      	mov	r3, r9
 8001d22:	4240      	negs	r0, r0
 8001d24:	1aff      	subs	r7, r7, r3
 8001d26:	1a3b      	subs	r3, r7, r0
 8001d28:	469a      	mov	sl, r3
 8001d2a:	465d      	mov	r5, fp
 8001d2c:	e71a      	b.n	8001b64 <__aeabi_dsub+0x114>
 8001d2e:	003a      	movs	r2, r7
 8001d30:	4302      	orrs	r2, r0
 8001d32:	d073      	beq.n	8001e1c <__aeabi_dsub+0x3cc>
 8001d34:	0022      	movs	r2, r4
 8001d36:	3a01      	subs	r2, #1
 8001d38:	2c01      	cmp	r4, #1
 8001d3a:	d100      	bne.n	8001d3e <__aeabi_dsub+0x2ee>
 8001d3c:	e0cb      	b.n	8001ed6 <__aeabi_dsub+0x486>
 8001d3e:	4554      	cmp	r4, sl
 8001d40:	d042      	beq.n	8001dc8 <__aeabi_dsub+0x378>
 8001d42:	4694      	mov	ip, r2
 8001d44:	e748      	b.n	8001bd8 <__aeabi_dsub+0x188>
 8001d46:	0010      	movs	r0, r2
 8001d48:	3b1f      	subs	r3, #31
 8001d4a:	40d8      	lsrs	r0, r3
 8001d4c:	2920      	cmp	r1, #32
 8001d4e:	d003      	beq.n	8001d58 <__aeabi_dsub+0x308>
 8001d50:	2340      	movs	r3, #64	; 0x40
 8001d52:	1a5b      	subs	r3, r3, r1
 8001d54:	409a      	lsls	r2, r3
 8001d56:	4314      	orrs	r4, r2
 8001d58:	1e63      	subs	r3, r4, #1
 8001d5a:	419c      	sbcs	r4, r3
 8001d5c:	2300      	movs	r3, #0
 8001d5e:	2600      	movs	r6, #0
 8001d60:	469a      	mov	sl, r3
 8001d62:	4304      	orrs	r4, r0
 8001d64:	0763      	lsls	r3, r4, #29
 8001d66:	d000      	beq.n	8001d6a <__aeabi_dsub+0x31a>
 8001d68:	e6fe      	b.n	8001b68 <__aeabi_dsub+0x118>
 8001d6a:	4652      	mov	r2, sl
 8001d6c:	08e3      	lsrs	r3, r4, #3
 8001d6e:	0752      	lsls	r2, r2, #29
 8001d70:	4313      	orrs	r3, r2
 8001d72:	4652      	mov	r2, sl
 8001d74:	46b4      	mov	ip, r6
 8001d76:	08d2      	lsrs	r2, r2, #3
 8001d78:	490f      	ldr	r1, [pc, #60]	; (8001db8 <__aeabi_dsub+0x368>)
 8001d7a:	458c      	cmp	ip, r1
 8001d7c:	d02a      	beq.n	8001dd4 <__aeabi_dsub+0x384>
 8001d7e:	0312      	lsls	r2, r2, #12
 8001d80:	0b14      	lsrs	r4, r2, #12
 8001d82:	4662      	mov	r2, ip
 8001d84:	0552      	lsls	r2, r2, #21
 8001d86:	0d52      	lsrs	r2, r2, #21
 8001d88:	e70c      	b.n	8001ba4 <__aeabi_dsub+0x154>
 8001d8a:	003c      	movs	r4, r7
 8001d8c:	4304      	orrs	r4, r0
 8001d8e:	1e62      	subs	r2, r4, #1
 8001d90:	4194      	sbcs	r4, r2
 8001d92:	18e4      	adds	r4, r4, r3
 8001d94:	429c      	cmp	r4, r3
 8001d96:	4192      	sbcs	r2, r2
 8001d98:	4252      	negs	r2, r2
 8001d9a:	444a      	add	r2, r9
 8001d9c:	4692      	mov	sl, r2
 8001d9e:	4653      	mov	r3, sl
 8001da0:	021b      	lsls	r3, r3, #8
 8001da2:	d5df      	bpl.n	8001d64 <__aeabi_dsub+0x314>
 8001da4:	4b04      	ldr	r3, [pc, #16]	; (8001db8 <__aeabi_dsub+0x368>)
 8001da6:	3601      	adds	r6, #1
 8001da8:	429e      	cmp	r6, r3
 8001daa:	d000      	beq.n	8001dae <__aeabi_dsub+0x35e>
 8001dac:	e0a0      	b.n	8001ef0 <__aeabi_dsub+0x4a0>
 8001dae:	0032      	movs	r2, r6
 8001db0:	2400      	movs	r4, #0
 8001db2:	2300      	movs	r3, #0
 8001db4:	e6f6      	b.n	8001ba4 <__aeabi_dsub+0x154>
 8001db6:	46c0      	nop			; (mov r8, r8)
 8001db8:	000007ff 	.word	0x000007ff
 8001dbc:	ff7fffff 	.word	0xff7fffff
 8001dc0:	fffff801 	.word	0xfffff801
 8001dc4:	000007fe 	.word	0x000007fe
 8001dc8:	08db      	lsrs	r3, r3, #3
 8001dca:	464a      	mov	r2, r9
 8001dcc:	0752      	lsls	r2, r2, #29
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	464a      	mov	r2, r9
 8001dd2:	08d2      	lsrs	r2, r2, #3
 8001dd4:	0019      	movs	r1, r3
 8001dd6:	4311      	orrs	r1, r2
 8001dd8:	d100      	bne.n	8001ddc <__aeabi_dsub+0x38c>
 8001dda:	e1b5      	b.n	8002148 <__aeabi_dsub+0x6f8>
 8001ddc:	2480      	movs	r4, #128	; 0x80
 8001dde:	0324      	lsls	r4, r4, #12
 8001de0:	4314      	orrs	r4, r2
 8001de2:	0324      	lsls	r4, r4, #12
 8001de4:	4ad5      	ldr	r2, [pc, #852]	; (800213c <__aeabi_dsub+0x6ec>)
 8001de6:	0b24      	lsrs	r4, r4, #12
 8001de8:	e6dc      	b.n	8001ba4 <__aeabi_dsub+0x154>
 8001dea:	0020      	movs	r0, r4
 8001dec:	f000 fb2a 	bl	8002444 <__clzsi2>
 8001df0:	0003      	movs	r3, r0
 8001df2:	3318      	adds	r3, #24
 8001df4:	2b1f      	cmp	r3, #31
 8001df6:	dc00      	bgt.n	8001dfa <__aeabi_dsub+0x3aa>
 8001df8:	e695      	b.n	8001b26 <__aeabi_dsub+0xd6>
 8001dfa:	0022      	movs	r2, r4
 8001dfc:	3808      	subs	r0, #8
 8001dfe:	4082      	lsls	r2, r0
 8001e00:	2400      	movs	r4, #0
 8001e02:	429e      	cmp	r6, r3
 8001e04:	dc00      	bgt.n	8001e08 <__aeabi_dsub+0x3b8>
 8001e06:	e69a      	b.n	8001b3e <__aeabi_dsub+0xee>
 8001e08:	1af6      	subs	r6, r6, r3
 8001e0a:	4bcd      	ldr	r3, [pc, #820]	; (8002140 <__aeabi_dsub+0x6f0>)
 8001e0c:	401a      	ands	r2, r3
 8001e0e:	4692      	mov	sl, r2
 8001e10:	e6a8      	b.n	8001b64 <__aeabi_dsub+0x114>
 8001e12:	003c      	movs	r4, r7
 8001e14:	4304      	orrs	r4, r0
 8001e16:	1e62      	subs	r2, r4, #1
 8001e18:	4194      	sbcs	r4, r2
 8001e1a:	e66c      	b.n	8001af6 <__aeabi_dsub+0xa6>
 8001e1c:	464a      	mov	r2, r9
 8001e1e:	08db      	lsrs	r3, r3, #3
 8001e20:	0752      	lsls	r2, r2, #29
 8001e22:	4313      	orrs	r3, r2
 8001e24:	464a      	mov	r2, r9
 8001e26:	08d2      	lsrs	r2, r2, #3
 8001e28:	e7a6      	b.n	8001d78 <__aeabi_dsub+0x328>
 8001e2a:	4cc6      	ldr	r4, [pc, #792]	; (8002144 <__aeabi_dsub+0x6f4>)
 8001e2c:	1c72      	adds	r2, r6, #1
 8001e2e:	4222      	tst	r2, r4
 8001e30:	d000      	beq.n	8001e34 <__aeabi_dsub+0x3e4>
 8001e32:	e0ac      	b.n	8001f8e <__aeabi_dsub+0x53e>
 8001e34:	464a      	mov	r2, r9
 8001e36:	431a      	orrs	r2, r3
 8001e38:	2e00      	cmp	r6, #0
 8001e3a:	d000      	beq.n	8001e3e <__aeabi_dsub+0x3ee>
 8001e3c:	e105      	b.n	800204a <__aeabi_dsub+0x5fa>
 8001e3e:	2a00      	cmp	r2, #0
 8001e40:	d100      	bne.n	8001e44 <__aeabi_dsub+0x3f4>
 8001e42:	e156      	b.n	80020f2 <__aeabi_dsub+0x6a2>
 8001e44:	003a      	movs	r2, r7
 8001e46:	4302      	orrs	r2, r0
 8001e48:	d100      	bne.n	8001e4c <__aeabi_dsub+0x3fc>
 8001e4a:	e0db      	b.n	8002004 <__aeabi_dsub+0x5b4>
 8001e4c:	181c      	adds	r4, r3, r0
 8001e4e:	429c      	cmp	r4, r3
 8001e50:	419b      	sbcs	r3, r3
 8001e52:	444f      	add	r7, r9
 8001e54:	46ba      	mov	sl, r7
 8001e56:	425b      	negs	r3, r3
 8001e58:	449a      	add	sl, r3
 8001e5a:	4653      	mov	r3, sl
 8001e5c:	021b      	lsls	r3, r3, #8
 8001e5e:	d400      	bmi.n	8001e62 <__aeabi_dsub+0x412>
 8001e60:	e780      	b.n	8001d64 <__aeabi_dsub+0x314>
 8001e62:	4652      	mov	r2, sl
 8001e64:	4bb6      	ldr	r3, [pc, #728]	; (8002140 <__aeabi_dsub+0x6f0>)
 8001e66:	2601      	movs	r6, #1
 8001e68:	401a      	ands	r2, r3
 8001e6a:	4692      	mov	sl, r2
 8001e6c:	e77a      	b.n	8001d64 <__aeabi_dsub+0x314>
 8001e6e:	4cb3      	ldr	r4, [pc, #716]	; (800213c <__aeabi_dsub+0x6ec>)
 8001e70:	42a2      	cmp	r2, r4
 8001e72:	d100      	bne.n	8001e76 <__aeabi_dsub+0x426>
 8001e74:	e0c0      	b.n	8001ff8 <__aeabi_dsub+0x5a8>
 8001e76:	2480      	movs	r4, #128	; 0x80
 8001e78:	464d      	mov	r5, r9
 8001e7a:	0424      	lsls	r4, r4, #16
 8001e7c:	4325      	orrs	r5, r4
 8001e7e:	46a9      	mov	r9, r5
 8001e80:	4664      	mov	r4, ip
 8001e82:	2c38      	cmp	r4, #56	; 0x38
 8001e84:	dc53      	bgt.n	8001f2e <__aeabi_dsub+0x4de>
 8001e86:	4661      	mov	r1, ip
 8001e88:	2c1f      	cmp	r4, #31
 8001e8a:	dd00      	ble.n	8001e8e <__aeabi_dsub+0x43e>
 8001e8c:	e0cd      	b.n	800202a <__aeabi_dsub+0x5da>
 8001e8e:	2520      	movs	r5, #32
 8001e90:	001e      	movs	r6, r3
 8001e92:	1b2d      	subs	r5, r5, r4
 8001e94:	464c      	mov	r4, r9
 8001e96:	40ab      	lsls	r3, r5
 8001e98:	40ac      	lsls	r4, r5
 8001e9a:	40ce      	lsrs	r6, r1
 8001e9c:	1e5d      	subs	r5, r3, #1
 8001e9e:	41ab      	sbcs	r3, r5
 8001ea0:	4334      	orrs	r4, r6
 8001ea2:	4323      	orrs	r3, r4
 8001ea4:	464c      	mov	r4, r9
 8001ea6:	40cc      	lsrs	r4, r1
 8001ea8:	1b3f      	subs	r7, r7, r4
 8001eaa:	e045      	b.n	8001f38 <__aeabi_dsub+0x4e8>
 8001eac:	464a      	mov	r2, r9
 8001eae:	1a1c      	subs	r4, r3, r0
 8001eb0:	1bd1      	subs	r1, r2, r7
 8001eb2:	42a3      	cmp	r3, r4
 8001eb4:	4192      	sbcs	r2, r2
 8001eb6:	4252      	negs	r2, r2
 8001eb8:	4692      	mov	sl, r2
 8001eba:	000a      	movs	r2, r1
 8001ebc:	4651      	mov	r1, sl
 8001ebe:	1a52      	subs	r2, r2, r1
 8001ec0:	4692      	mov	sl, r2
 8001ec2:	0212      	lsls	r2, r2, #8
 8001ec4:	d500      	bpl.n	8001ec8 <__aeabi_dsub+0x478>
 8001ec6:	e083      	b.n	8001fd0 <__aeabi_dsub+0x580>
 8001ec8:	4653      	mov	r3, sl
 8001eca:	4323      	orrs	r3, r4
 8001ecc:	d000      	beq.n	8001ed0 <__aeabi_dsub+0x480>
 8001ece:	e621      	b.n	8001b14 <__aeabi_dsub+0xc4>
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	2500      	movs	r5, #0
 8001ed4:	e753      	b.n	8001d7e <__aeabi_dsub+0x32e>
 8001ed6:	181c      	adds	r4, r3, r0
 8001ed8:	429c      	cmp	r4, r3
 8001eda:	419b      	sbcs	r3, r3
 8001edc:	444f      	add	r7, r9
 8001ede:	46ba      	mov	sl, r7
 8001ee0:	425b      	negs	r3, r3
 8001ee2:	449a      	add	sl, r3
 8001ee4:	4653      	mov	r3, sl
 8001ee6:	2601      	movs	r6, #1
 8001ee8:	021b      	lsls	r3, r3, #8
 8001eea:	d400      	bmi.n	8001eee <__aeabi_dsub+0x49e>
 8001eec:	e73a      	b.n	8001d64 <__aeabi_dsub+0x314>
 8001eee:	2602      	movs	r6, #2
 8001ef0:	4652      	mov	r2, sl
 8001ef2:	4b93      	ldr	r3, [pc, #588]	; (8002140 <__aeabi_dsub+0x6f0>)
 8001ef4:	2101      	movs	r1, #1
 8001ef6:	401a      	ands	r2, r3
 8001ef8:	0013      	movs	r3, r2
 8001efa:	4021      	ands	r1, r4
 8001efc:	0862      	lsrs	r2, r4, #1
 8001efe:	430a      	orrs	r2, r1
 8001f00:	07dc      	lsls	r4, r3, #31
 8001f02:	085b      	lsrs	r3, r3, #1
 8001f04:	469a      	mov	sl, r3
 8001f06:	4314      	orrs	r4, r2
 8001f08:	e62c      	b.n	8001b64 <__aeabi_dsub+0x114>
 8001f0a:	0039      	movs	r1, r7
 8001f0c:	3a20      	subs	r2, #32
 8001f0e:	40d1      	lsrs	r1, r2
 8001f10:	4662      	mov	r2, ip
 8001f12:	2a20      	cmp	r2, #32
 8001f14:	d006      	beq.n	8001f24 <__aeabi_dsub+0x4d4>
 8001f16:	4664      	mov	r4, ip
 8001f18:	2240      	movs	r2, #64	; 0x40
 8001f1a:	1b12      	subs	r2, r2, r4
 8001f1c:	003c      	movs	r4, r7
 8001f1e:	4094      	lsls	r4, r2
 8001f20:	4304      	orrs	r4, r0
 8001f22:	9401      	str	r4, [sp, #4]
 8001f24:	9c01      	ldr	r4, [sp, #4]
 8001f26:	1e62      	subs	r2, r4, #1
 8001f28:	4194      	sbcs	r4, r2
 8001f2a:	430c      	orrs	r4, r1
 8001f2c:	e5e3      	b.n	8001af6 <__aeabi_dsub+0xa6>
 8001f2e:	4649      	mov	r1, r9
 8001f30:	4319      	orrs	r1, r3
 8001f32:	000b      	movs	r3, r1
 8001f34:	1e5c      	subs	r4, r3, #1
 8001f36:	41a3      	sbcs	r3, r4
 8001f38:	1ac4      	subs	r4, r0, r3
 8001f3a:	42a0      	cmp	r0, r4
 8001f3c:	419b      	sbcs	r3, r3
 8001f3e:	425b      	negs	r3, r3
 8001f40:	1afb      	subs	r3, r7, r3
 8001f42:	469a      	mov	sl, r3
 8001f44:	465d      	mov	r5, fp
 8001f46:	0016      	movs	r6, r2
 8001f48:	e5dc      	b.n	8001b04 <__aeabi_dsub+0xb4>
 8001f4a:	4649      	mov	r1, r9
 8001f4c:	4319      	orrs	r1, r3
 8001f4e:	d100      	bne.n	8001f52 <__aeabi_dsub+0x502>
 8001f50:	e0ae      	b.n	80020b0 <__aeabi_dsub+0x660>
 8001f52:	4661      	mov	r1, ip
 8001f54:	4664      	mov	r4, ip
 8001f56:	3901      	subs	r1, #1
 8001f58:	2c01      	cmp	r4, #1
 8001f5a:	d100      	bne.n	8001f5e <__aeabi_dsub+0x50e>
 8001f5c:	e0e0      	b.n	8002120 <__aeabi_dsub+0x6d0>
 8001f5e:	4c77      	ldr	r4, [pc, #476]	; (800213c <__aeabi_dsub+0x6ec>)
 8001f60:	45a4      	cmp	ip, r4
 8001f62:	d056      	beq.n	8002012 <__aeabi_dsub+0x5c2>
 8001f64:	468c      	mov	ip, r1
 8001f66:	e69a      	b.n	8001c9e <__aeabi_dsub+0x24e>
 8001f68:	4661      	mov	r1, ip
 8001f6a:	2220      	movs	r2, #32
 8001f6c:	003c      	movs	r4, r7
 8001f6e:	1a52      	subs	r2, r2, r1
 8001f70:	4094      	lsls	r4, r2
 8001f72:	0001      	movs	r1, r0
 8001f74:	4090      	lsls	r0, r2
 8001f76:	46a0      	mov	r8, r4
 8001f78:	4664      	mov	r4, ip
 8001f7a:	1e42      	subs	r2, r0, #1
 8001f7c:	4190      	sbcs	r0, r2
 8001f7e:	4662      	mov	r2, ip
 8001f80:	40e1      	lsrs	r1, r4
 8001f82:	4644      	mov	r4, r8
 8001f84:	40d7      	lsrs	r7, r2
 8001f86:	430c      	orrs	r4, r1
 8001f88:	4304      	orrs	r4, r0
 8001f8a:	44b9      	add	r9, r7
 8001f8c:	e701      	b.n	8001d92 <__aeabi_dsub+0x342>
 8001f8e:	496b      	ldr	r1, [pc, #428]	; (800213c <__aeabi_dsub+0x6ec>)
 8001f90:	428a      	cmp	r2, r1
 8001f92:	d100      	bne.n	8001f96 <__aeabi_dsub+0x546>
 8001f94:	e70c      	b.n	8001db0 <__aeabi_dsub+0x360>
 8001f96:	1818      	adds	r0, r3, r0
 8001f98:	4298      	cmp	r0, r3
 8001f9a:	419b      	sbcs	r3, r3
 8001f9c:	444f      	add	r7, r9
 8001f9e:	425b      	negs	r3, r3
 8001fa0:	18fb      	adds	r3, r7, r3
 8001fa2:	07dc      	lsls	r4, r3, #31
 8001fa4:	0840      	lsrs	r0, r0, #1
 8001fa6:	085b      	lsrs	r3, r3, #1
 8001fa8:	469a      	mov	sl, r3
 8001faa:	0016      	movs	r6, r2
 8001fac:	4304      	orrs	r4, r0
 8001fae:	e6d9      	b.n	8001d64 <__aeabi_dsub+0x314>
 8001fb0:	2a00      	cmp	r2, #0
 8001fb2:	d000      	beq.n	8001fb6 <__aeabi_dsub+0x566>
 8001fb4:	e081      	b.n	80020ba <__aeabi_dsub+0x66a>
 8001fb6:	003b      	movs	r3, r7
 8001fb8:	4303      	orrs	r3, r0
 8001fba:	d11d      	bne.n	8001ff8 <__aeabi_dsub+0x5a8>
 8001fbc:	2280      	movs	r2, #128	; 0x80
 8001fbe:	2500      	movs	r5, #0
 8001fc0:	0312      	lsls	r2, r2, #12
 8001fc2:	e70b      	b.n	8001ddc <__aeabi_dsub+0x38c>
 8001fc4:	08c0      	lsrs	r0, r0, #3
 8001fc6:	077b      	lsls	r3, r7, #29
 8001fc8:	465d      	mov	r5, fp
 8001fca:	4303      	orrs	r3, r0
 8001fcc:	08fa      	lsrs	r2, r7, #3
 8001fce:	e6d3      	b.n	8001d78 <__aeabi_dsub+0x328>
 8001fd0:	1ac4      	subs	r4, r0, r3
 8001fd2:	42a0      	cmp	r0, r4
 8001fd4:	4180      	sbcs	r0, r0
 8001fd6:	464b      	mov	r3, r9
 8001fd8:	4240      	negs	r0, r0
 8001fda:	1aff      	subs	r7, r7, r3
 8001fdc:	1a3b      	subs	r3, r7, r0
 8001fde:	469a      	mov	sl, r3
 8001fe0:	465d      	mov	r5, fp
 8001fe2:	e597      	b.n	8001b14 <__aeabi_dsub+0xc4>
 8001fe4:	1a1c      	subs	r4, r3, r0
 8001fe6:	464a      	mov	r2, r9
 8001fe8:	42a3      	cmp	r3, r4
 8001fea:	419b      	sbcs	r3, r3
 8001fec:	1bd7      	subs	r7, r2, r7
 8001fee:	425b      	negs	r3, r3
 8001ff0:	1afb      	subs	r3, r7, r3
 8001ff2:	469a      	mov	sl, r3
 8001ff4:	2601      	movs	r6, #1
 8001ff6:	e585      	b.n	8001b04 <__aeabi_dsub+0xb4>
 8001ff8:	08c0      	lsrs	r0, r0, #3
 8001ffa:	077b      	lsls	r3, r7, #29
 8001ffc:	465d      	mov	r5, fp
 8001ffe:	4303      	orrs	r3, r0
 8002000:	08fa      	lsrs	r2, r7, #3
 8002002:	e6e7      	b.n	8001dd4 <__aeabi_dsub+0x384>
 8002004:	464a      	mov	r2, r9
 8002006:	08db      	lsrs	r3, r3, #3
 8002008:	0752      	lsls	r2, r2, #29
 800200a:	4313      	orrs	r3, r2
 800200c:	464a      	mov	r2, r9
 800200e:	08d2      	lsrs	r2, r2, #3
 8002010:	e6b5      	b.n	8001d7e <__aeabi_dsub+0x32e>
 8002012:	08c0      	lsrs	r0, r0, #3
 8002014:	077b      	lsls	r3, r7, #29
 8002016:	4303      	orrs	r3, r0
 8002018:	08fa      	lsrs	r2, r7, #3
 800201a:	e6db      	b.n	8001dd4 <__aeabi_dsub+0x384>
 800201c:	4649      	mov	r1, r9
 800201e:	4319      	orrs	r1, r3
 8002020:	000b      	movs	r3, r1
 8002022:	1e59      	subs	r1, r3, #1
 8002024:	418b      	sbcs	r3, r1
 8002026:	001c      	movs	r4, r3
 8002028:	e653      	b.n	8001cd2 <__aeabi_dsub+0x282>
 800202a:	464d      	mov	r5, r9
 800202c:	3c20      	subs	r4, #32
 800202e:	40e5      	lsrs	r5, r4
 8002030:	2920      	cmp	r1, #32
 8002032:	d005      	beq.n	8002040 <__aeabi_dsub+0x5f0>
 8002034:	2440      	movs	r4, #64	; 0x40
 8002036:	1a64      	subs	r4, r4, r1
 8002038:	4649      	mov	r1, r9
 800203a:	40a1      	lsls	r1, r4
 800203c:	430b      	orrs	r3, r1
 800203e:	4698      	mov	r8, r3
 8002040:	4643      	mov	r3, r8
 8002042:	1e5c      	subs	r4, r3, #1
 8002044:	41a3      	sbcs	r3, r4
 8002046:	432b      	orrs	r3, r5
 8002048:	e776      	b.n	8001f38 <__aeabi_dsub+0x4e8>
 800204a:	2a00      	cmp	r2, #0
 800204c:	d0e1      	beq.n	8002012 <__aeabi_dsub+0x5c2>
 800204e:	003a      	movs	r2, r7
 8002050:	08db      	lsrs	r3, r3, #3
 8002052:	4302      	orrs	r2, r0
 8002054:	d100      	bne.n	8002058 <__aeabi_dsub+0x608>
 8002056:	e6b8      	b.n	8001dca <__aeabi_dsub+0x37a>
 8002058:	464a      	mov	r2, r9
 800205a:	0752      	lsls	r2, r2, #29
 800205c:	2480      	movs	r4, #128	; 0x80
 800205e:	4313      	orrs	r3, r2
 8002060:	464a      	mov	r2, r9
 8002062:	0324      	lsls	r4, r4, #12
 8002064:	08d2      	lsrs	r2, r2, #3
 8002066:	4222      	tst	r2, r4
 8002068:	d007      	beq.n	800207a <__aeabi_dsub+0x62a>
 800206a:	08fe      	lsrs	r6, r7, #3
 800206c:	4226      	tst	r6, r4
 800206e:	d104      	bne.n	800207a <__aeabi_dsub+0x62a>
 8002070:	465d      	mov	r5, fp
 8002072:	0032      	movs	r2, r6
 8002074:	08c3      	lsrs	r3, r0, #3
 8002076:	077f      	lsls	r7, r7, #29
 8002078:	433b      	orrs	r3, r7
 800207a:	0f59      	lsrs	r1, r3, #29
 800207c:	00db      	lsls	r3, r3, #3
 800207e:	0749      	lsls	r1, r1, #29
 8002080:	08db      	lsrs	r3, r3, #3
 8002082:	430b      	orrs	r3, r1
 8002084:	e6a6      	b.n	8001dd4 <__aeabi_dsub+0x384>
 8002086:	1ac4      	subs	r4, r0, r3
 8002088:	42a0      	cmp	r0, r4
 800208a:	4180      	sbcs	r0, r0
 800208c:	464b      	mov	r3, r9
 800208e:	4240      	negs	r0, r0
 8002090:	1aff      	subs	r7, r7, r3
 8002092:	1a3b      	subs	r3, r7, r0
 8002094:	469a      	mov	sl, r3
 8002096:	465d      	mov	r5, fp
 8002098:	2601      	movs	r6, #1
 800209a:	e533      	b.n	8001b04 <__aeabi_dsub+0xb4>
 800209c:	003b      	movs	r3, r7
 800209e:	4303      	orrs	r3, r0
 80020a0:	d100      	bne.n	80020a4 <__aeabi_dsub+0x654>
 80020a2:	e715      	b.n	8001ed0 <__aeabi_dsub+0x480>
 80020a4:	08c0      	lsrs	r0, r0, #3
 80020a6:	077b      	lsls	r3, r7, #29
 80020a8:	465d      	mov	r5, fp
 80020aa:	4303      	orrs	r3, r0
 80020ac:	08fa      	lsrs	r2, r7, #3
 80020ae:	e666      	b.n	8001d7e <__aeabi_dsub+0x32e>
 80020b0:	08c0      	lsrs	r0, r0, #3
 80020b2:	077b      	lsls	r3, r7, #29
 80020b4:	4303      	orrs	r3, r0
 80020b6:	08fa      	lsrs	r2, r7, #3
 80020b8:	e65e      	b.n	8001d78 <__aeabi_dsub+0x328>
 80020ba:	003a      	movs	r2, r7
 80020bc:	08db      	lsrs	r3, r3, #3
 80020be:	4302      	orrs	r2, r0
 80020c0:	d100      	bne.n	80020c4 <__aeabi_dsub+0x674>
 80020c2:	e682      	b.n	8001dca <__aeabi_dsub+0x37a>
 80020c4:	464a      	mov	r2, r9
 80020c6:	0752      	lsls	r2, r2, #29
 80020c8:	2480      	movs	r4, #128	; 0x80
 80020ca:	4313      	orrs	r3, r2
 80020cc:	464a      	mov	r2, r9
 80020ce:	0324      	lsls	r4, r4, #12
 80020d0:	08d2      	lsrs	r2, r2, #3
 80020d2:	4222      	tst	r2, r4
 80020d4:	d007      	beq.n	80020e6 <__aeabi_dsub+0x696>
 80020d6:	08fe      	lsrs	r6, r7, #3
 80020d8:	4226      	tst	r6, r4
 80020da:	d104      	bne.n	80020e6 <__aeabi_dsub+0x696>
 80020dc:	465d      	mov	r5, fp
 80020de:	0032      	movs	r2, r6
 80020e0:	08c3      	lsrs	r3, r0, #3
 80020e2:	077f      	lsls	r7, r7, #29
 80020e4:	433b      	orrs	r3, r7
 80020e6:	0f59      	lsrs	r1, r3, #29
 80020e8:	00db      	lsls	r3, r3, #3
 80020ea:	08db      	lsrs	r3, r3, #3
 80020ec:	0749      	lsls	r1, r1, #29
 80020ee:	430b      	orrs	r3, r1
 80020f0:	e670      	b.n	8001dd4 <__aeabi_dsub+0x384>
 80020f2:	08c0      	lsrs	r0, r0, #3
 80020f4:	077b      	lsls	r3, r7, #29
 80020f6:	4303      	orrs	r3, r0
 80020f8:	08fa      	lsrs	r2, r7, #3
 80020fa:	e640      	b.n	8001d7e <__aeabi_dsub+0x32e>
 80020fc:	464c      	mov	r4, r9
 80020fe:	3920      	subs	r1, #32
 8002100:	40cc      	lsrs	r4, r1
 8002102:	4661      	mov	r1, ip
 8002104:	2920      	cmp	r1, #32
 8002106:	d006      	beq.n	8002116 <__aeabi_dsub+0x6c6>
 8002108:	4666      	mov	r6, ip
 800210a:	2140      	movs	r1, #64	; 0x40
 800210c:	1b89      	subs	r1, r1, r6
 800210e:	464e      	mov	r6, r9
 8002110:	408e      	lsls	r6, r1
 8002112:	4333      	orrs	r3, r6
 8002114:	4698      	mov	r8, r3
 8002116:	4643      	mov	r3, r8
 8002118:	1e59      	subs	r1, r3, #1
 800211a:	418b      	sbcs	r3, r1
 800211c:	431c      	orrs	r4, r3
 800211e:	e5d8      	b.n	8001cd2 <__aeabi_dsub+0x282>
 8002120:	181c      	adds	r4, r3, r0
 8002122:	4284      	cmp	r4, r0
 8002124:	4180      	sbcs	r0, r0
 8002126:	444f      	add	r7, r9
 8002128:	46ba      	mov	sl, r7
 800212a:	4240      	negs	r0, r0
 800212c:	4482      	add	sl, r0
 800212e:	e6d9      	b.n	8001ee4 <__aeabi_dsub+0x494>
 8002130:	4653      	mov	r3, sl
 8002132:	4323      	orrs	r3, r4
 8002134:	d100      	bne.n	8002138 <__aeabi_dsub+0x6e8>
 8002136:	e6cb      	b.n	8001ed0 <__aeabi_dsub+0x480>
 8002138:	e614      	b.n	8001d64 <__aeabi_dsub+0x314>
 800213a:	46c0      	nop			; (mov r8, r8)
 800213c:	000007ff 	.word	0x000007ff
 8002140:	ff7fffff 	.word	0xff7fffff
 8002144:	000007fe 	.word	0x000007fe
 8002148:	2300      	movs	r3, #0
 800214a:	4a01      	ldr	r2, [pc, #4]	; (8002150 <__aeabi_dsub+0x700>)
 800214c:	001c      	movs	r4, r3
 800214e:	e529      	b.n	8001ba4 <__aeabi_dsub+0x154>
 8002150:	000007ff 	.word	0x000007ff

08002154 <__aeabi_dcmpun>:
 8002154:	b570      	push	{r4, r5, r6, lr}
 8002156:	0005      	movs	r5, r0
 8002158:	480c      	ldr	r0, [pc, #48]	; (800218c <__aeabi_dcmpun+0x38>)
 800215a:	031c      	lsls	r4, r3, #12
 800215c:	0016      	movs	r6, r2
 800215e:	005b      	lsls	r3, r3, #1
 8002160:	030a      	lsls	r2, r1, #12
 8002162:	0049      	lsls	r1, r1, #1
 8002164:	0b12      	lsrs	r2, r2, #12
 8002166:	0d49      	lsrs	r1, r1, #21
 8002168:	0b24      	lsrs	r4, r4, #12
 800216a:	0d5b      	lsrs	r3, r3, #21
 800216c:	4281      	cmp	r1, r0
 800216e:	d008      	beq.n	8002182 <__aeabi_dcmpun+0x2e>
 8002170:	4a06      	ldr	r2, [pc, #24]	; (800218c <__aeabi_dcmpun+0x38>)
 8002172:	2000      	movs	r0, #0
 8002174:	4293      	cmp	r3, r2
 8002176:	d103      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002178:	0020      	movs	r0, r4
 800217a:	4330      	orrs	r0, r6
 800217c:	1e43      	subs	r3, r0, #1
 800217e:	4198      	sbcs	r0, r3
 8002180:	bd70      	pop	{r4, r5, r6, pc}
 8002182:	2001      	movs	r0, #1
 8002184:	432a      	orrs	r2, r5
 8002186:	d1fb      	bne.n	8002180 <__aeabi_dcmpun+0x2c>
 8002188:	e7f2      	b.n	8002170 <__aeabi_dcmpun+0x1c>
 800218a:	46c0      	nop			; (mov r8, r8)
 800218c:	000007ff 	.word	0x000007ff

08002190 <__aeabi_d2iz>:
 8002190:	000a      	movs	r2, r1
 8002192:	b530      	push	{r4, r5, lr}
 8002194:	4c13      	ldr	r4, [pc, #76]	; (80021e4 <__aeabi_d2iz+0x54>)
 8002196:	0053      	lsls	r3, r2, #1
 8002198:	0309      	lsls	r1, r1, #12
 800219a:	0005      	movs	r5, r0
 800219c:	0b09      	lsrs	r1, r1, #12
 800219e:	2000      	movs	r0, #0
 80021a0:	0d5b      	lsrs	r3, r3, #21
 80021a2:	0fd2      	lsrs	r2, r2, #31
 80021a4:	42a3      	cmp	r3, r4
 80021a6:	dd04      	ble.n	80021b2 <__aeabi_d2iz+0x22>
 80021a8:	480f      	ldr	r0, [pc, #60]	; (80021e8 <__aeabi_d2iz+0x58>)
 80021aa:	4283      	cmp	r3, r0
 80021ac:	dd02      	ble.n	80021b4 <__aeabi_d2iz+0x24>
 80021ae:	4b0f      	ldr	r3, [pc, #60]	; (80021ec <__aeabi_d2iz+0x5c>)
 80021b0:	18d0      	adds	r0, r2, r3
 80021b2:	bd30      	pop	{r4, r5, pc}
 80021b4:	2080      	movs	r0, #128	; 0x80
 80021b6:	0340      	lsls	r0, r0, #13
 80021b8:	4301      	orrs	r1, r0
 80021ba:	480d      	ldr	r0, [pc, #52]	; (80021f0 <__aeabi_d2iz+0x60>)
 80021bc:	1ac0      	subs	r0, r0, r3
 80021be:	281f      	cmp	r0, #31
 80021c0:	dd08      	ble.n	80021d4 <__aeabi_d2iz+0x44>
 80021c2:	480c      	ldr	r0, [pc, #48]	; (80021f4 <__aeabi_d2iz+0x64>)
 80021c4:	1ac3      	subs	r3, r0, r3
 80021c6:	40d9      	lsrs	r1, r3
 80021c8:	000b      	movs	r3, r1
 80021ca:	4258      	negs	r0, r3
 80021cc:	2a00      	cmp	r2, #0
 80021ce:	d1f0      	bne.n	80021b2 <__aeabi_d2iz+0x22>
 80021d0:	0018      	movs	r0, r3
 80021d2:	e7ee      	b.n	80021b2 <__aeabi_d2iz+0x22>
 80021d4:	4c08      	ldr	r4, [pc, #32]	; (80021f8 <__aeabi_d2iz+0x68>)
 80021d6:	40c5      	lsrs	r5, r0
 80021d8:	46a4      	mov	ip, r4
 80021da:	4463      	add	r3, ip
 80021dc:	4099      	lsls	r1, r3
 80021de:	000b      	movs	r3, r1
 80021e0:	432b      	orrs	r3, r5
 80021e2:	e7f2      	b.n	80021ca <__aeabi_d2iz+0x3a>
 80021e4:	000003fe 	.word	0x000003fe
 80021e8:	0000041d 	.word	0x0000041d
 80021ec:	7fffffff 	.word	0x7fffffff
 80021f0:	00000433 	.word	0x00000433
 80021f4:	00000413 	.word	0x00000413
 80021f8:	fffffbed 	.word	0xfffffbed

080021fc <__aeabi_i2d>:
 80021fc:	b570      	push	{r4, r5, r6, lr}
 80021fe:	2800      	cmp	r0, #0
 8002200:	d016      	beq.n	8002230 <__aeabi_i2d+0x34>
 8002202:	17c3      	asrs	r3, r0, #31
 8002204:	18c5      	adds	r5, r0, r3
 8002206:	405d      	eors	r5, r3
 8002208:	0fc4      	lsrs	r4, r0, #31
 800220a:	0028      	movs	r0, r5
 800220c:	f000 f91a 	bl	8002444 <__clzsi2>
 8002210:	4b11      	ldr	r3, [pc, #68]	; (8002258 <__aeabi_i2d+0x5c>)
 8002212:	1a1b      	subs	r3, r3, r0
 8002214:	280a      	cmp	r0, #10
 8002216:	dc16      	bgt.n	8002246 <__aeabi_i2d+0x4a>
 8002218:	0002      	movs	r2, r0
 800221a:	002e      	movs	r6, r5
 800221c:	3215      	adds	r2, #21
 800221e:	4096      	lsls	r6, r2
 8002220:	220b      	movs	r2, #11
 8002222:	1a12      	subs	r2, r2, r0
 8002224:	40d5      	lsrs	r5, r2
 8002226:	055b      	lsls	r3, r3, #21
 8002228:	032d      	lsls	r5, r5, #12
 800222a:	0b2d      	lsrs	r5, r5, #12
 800222c:	0d5b      	lsrs	r3, r3, #21
 800222e:	e003      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002230:	2400      	movs	r4, #0
 8002232:	2300      	movs	r3, #0
 8002234:	2500      	movs	r5, #0
 8002236:	2600      	movs	r6, #0
 8002238:	051b      	lsls	r3, r3, #20
 800223a:	432b      	orrs	r3, r5
 800223c:	07e4      	lsls	r4, r4, #31
 800223e:	4323      	orrs	r3, r4
 8002240:	0030      	movs	r0, r6
 8002242:	0019      	movs	r1, r3
 8002244:	bd70      	pop	{r4, r5, r6, pc}
 8002246:	380b      	subs	r0, #11
 8002248:	4085      	lsls	r5, r0
 800224a:	055b      	lsls	r3, r3, #21
 800224c:	032d      	lsls	r5, r5, #12
 800224e:	2600      	movs	r6, #0
 8002250:	0b2d      	lsrs	r5, r5, #12
 8002252:	0d5b      	lsrs	r3, r3, #21
 8002254:	e7f0      	b.n	8002238 <__aeabi_i2d+0x3c>
 8002256:	46c0      	nop			; (mov r8, r8)
 8002258:	0000041e 	.word	0x0000041e

0800225c <__aeabi_ui2d>:
 800225c:	b510      	push	{r4, lr}
 800225e:	1e04      	subs	r4, r0, #0
 8002260:	d010      	beq.n	8002284 <__aeabi_ui2d+0x28>
 8002262:	f000 f8ef 	bl	8002444 <__clzsi2>
 8002266:	4b0f      	ldr	r3, [pc, #60]	; (80022a4 <__aeabi_ui2d+0x48>)
 8002268:	1a1b      	subs	r3, r3, r0
 800226a:	280a      	cmp	r0, #10
 800226c:	dc11      	bgt.n	8002292 <__aeabi_ui2d+0x36>
 800226e:	220b      	movs	r2, #11
 8002270:	0021      	movs	r1, r4
 8002272:	1a12      	subs	r2, r2, r0
 8002274:	40d1      	lsrs	r1, r2
 8002276:	3015      	adds	r0, #21
 8002278:	030a      	lsls	r2, r1, #12
 800227a:	055b      	lsls	r3, r3, #21
 800227c:	4084      	lsls	r4, r0
 800227e:	0b12      	lsrs	r2, r2, #12
 8002280:	0d5b      	lsrs	r3, r3, #21
 8002282:	e001      	b.n	8002288 <__aeabi_ui2d+0x2c>
 8002284:	2300      	movs	r3, #0
 8002286:	2200      	movs	r2, #0
 8002288:	051b      	lsls	r3, r3, #20
 800228a:	4313      	orrs	r3, r2
 800228c:	0020      	movs	r0, r4
 800228e:	0019      	movs	r1, r3
 8002290:	bd10      	pop	{r4, pc}
 8002292:	0022      	movs	r2, r4
 8002294:	380b      	subs	r0, #11
 8002296:	4082      	lsls	r2, r0
 8002298:	055b      	lsls	r3, r3, #21
 800229a:	0312      	lsls	r2, r2, #12
 800229c:	2400      	movs	r4, #0
 800229e:	0b12      	lsrs	r2, r2, #12
 80022a0:	0d5b      	lsrs	r3, r3, #21
 80022a2:	e7f1      	b.n	8002288 <__aeabi_ui2d+0x2c>
 80022a4:	0000041e 	.word	0x0000041e

080022a8 <__aeabi_f2d>:
 80022a8:	b570      	push	{r4, r5, r6, lr}
 80022aa:	0242      	lsls	r2, r0, #9
 80022ac:	0043      	lsls	r3, r0, #1
 80022ae:	0fc4      	lsrs	r4, r0, #31
 80022b0:	20fe      	movs	r0, #254	; 0xfe
 80022b2:	0e1b      	lsrs	r3, r3, #24
 80022b4:	1c59      	adds	r1, r3, #1
 80022b6:	0a55      	lsrs	r5, r2, #9
 80022b8:	4208      	tst	r0, r1
 80022ba:	d00c      	beq.n	80022d6 <__aeabi_f2d+0x2e>
 80022bc:	21e0      	movs	r1, #224	; 0xe0
 80022be:	0089      	lsls	r1, r1, #2
 80022c0:	468c      	mov	ip, r1
 80022c2:	076d      	lsls	r5, r5, #29
 80022c4:	0b12      	lsrs	r2, r2, #12
 80022c6:	4463      	add	r3, ip
 80022c8:	051b      	lsls	r3, r3, #20
 80022ca:	4313      	orrs	r3, r2
 80022cc:	07e4      	lsls	r4, r4, #31
 80022ce:	4323      	orrs	r3, r4
 80022d0:	0028      	movs	r0, r5
 80022d2:	0019      	movs	r1, r3
 80022d4:	bd70      	pop	{r4, r5, r6, pc}
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d114      	bne.n	8002304 <__aeabi_f2d+0x5c>
 80022da:	2d00      	cmp	r5, #0
 80022dc:	d01b      	beq.n	8002316 <__aeabi_f2d+0x6e>
 80022de:	0028      	movs	r0, r5
 80022e0:	f000 f8b0 	bl	8002444 <__clzsi2>
 80022e4:	280a      	cmp	r0, #10
 80022e6:	dc1c      	bgt.n	8002322 <__aeabi_f2d+0x7a>
 80022e8:	230b      	movs	r3, #11
 80022ea:	002a      	movs	r2, r5
 80022ec:	1a1b      	subs	r3, r3, r0
 80022ee:	40da      	lsrs	r2, r3
 80022f0:	0003      	movs	r3, r0
 80022f2:	3315      	adds	r3, #21
 80022f4:	409d      	lsls	r5, r3
 80022f6:	4b0e      	ldr	r3, [pc, #56]	; (8002330 <__aeabi_f2d+0x88>)
 80022f8:	0312      	lsls	r2, r2, #12
 80022fa:	1a1b      	subs	r3, r3, r0
 80022fc:	055b      	lsls	r3, r3, #21
 80022fe:	0b12      	lsrs	r2, r2, #12
 8002300:	0d5b      	lsrs	r3, r3, #21
 8002302:	e7e1      	b.n	80022c8 <__aeabi_f2d+0x20>
 8002304:	2d00      	cmp	r5, #0
 8002306:	d009      	beq.n	800231c <__aeabi_f2d+0x74>
 8002308:	0b13      	lsrs	r3, r2, #12
 800230a:	2280      	movs	r2, #128	; 0x80
 800230c:	0312      	lsls	r2, r2, #12
 800230e:	431a      	orrs	r2, r3
 8002310:	076d      	lsls	r5, r5, #29
 8002312:	4b08      	ldr	r3, [pc, #32]	; (8002334 <__aeabi_f2d+0x8c>)
 8002314:	e7d8      	b.n	80022c8 <__aeabi_f2d+0x20>
 8002316:	2300      	movs	r3, #0
 8002318:	2200      	movs	r2, #0
 800231a:	e7d5      	b.n	80022c8 <__aeabi_f2d+0x20>
 800231c:	2200      	movs	r2, #0
 800231e:	4b05      	ldr	r3, [pc, #20]	; (8002334 <__aeabi_f2d+0x8c>)
 8002320:	e7d2      	b.n	80022c8 <__aeabi_f2d+0x20>
 8002322:	0003      	movs	r3, r0
 8002324:	002a      	movs	r2, r5
 8002326:	3b0b      	subs	r3, #11
 8002328:	409a      	lsls	r2, r3
 800232a:	2500      	movs	r5, #0
 800232c:	e7e3      	b.n	80022f6 <__aeabi_f2d+0x4e>
 800232e:	46c0      	nop			; (mov r8, r8)
 8002330:	00000389 	.word	0x00000389
 8002334:	000007ff 	.word	0x000007ff

08002338 <__aeabi_d2f>:
 8002338:	0002      	movs	r2, r0
 800233a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800233c:	004b      	lsls	r3, r1, #1
 800233e:	030d      	lsls	r5, r1, #12
 8002340:	0f40      	lsrs	r0, r0, #29
 8002342:	0d5b      	lsrs	r3, r3, #21
 8002344:	0fcc      	lsrs	r4, r1, #31
 8002346:	0a6d      	lsrs	r5, r5, #9
 8002348:	493a      	ldr	r1, [pc, #232]	; (8002434 <__aeabi_d2f+0xfc>)
 800234a:	4305      	orrs	r5, r0
 800234c:	1c58      	adds	r0, r3, #1
 800234e:	00d7      	lsls	r7, r2, #3
 8002350:	4208      	tst	r0, r1
 8002352:	d00a      	beq.n	800236a <__aeabi_d2f+0x32>
 8002354:	4938      	ldr	r1, [pc, #224]	; (8002438 <__aeabi_d2f+0x100>)
 8002356:	1859      	adds	r1, r3, r1
 8002358:	29fe      	cmp	r1, #254	; 0xfe
 800235a:	dd16      	ble.n	800238a <__aeabi_d2f+0x52>
 800235c:	20ff      	movs	r0, #255	; 0xff
 800235e:	2200      	movs	r2, #0
 8002360:	05c0      	lsls	r0, r0, #23
 8002362:	4310      	orrs	r0, r2
 8002364:	07e4      	lsls	r4, r4, #31
 8002366:	4320      	orrs	r0, r4
 8002368:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800236a:	2b00      	cmp	r3, #0
 800236c:	d106      	bne.n	800237c <__aeabi_d2f+0x44>
 800236e:	433d      	orrs	r5, r7
 8002370:	d026      	beq.n	80023c0 <__aeabi_d2f+0x88>
 8002372:	2205      	movs	r2, #5
 8002374:	0192      	lsls	r2, r2, #6
 8002376:	0a52      	lsrs	r2, r2, #9
 8002378:	b2d8      	uxtb	r0, r3
 800237a:	e7f1      	b.n	8002360 <__aeabi_d2f+0x28>
 800237c:	432f      	orrs	r7, r5
 800237e:	d0ed      	beq.n	800235c <__aeabi_d2f+0x24>
 8002380:	2280      	movs	r2, #128	; 0x80
 8002382:	03d2      	lsls	r2, r2, #15
 8002384:	20ff      	movs	r0, #255	; 0xff
 8002386:	432a      	orrs	r2, r5
 8002388:	e7ea      	b.n	8002360 <__aeabi_d2f+0x28>
 800238a:	2900      	cmp	r1, #0
 800238c:	dd1b      	ble.n	80023c6 <__aeabi_d2f+0x8e>
 800238e:	0192      	lsls	r2, r2, #6
 8002390:	1e50      	subs	r0, r2, #1
 8002392:	4182      	sbcs	r2, r0
 8002394:	00ed      	lsls	r5, r5, #3
 8002396:	0f7f      	lsrs	r7, r7, #29
 8002398:	432a      	orrs	r2, r5
 800239a:	433a      	orrs	r2, r7
 800239c:	0753      	lsls	r3, r2, #29
 800239e:	d047      	beq.n	8002430 <__aeabi_d2f+0xf8>
 80023a0:	230f      	movs	r3, #15
 80023a2:	4013      	ands	r3, r2
 80023a4:	2b04      	cmp	r3, #4
 80023a6:	d000      	beq.n	80023aa <__aeabi_d2f+0x72>
 80023a8:	3204      	adds	r2, #4
 80023aa:	2380      	movs	r3, #128	; 0x80
 80023ac:	04db      	lsls	r3, r3, #19
 80023ae:	4013      	ands	r3, r2
 80023b0:	d03e      	beq.n	8002430 <__aeabi_d2f+0xf8>
 80023b2:	1c48      	adds	r0, r1, #1
 80023b4:	29fe      	cmp	r1, #254	; 0xfe
 80023b6:	d0d1      	beq.n	800235c <__aeabi_d2f+0x24>
 80023b8:	0192      	lsls	r2, r2, #6
 80023ba:	0a52      	lsrs	r2, r2, #9
 80023bc:	b2c0      	uxtb	r0, r0
 80023be:	e7cf      	b.n	8002360 <__aeabi_d2f+0x28>
 80023c0:	2000      	movs	r0, #0
 80023c2:	2200      	movs	r2, #0
 80023c4:	e7cc      	b.n	8002360 <__aeabi_d2f+0x28>
 80023c6:	000a      	movs	r2, r1
 80023c8:	3217      	adds	r2, #23
 80023ca:	db2f      	blt.n	800242c <__aeabi_d2f+0xf4>
 80023cc:	2680      	movs	r6, #128	; 0x80
 80023ce:	0436      	lsls	r6, r6, #16
 80023d0:	432e      	orrs	r6, r5
 80023d2:	251e      	movs	r5, #30
 80023d4:	1a6d      	subs	r5, r5, r1
 80023d6:	2d1f      	cmp	r5, #31
 80023d8:	dd11      	ble.n	80023fe <__aeabi_d2f+0xc6>
 80023da:	2202      	movs	r2, #2
 80023dc:	4252      	negs	r2, r2
 80023de:	1a52      	subs	r2, r2, r1
 80023e0:	0031      	movs	r1, r6
 80023e2:	40d1      	lsrs	r1, r2
 80023e4:	2d20      	cmp	r5, #32
 80023e6:	d004      	beq.n	80023f2 <__aeabi_d2f+0xba>
 80023e8:	4a14      	ldr	r2, [pc, #80]	; (800243c <__aeabi_d2f+0x104>)
 80023ea:	4694      	mov	ip, r2
 80023ec:	4463      	add	r3, ip
 80023ee:	409e      	lsls	r6, r3
 80023f0:	4337      	orrs	r7, r6
 80023f2:	003a      	movs	r2, r7
 80023f4:	1e53      	subs	r3, r2, #1
 80023f6:	419a      	sbcs	r2, r3
 80023f8:	430a      	orrs	r2, r1
 80023fa:	2100      	movs	r1, #0
 80023fc:	e7ce      	b.n	800239c <__aeabi_d2f+0x64>
 80023fe:	4a10      	ldr	r2, [pc, #64]	; (8002440 <__aeabi_d2f+0x108>)
 8002400:	0038      	movs	r0, r7
 8002402:	4694      	mov	ip, r2
 8002404:	4463      	add	r3, ip
 8002406:	4098      	lsls	r0, r3
 8002408:	003a      	movs	r2, r7
 800240a:	1e41      	subs	r1, r0, #1
 800240c:	4188      	sbcs	r0, r1
 800240e:	409e      	lsls	r6, r3
 8002410:	40ea      	lsrs	r2, r5
 8002412:	4330      	orrs	r0, r6
 8002414:	4302      	orrs	r2, r0
 8002416:	2100      	movs	r1, #0
 8002418:	0753      	lsls	r3, r2, #29
 800241a:	d1c1      	bne.n	80023a0 <__aeabi_d2f+0x68>
 800241c:	2180      	movs	r1, #128	; 0x80
 800241e:	0013      	movs	r3, r2
 8002420:	04c9      	lsls	r1, r1, #19
 8002422:	2001      	movs	r0, #1
 8002424:	400b      	ands	r3, r1
 8002426:	420a      	tst	r2, r1
 8002428:	d1c6      	bne.n	80023b8 <__aeabi_d2f+0x80>
 800242a:	e7a3      	b.n	8002374 <__aeabi_d2f+0x3c>
 800242c:	2300      	movs	r3, #0
 800242e:	e7a0      	b.n	8002372 <__aeabi_d2f+0x3a>
 8002430:	000b      	movs	r3, r1
 8002432:	e79f      	b.n	8002374 <__aeabi_d2f+0x3c>
 8002434:	000007fe 	.word	0x000007fe
 8002438:	fffffc80 	.word	0xfffffc80
 800243c:	fffffca2 	.word	0xfffffca2
 8002440:	fffffc82 	.word	0xfffffc82

08002444 <__clzsi2>:
 8002444:	211c      	movs	r1, #28
 8002446:	2301      	movs	r3, #1
 8002448:	041b      	lsls	r3, r3, #16
 800244a:	4298      	cmp	r0, r3
 800244c:	d301      	bcc.n	8002452 <__clzsi2+0xe>
 800244e:	0c00      	lsrs	r0, r0, #16
 8002450:	3910      	subs	r1, #16
 8002452:	0a1b      	lsrs	r3, r3, #8
 8002454:	4298      	cmp	r0, r3
 8002456:	d301      	bcc.n	800245c <__clzsi2+0x18>
 8002458:	0a00      	lsrs	r0, r0, #8
 800245a:	3908      	subs	r1, #8
 800245c:	091b      	lsrs	r3, r3, #4
 800245e:	4298      	cmp	r0, r3
 8002460:	d301      	bcc.n	8002466 <__clzsi2+0x22>
 8002462:	0900      	lsrs	r0, r0, #4
 8002464:	3904      	subs	r1, #4
 8002466:	a202      	add	r2, pc, #8	; (adr r2, 8002470 <__clzsi2+0x2c>)
 8002468:	5c10      	ldrb	r0, [r2, r0]
 800246a:	1840      	adds	r0, r0, r1
 800246c:	4770      	bx	lr
 800246e:	46c0      	nop			; (mov r8, r8)
 8002470:	02020304 	.word	0x02020304
 8002474:	01010101 	.word	0x01010101
	...

08002480 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002482:	b095      	sub	sp, #84	; 0x54
 8002484:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002486:	f000 fb6f 	bl	8002b68 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800248a:	f000 f883 	bl	8002594 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800248e:	f000 f975 	bl	800277c <MX_GPIO_Init>
  MX_ADC_Init();
 8002492:	f000 f8e7 	bl	8002664 <MX_ADC_Init>
  MX_USART1_UART_Init();
 8002496:	f000 f941 	bl	800271c <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */

  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000); // Configure the SysTick timer for 1ms interrupts
 800249a:	f001 fe19 	bl	80040d0 <HAL_RCC_GetHCLKFreq>
 800249e:	0002      	movs	r2, r0
 80024a0:	23fa      	movs	r3, #250	; 0xfa
 80024a2:	0099      	lsls	r1, r3, #2
 80024a4:	0010      	movs	r0, r2
 80024a6:	f7fd fe4b 	bl	8000140 <__udivsi3>
 80024aa:	0003      	movs	r3, r0
 80024ac:	0018      	movs	r0, r3
 80024ae:	f001 f854 	bl	800355a <HAL_SYSTICK_Config>
  while (1)
  {
    /* USER CODE END WHILE */

	  // Start an ADC conversion
	  HAL_ADC_Start(&hadc);
 80024b2:	4b30      	ldr	r3, [pc, #192]	; (8002574 <main+0xf4>)
 80024b4:	0018      	movs	r0, r3
 80024b6:	f000 fd1f 	bl	8002ef8 <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY);
 80024ba:	2301      	movs	r3, #1
 80024bc:	425a      	negs	r2, r3
 80024be:	4b2d      	ldr	r3, [pc, #180]	; (8002574 <main+0xf4>)
 80024c0:	0011      	movs	r1, r2
 80024c2:	0018      	movs	r0, r3
 80024c4:	f000 fd6c 	bl	8002fa0 <HAL_ADC_PollForConversion>

	  // Read ADC value
	  uint16_t adc_value = HAL_ADC_GetValue(&hadc);
 80024c8:	4b2a      	ldr	r3, [pc, #168]	; (8002574 <main+0xf4>)
 80024ca:	0018      	movs	r0, r3
 80024cc:	f000 fe00 	bl	80030d0 <HAL_ADC_GetValue>
 80024d0:	0002      	movs	r2, r0
 80024d2:	263e      	movs	r6, #62	; 0x3e
 80024d4:	19bb      	adds	r3, r7, r6
 80024d6:	801a      	strh	r2, [r3, #0]

	  // Calculate time in seconds
	  float time_seconds = (float)millis / 1000.0;
 80024d8:	4b27      	ldr	r3, [pc, #156]	; (8002578 <main+0xf8>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	0018      	movs	r0, r3
 80024de:	f7fe f853 	bl	8000588 <__aeabi_ui2f>
 80024e2:	1c03      	adds	r3, r0, #0
 80024e4:	1c18      	adds	r0, r3, #0
 80024e6:	f7ff fedf 	bl	80022a8 <__aeabi_f2d>
 80024ea:	2200      	movs	r2, #0
 80024ec:	4b23      	ldr	r3, [pc, #140]	; (800257c <main+0xfc>)
 80024ee:	f7fe fbf3 	bl	8000cd8 <__aeabi_ddiv>
 80024f2:	0002      	movs	r2, r0
 80024f4:	000b      	movs	r3, r1
 80024f6:	0010      	movs	r0, r2
 80024f8:	0019      	movs	r1, r3
 80024fa:	f7ff ff1d 	bl	8002338 <__aeabi_d2f>
 80024fe:	1c03      	adds	r3, r0, #0
 8002500:	63bb      	str	r3, [r7, #56]	; 0x38

	  // Transmit data over UART
	  char uart_data[50];
	  snprintf(uart_data, sizeof(uart_data), "%.8f\t%.8f\r\n", time_seconds, (float)adc_value * 3.3 / 4096.0);
 8002502:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8002504:	f7ff fed0 	bl	80022a8 <__aeabi_f2d>
 8002508:	0004      	movs	r4, r0
 800250a:	000d      	movs	r5, r1
 800250c:	19bb      	adds	r3, r7, r6
 800250e:	881b      	ldrh	r3, [r3, #0]
 8002510:	0018      	movs	r0, r3
 8002512:	f7fe f839 	bl	8000588 <__aeabi_ui2f>
 8002516:	1c03      	adds	r3, r0, #0
 8002518:	1c18      	adds	r0, r3, #0
 800251a:	f7ff fec5 	bl	80022a8 <__aeabi_f2d>
 800251e:	4a18      	ldr	r2, [pc, #96]	; (8002580 <main+0x100>)
 8002520:	4b18      	ldr	r3, [pc, #96]	; (8002584 <main+0x104>)
 8002522:	f7fe ffd3 	bl	80014cc <__aeabi_dmul>
 8002526:	0002      	movs	r2, r0
 8002528:	000b      	movs	r3, r1
 800252a:	0010      	movs	r0, r2
 800252c:	0019      	movs	r1, r3
 800252e:	2200      	movs	r2, #0
 8002530:	4b15      	ldr	r3, [pc, #84]	; (8002588 <main+0x108>)
 8002532:	f7fe fbd1 	bl	8000cd8 <__aeabi_ddiv>
 8002536:	0002      	movs	r2, r0
 8002538:	000b      	movs	r3, r1
 800253a:	4914      	ldr	r1, [pc, #80]	; (800258c <main+0x10c>)
 800253c:	1d38      	adds	r0, r7, #4
 800253e:	9202      	str	r2, [sp, #8]
 8002540:	9303      	str	r3, [sp, #12]
 8002542:	9400      	str	r4, [sp, #0]
 8002544:	9501      	str	r5, [sp, #4]
 8002546:	000a      	movs	r2, r1
 8002548:	2132      	movs	r1, #50	; 0x32
 800254a:	f003 f9a3 	bl	8005894 <sniprintf>
	  HAL_UART_Transmit(&huart1, (uint8_t *)uart_data, strlen(uart_data), HAL_MAX_DELAY);
 800254e:	1d3b      	adds	r3, r7, #4
 8002550:	0018      	movs	r0, r3
 8002552:	f7fd fdd9 	bl	8000108 <strlen>
 8002556:	0003      	movs	r3, r0
 8002558:	b29a      	uxth	r2, r3
 800255a:	2301      	movs	r3, #1
 800255c:	425b      	negs	r3, r3
 800255e:	1d39      	adds	r1, r7, #4
 8002560:	480b      	ldr	r0, [pc, #44]	; (8002590 <main+0x110>)
 8002562:	f001 ff07 	bl	8004374 <HAL_UART_Transmit>

	  HAL_Delay(1000); // Delay for 1 second before the next conversion
 8002566:	23fa      	movs	r3, #250	; 0xfa
 8002568:	009b      	lsls	r3, r3, #2
 800256a:	0018      	movs	r0, r3
 800256c:	f000 fb60 	bl	8002c30 <HAL_Delay>
  {
 8002570:	e79f      	b.n	80024b2 <main+0x32>
 8002572:	46c0      	nop			; (mov r8, r8)
 8002574:	200001f4 	.word	0x200001f4
 8002578:	200001f0 	.word	0x200001f0
 800257c:	408f4000 	.word	0x408f4000
 8002580:	66666666 	.word	0x66666666
 8002584:	400a6666 	.word	0x400a6666
 8002588:	40b00000 	.word	0x40b00000
 800258c:	08009508 	.word	0x08009508
 8002590:	20000234 	.word	0x20000234

08002594 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002594:	b590      	push	{r4, r7, lr}
 8002596:	b097      	sub	sp, #92	; 0x5c
 8002598:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800259a:	2428      	movs	r4, #40	; 0x28
 800259c:	193b      	adds	r3, r7, r4
 800259e:	0018      	movs	r0, r3
 80025a0:	2330      	movs	r3, #48	; 0x30
 80025a2:	001a      	movs	r2, r3
 80025a4:	2100      	movs	r1, #0
 80025a6:	f004 f940 	bl	800682a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025aa:	2318      	movs	r3, #24
 80025ac:	18fb      	adds	r3, r7, r3
 80025ae:	0018      	movs	r0, r3
 80025b0:	2310      	movs	r3, #16
 80025b2:	001a      	movs	r2, r3
 80025b4:	2100      	movs	r1, #0
 80025b6:	f004 f938 	bl	800682a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80025ba:	1d3b      	adds	r3, r7, #4
 80025bc:	0018      	movs	r0, r3
 80025be:	2314      	movs	r3, #20
 80025c0:	001a      	movs	r2, r3
 80025c2:	2100      	movs	r1, #0
 80025c4:	f004 f931 	bl	800682a <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 80025c8:	0021      	movs	r1, r4
 80025ca:	187b      	adds	r3, r7, r1
 80025cc:	2212      	movs	r2, #18
 80025ce:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80025d0:	187b      	adds	r3, r7, r1
 80025d2:	2201      	movs	r2, #1
 80025d4:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 80025d6:	187b      	adds	r3, r7, r1
 80025d8:	2201      	movs	r2, #1
 80025da:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80025dc:	187b      	adds	r3, r7, r1
 80025de:	2210      	movs	r2, #16
 80025e0:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSI14CalibrationValue = 16;
 80025e2:	187b      	adds	r3, r7, r1
 80025e4:	2210      	movs	r2, #16
 80025e6:	619a      	str	r2, [r3, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025e8:	187b      	adds	r3, r7, r1
 80025ea:	2202      	movs	r2, #2
 80025ec:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80025ee:	187b      	adds	r3, r7, r1
 80025f0:	2200      	movs	r2, #0
 80025f2:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 80025f4:	187b      	adds	r3, r7, r1
 80025f6:	22a0      	movs	r2, #160	; 0xa0
 80025f8:	0392      	lsls	r2, r2, #14
 80025fa:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 80025fc:	187b      	adds	r3, r7, r1
 80025fe:	2200      	movs	r2, #0
 8002600:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002602:	187b      	adds	r3, r7, r1
 8002604:	0018      	movs	r0, r3
 8002606:	f001 f925 	bl	8003854 <HAL_RCC_OscConfig>
 800260a:	1e03      	subs	r3, r0, #0
 800260c:	d001      	beq.n	8002612 <SystemClock_Config+0x7e>
  {
    Error_Handler();
 800260e:	f000 f8e9 	bl	80027e4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002612:	2118      	movs	r1, #24
 8002614:	187b      	adds	r3, r7, r1
 8002616:	2207      	movs	r2, #7
 8002618:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800261a:	187b      	adds	r3, r7, r1
 800261c:	2202      	movs	r2, #2
 800261e:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002620:	187b      	adds	r3, r7, r1
 8002622:	2200      	movs	r2, #0
 8002624:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002626:	187b      	adds	r3, r7, r1
 8002628:	2200      	movs	r2, #0
 800262a:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800262c:	187b      	adds	r3, r7, r1
 800262e:	2101      	movs	r1, #1
 8002630:	0018      	movs	r0, r3
 8002632:	f001 fc29 	bl	8003e88 <HAL_RCC_ClockConfig>
 8002636:	1e03      	subs	r3, r0, #0
 8002638:	d001      	beq.n	800263e <SystemClock_Config+0xaa>
  {
    Error_Handler();
 800263a:	f000 f8d3 	bl	80027e4 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800263e:	1d3b      	adds	r3, r7, #4
 8002640:	2201      	movs	r2, #1
 8002642:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8002644:	1d3b      	adds	r3, r7, #4
 8002646:	2200      	movs	r2, #0
 8002648:	609a      	str	r2, [r3, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800264a:	1d3b      	adds	r3, r7, #4
 800264c:	0018      	movs	r0, r3
 800264e:	f001 fd5f 	bl	8004110 <HAL_RCCEx_PeriphCLKConfig>
 8002652:	1e03      	subs	r3, r0, #0
 8002654:	d001      	beq.n	800265a <SystemClock_Config+0xc6>
  {
    Error_Handler();
 8002656:	f000 f8c5 	bl	80027e4 <Error_Handler>
  }
}
 800265a:	46c0      	nop			; (mov r8, r8)
 800265c:	46bd      	mov	sp, r7
 800265e:	b017      	add	sp, #92	; 0x5c
 8002660:	bd90      	pop	{r4, r7, pc}
	...

08002664 <MX_ADC_Init>:
  * @brief ADC Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC_Init(void)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b084      	sub	sp, #16
 8002668:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC_Init 0 */

  /* USER CODE END ADC_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800266a:	1d3b      	adds	r3, r7, #4
 800266c:	0018      	movs	r0, r3
 800266e:	230c      	movs	r3, #12
 8002670:	001a      	movs	r2, r3
 8002672:	2100      	movs	r1, #0
 8002674:	f004 f8d9 	bl	800682a <memset>

  /* USER CODE END ADC_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc.Instance = ADC1;
 8002678:	4b26      	ldr	r3, [pc, #152]	; (8002714 <MX_ADC_Init+0xb0>)
 800267a:	4a27      	ldr	r2, [pc, #156]	; (8002718 <MX_ADC_Init+0xb4>)
 800267c:	601a      	str	r2, [r3, #0]
  hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 800267e:	4b25      	ldr	r3, [pc, #148]	; (8002714 <MX_ADC_Init+0xb0>)
 8002680:	2200      	movs	r2, #0
 8002682:	605a      	str	r2, [r3, #4]
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8002684:	4b23      	ldr	r3, [pc, #140]	; (8002714 <MX_ADC_Init+0xb0>)
 8002686:	2200      	movs	r2, #0
 8002688:	609a      	str	r2, [r3, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800268a:	4b22      	ldr	r3, [pc, #136]	; (8002714 <MX_ADC_Init+0xb0>)
 800268c:	2200      	movs	r2, #0
 800268e:	60da      	str	r2, [r3, #12]
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 8002690:	4b20      	ldr	r3, [pc, #128]	; (8002714 <MX_ADC_Init+0xb0>)
 8002692:	2201      	movs	r2, #1
 8002694:	611a      	str	r2, [r3, #16]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002696:	4b1f      	ldr	r3, [pc, #124]	; (8002714 <MX_ADC_Init+0xb0>)
 8002698:	2204      	movs	r2, #4
 800269a:	615a      	str	r2, [r3, #20]
  hadc.Init.LowPowerAutoWait = DISABLE;
 800269c:	4b1d      	ldr	r3, [pc, #116]	; (8002714 <MX_ADC_Init+0xb0>)
 800269e:	2200      	movs	r2, #0
 80026a0:	761a      	strb	r2, [r3, #24]
  hadc.Init.LowPowerAutoPowerOff = DISABLE;
 80026a2:	4b1c      	ldr	r3, [pc, #112]	; (8002714 <MX_ADC_Init+0xb0>)
 80026a4:	2200      	movs	r2, #0
 80026a6:	765a      	strb	r2, [r3, #25]
  hadc.Init.ContinuousConvMode = DISABLE;
 80026a8:	4b1a      	ldr	r3, [pc, #104]	; (8002714 <MX_ADC_Init+0xb0>)
 80026aa:	2200      	movs	r2, #0
 80026ac:	769a      	strb	r2, [r3, #26]
  hadc.Init.DiscontinuousConvMode = DISABLE;
 80026ae:	4b19      	ldr	r3, [pc, #100]	; (8002714 <MX_ADC_Init+0xb0>)
 80026b0:	2200      	movs	r2, #0
 80026b2:	76da      	strb	r2, [r3, #27]
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80026b4:	4b17      	ldr	r3, [pc, #92]	; (8002714 <MX_ADC_Init+0xb0>)
 80026b6:	22c2      	movs	r2, #194	; 0xc2
 80026b8:	32ff      	adds	r2, #255	; 0xff
 80026ba:	61da      	str	r2, [r3, #28]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80026bc:	4b15      	ldr	r3, [pc, #84]	; (8002714 <MX_ADC_Init+0xb0>)
 80026be:	2200      	movs	r2, #0
 80026c0:	621a      	str	r2, [r3, #32]
  hadc.Init.DMAContinuousRequests = DISABLE;
 80026c2:	4b14      	ldr	r3, [pc, #80]	; (8002714 <MX_ADC_Init+0xb0>)
 80026c4:	2224      	movs	r2, #36	; 0x24
 80026c6:	2100      	movs	r1, #0
 80026c8:	5499      	strb	r1, [r3, r2]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80026ca:	4b12      	ldr	r3, [pc, #72]	; (8002714 <MX_ADC_Init+0xb0>)
 80026cc:	2201      	movs	r2, #1
 80026ce:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 80026d0:	4b10      	ldr	r3, [pc, #64]	; (8002714 <MX_ADC_Init+0xb0>)
 80026d2:	0018      	movs	r0, r3
 80026d4:	f000 fad0 	bl	8002c78 <HAL_ADC_Init>
 80026d8:	1e03      	subs	r3, r0, #0
 80026da:	d001      	beq.n	80026e0 <MX_ADC_Init+0x7c>
  {
    Error_Handler();
 80026dc:	f000 f882 	bl	80027e4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel to be converted.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 80026e0:	1d3b      	adds	r3, r7, #4
 80026e2:	2200      	movs	r2, #0
 80026e4:	601a      	str	r2, [r3, #0]
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 80026e6:	1d3b      	adds	r3, r7, #4
 80026e8:	2280      	movs	r2, #128	; 0x80
 80026ea:	0152      	lsls	r2, r2, #5
 80026ec:	605a      	str	r2, [r3, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80026ee:	1d3b      	adds	r3, r7, #4
 80026f0:	2280      	movs	r2, #128	; 0x80
 80026f2:	0552      	lsls	r2, r2, #21
 80026f4:	609a      	str	r2, [r3, #8]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80026f6:	1d3a      	adds	r2, r7, #4
 80026f8:	4b06      	ldr	r3, [pc, #24]	; (8002714 <MX_ADC_Init+0xb0>)
 80026fa:	0011      	movs	r1, r2
 80026fc:	0018      	movs	r0, r3
 80026fe:	f000 fcf3 	bl	80030e8 <HAL_ADC_ConfigChannel>
 8002702:	1e03      	subs	r3, r0, #0
 8002704:	d001      	beq.n	800270a <MX_ADC_Init+0xa6>
  {
    Error_Handler();
 8002706:	f000 f86d 	bl	80027e4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC_Init 2 */

  /* USER CODE END ADC_Init 2 */

}
 800270a:	46c0      	nop			; (mov r8, r8)
 800270c:	46bd      	mov	sp, r7
 800270e:	b004      	add	sp, #16
 8002710:	bd80      	pop	{r7, pc}
 8002712:	46c0      	nop			; (mov r8, r8)
 8002714:	200001f4 	.word	0x200001f4
 8002718:	40012400 	.word	0x40012400

0800271c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800271c:	b580      	push	{r7, lr}
 800271e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002720:	4b14      	ldr	r3, [pc, #80]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002722:	4a15      	ldr	r2, [pc, #84]	; (8002778 <MX_USART1_UART_Init+0x5c>)
 8002724:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002726:	4b13      	ldr	r3, [pc, #76]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002728:	22e1      	movs	r2, #225	; 0xe1
 800272a:	0252      	lsls	r2, r2, #9
 800272c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800272e:	4b11      	ldr	r3, [pc, #68]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002730:	2200      	movs	r2, #0
 8002732:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002734:	4b0f      	ldr	r3, [pc, #60]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002736:	2200      	movs	r2, #0
 8002738:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800273a:	4b0e      	ldr	r3, [pc, #56]	; (8002774 <MX_USART1_UART_Init+0x58>)
 800273c:	2200      	movs	r2, #0
 800273e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002740:	4b0c      	ldr	r3, [pc, #48]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002742:	220c      	movs	r2, #12
 8002744:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002746:	4b0b      	ldr	r3, [pc, #44]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002748:	2200      	movs	r2, #0
 800274a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800274c:	4b09      	ldr	r3, [pc, #36]	; (8002774 <MX_USART1_UART_Init+0x58>)
 800274e:	2200      	movs	r2, #0
 8002750:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002752:	4b08      	ldr	r3, [pc, #32]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002754:	2200      	movs	r2, #0
 8002756:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002758:	4b06      	ldr	r3, [pc, #24]	; (8002774 <MX_USART1_UART_Init+0x58>)
 800275a:	2200      	movs	r2, #0
 800275c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800275e:	4b05      	ldr	r3, [pc, #20]	; (8002774 <MX_USART1_UART_Init+0x58>)
 8002760:	0018      	movs	r0, r3
 8002762:	f001 fdb3 	bl	80042cc <HAL_UART_Init>
 8002766:	1e03      	subs	r3, r0, #0
 8002768:	d001      	beq.n	800276e <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 800276a:	f000 f83b 	bl	80027e4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800276e:	46c0      	nop			; (mov r8, r8)
 8002770:	46bd      	mov	sp, r7
 8002772:	bd80      	pop	{r7, pc}
 8002774:	20000234 	.word	0x20000234
 8002778:	40013800 	.word	0x40013800

0800277c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800277c:	b580      	push	{r7, lr}
 800277e:	b084      	sub	sp, #16
 8002780:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002782:	4b17      	ldr	r3, [pc, #92]	; (80027e0 <MX_GPIO_Init+0x64>)
 8002784:	695a      	ldr	r2, [r3, #20]
 8002786:	4b16      	ldr	r3, [pc, #88]	; (80027e0 <MX_GPIO_Init+0x64>)
 8002788:	2180      	movs	r1, #128	; 0x80
 800278a:	0309      	lsls	r1, r1, #12
 800278c:	430a      	orrs	r2, r1
 800278e:	615a      	str	r2, [r3, #20]
 8002790:	4b13      	ldr	r3, [pc, #76]	; (80027e0 <MX_GPIO_Init+0x64>)
 8002792:	695a      	ldr	r2, [r3, #20]
 8002794:	2380      	movs	r3, #128	; 0x80
 8002796:	031b      	lsls	r3, r3, #12
 8002798:	4013      	ands	r3, r2
 800279a:	60fb      	str	r3, [r7, #12]
 800279c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800279e:	4b10      	ldr	r3, [pc, #64]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027a0:	695a      	ldr	r2, [r3, #20]
 80027a2:	4b0f      	ldr	r3, [pc, #60]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027a4:	2180      	movs	r1, #128	; 0x80
 80027a6:	03c9      	lsls	r1, r1, #15
 80027a8:	430a      	orrs	r2, r1
 80027aa:	615a      	str	r2, [r3, #20]
 80027ac:	4b0c      	ldr	r3, [pc, #48]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027ae:	695a      	ldr	r2, [r3, #20]
 80027b0:	2380      	movs	r3, #128	; 0x80
 80027b2:	03db      	lsls	r3, r3, #15
 80027b4:	4013      	ands	r3, r2
 80027b6:	60bb      	str	r3, [r7, #8]
 80027b8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ba:	4b09      	ldr	r3, [pc, #36]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027bc:	695a      	ldr	r2, [r3, #20]
 80027be:	4b08      	ldr	r3, [pc, #32]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027c0:	2180      	movs	r1, #128	; 0x80
 80027c2:	0289      	lsls	r1, r1, #10
 80027c4:	430a      	orrs	r2, r1
 80027c6:	615a      	str	r2, [r3, #20]
 80027c8:	4b05      	ldr	r3, [pc, #20]	; (80027e0 <MX_GPIO_Init+0x64>)
 80027ca:	695a      	ldr	r2, [r3, #20]
 80027cc:	2380      	movs	r3, #128	; 0x80
 80027ce:	029b      	lsls	r3, r3, #10
 80027d0:	4013      	ands	r3, r2
 80027d2:	607b      	str	r3, [r7, #4]
 80027d4:	687b      	ldr	r3, [r7, #4]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80027d6:	46c0      	nop			; (mov r8, r8)
 80027d8:	46bd      	mov	sp, r7
 80027da:	b004      	add	sp, #16
 80027dc:	bd80      	pop	{r7, pc}
 80027de:	46c0      	nop			; (mov r8, r8)
 80027e0:	40021000 	.word	0x40021000

080027e4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80027e4:	b580      	push	{r7, lr}
 80027e6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80027e8:	b672      	cpsid	i
}
 80027ea:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80027ec:	e7fe      	b.n	80027ec <Error_Handler+0x8>
	...

080027f0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80027f0:	b580      	push	{r7, lr}
 80027f2:	b082      	sub	sp, #8
 80027f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80027f6:	4b0f      	ldr	r3, [pc, #60]	; (8002834 <HAL_MspInit+0x44>)
 80027f8:	699a      	ldr	r2, [r3, #24]
 80027fa:	4b0e      	ldr	r3, [pc, #56]	; (8002834 <HAL_MspInit+0x44>)
 80027fc:	2101      	movs	r1, #1
 80027fe:	430a      	orrs	r2, r1
 8002800:	619a      	str	r2, [r3, #24]
 8002802:	4b0c      	ldr	r3, [pc, #48]	; (8002834 <HAL_MspInit+0x44>)
 8002804:	699b      	ldr	r3, [r3, #24]
 8002806:	2201      	movs	r2, #1
 8002808:	4013      	ands	r3, r2
 800280a:	607b      	str	r3, [r7, #4]
 800280c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800280e:	4b09      	ldr	r3, [pc, #36]	; (8002834 <HAL_MspInit+0x44>)
 8002810:	69da      	ldr	r2, [r3, #28]
 8002812:	4b08      	ldr	r3, [pc, #32]	; (8002834 <HAL_MspInit+0x44>)
 8002814:	2180      	movs	r1, #128	; 0x80
 8002816:	0549      	lsls	r1, r1, #21
 8002818:	430a      	orrs	r2, r1
 800281a:	61da      	str	r2, [r3, #28]
 800281c:	4b05      	ldr	r3, [pc, #20]	; (8002834 <HAL_MspInit+0x44>)
 800281e:	69da      	ldr	r2, [r3, #28]
 8002820:	2380      	movs	r3, #128	; 0x80
 8002822:	055b      	lsls	r3, r3, #21
 8002824:	4013      	ands	r3, r2
 8002826:	603b      	str	r3, [r7, #0]
 8002828:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800282a:	46c0      	nop			; (mov r8, r8)
 800282c:	46bd      	mov	sp, r7
 800282e:	b002      	add	sp, #8
 8002830:	bd80      	pop	{r7, pc}
 8002832:	46c0      	nop			; (mov r8, r8)
 8002834:	40021000 	.word	0x40021000

08002838 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002838:	b590      	push	{r4, r7, lr}
 800283a:	b08b      	sub	sp, #44	; 0x2c
 800283c:	af00      	add	r7, sp, #0
 800283e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002840:	2414      	movs	r4, #20
 8002842:	193b      	adds	r3, r7, r4
 8002844:	0018      	movs	r0, r3
 8002846:	2314      	movs	r3, #20
 8002848:	001a      	movs	r2, r3
 800284a:	2100      	movs	r1, #0
 800284c:	f003 ffed 	bl	800682a <memset>
  if(hadc->Instance==ADC1)
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	4a19      	ldr	r2, [pc, #100]	; (80028bc <HAL_ADC_MspInit+0x84>)
 8002856:	4293      	cmp	r3, r2
 8002858:	d12b      	bne.n	80028b2 <HAL_ADC_MspInit+0x7a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800285a:	4b19      	ldr	r3, [pc, #100]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 800285c:	699a      	ldr	r2, [r3, #24]
 800285e:	4b18      	ldr	r3, [pc, #96]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 8002860:	2180      	movs	r1, #128	; 0x80
 8002862:	0089      	lsls	r1, r1, #2
 8002864:	430a      	orrs	r2, r1
 8002866:	619a      	str	r2, [r3, #24]
 8002868:	4b15      	ldr	r3, [pc, #84]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 800286a:	699a      	ldr	r2, [r3, #24]
 800286c:	2380      	movs	r3, #128	; 0x80
 800286e:	009b      	lsls	r3, r3, #2
 8002870:	4013      	ands	r3, r2
 8002872:	613b      	str	r3, [r7, #16]
 8002874:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002876:	4b12      	ldr	r3, [pc, #72]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 8002878:	695a      	ldr	r2, [r3, #20]
 800287a:	4b11      	ldr	r3, [pc, #68]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 800287c:	2180      	movs	r1, #128	; 0x80
 800287e:	0289      	lsls	r1, r1, #10
 8002880:	430a      	orrs	r2, r1
 8002882:	615a      	str	r2, [r3, #20]
 8002884:	4b0e      	ldr	r3, [pc, #56]	; (80028c0 <HAL_ADC_MspInit+0x88>)
 8002886:	695a      	ldr	r2, [r3, #20]
 8002888:	2380      	movs	r3, #128	; 0x80
 800288a:	029b      	lsls	r3, r3, #10
 800288c:	4013      	ands	r3, r2
 800288e:	60fb      	str	r3, [r7, #12]
 8002890:	68fb      	ldr	r3, [r7, #12]
    /**ADC GPIO Configuration
    PA0     ------> ADC_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002892:	193b      	adds	r3, r7, r4
 8002894:	2201      	movs	r2, #1
 8002896:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002898:	193b      	adds	r3, r7, r4
 800289a:	2203      	movs	r2, #3
 800289c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800289e:	193b      	adds	r3, r7, r4
 80028a0:	2200      	movs	r2, #0
 80028a2:	609a      	str	r2, [r3, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028a4:	193a      	adds	r2, r7, r4
 80028a6:	2390      	movs	r3, #144	; 0x90
 80028a8:	05db      	lsls	r3, r3, #23
 80028aa:	0011      	movs	r1, r2
 80028ac:	0018      	movs	r0, r3
 80028ae:	f000 fe61 	bl	8003574 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80028b2:	46c0      	nop			; (mov r8, r8)
 80028b4:	46bd      	mov	sp, r7
 80028b6:	b00b      	add	sp, #44	; 0x2c
 80028b8:	bd90      	pop	{r4, r7, pc}
 80028ba:	46c0      	nop			; (mov r8, r8)
 80028bc:	40012400 	.word	0x40012400
 80028c0:	40021000 	.word	0x40021000

080028c4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80028c4:	b590      	push	{r4, r7, lr}
 80028c6:	b08b      	sub	sp, #44	; 0x2c
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028cc:	2414      	movs	r4, #20
 80028ce:	193b      	adds	r3, r7, r4
 80028d0:	0018      	movs	r0, r3
 80028d2:	2314      	movs	r3, #20
 80028d4:	001a      	movs	r2, r3
 80028d6:	2100      	movs	r1, #0
 80028d8:	f003 ffa7 	bl	800682a <memset>
  if(huart->Instance==USART1)
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	4a1d      	ldr	r2, [pc, #116]	; (8002958 <HAL_UART_MspInit+0x94>)
 80028e2:	4293      	cmp	r3, r2
 80028e4:	d133      	bne.n	800294e <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80028e6:	4b1d      	ldr	r3, [pc, #116]	; (800295c <HAL_UART_MspInit+0x98>)
 80028e8:	699a      	ldr	r2, [r3, #24]
 80028ea:	4b1c      	ldr	r3, [pc, #112]	; (800295c <HAL_UART_MspInit+0x98>)
 80028ec:	2180      	movs	r1, #128	; 0x80
 80028ee:	01c9      	lsls	r1, r1, #7
 80028f0:	430a      	orrs	r2, r1
 80028f2:	619a      	str	r2, [r3, #24]
 80028f4:	4b19      	ldr	r3, [pc, #100]	; (800295c <HAL_UART_MspInit+0x98>)
 80028f6:	699a      	ldr	r2, [r3, #24]
 80028f8:	2380      	movs	r3, #128	; 0x80
 80028fa:	01db      	lsls	r3, r3, #7
 80028fc:	4013      	ands	r3, r2
 80028fe:	613b      	str	r3, [r7, #16]
 8002900:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002902:	4b16      	ldr	r3, [pc, #88]	; (800295c <HAL_UART_MspInit+0x98>)
 8002904:	695a      	ldr	r2, [r3, #20]
 8002906:	4b15      	ldr	r3, [pc, #84]	; (800295c <HAL_UART_MspInit+0x98>)
 8002908:	2180      	movs	r1, #128	; 0x80
 800290a:	0289      	lsls	r1, r1, #10
 800290c:	430a      	orrs	r2, r1
 800290e:	615a      	str	r2, [r3, #20]
 8002910:	4b12      	ldr	r3, [pc, #72]	; (800295c <HAL_UART_MspInit+0x98>)
 8002912:	695a      	ldr	r2, [r3, #20]
 8002914:	2380      	movs	r3, #128	; 0x80
 8002916:	029b      	lsls	r3, r3, #10
 8002918:	4013      	ands	r3, r2
 800291a:	60fb      	str	r3, [r7, #12]
 800291c:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800291e:	193b      	adds	r3, r7, r4
 8002920:	22c0      	movs	r2, #192	; 0xc0
 8002922:	00d2      	lsls	r2, r2, #3
 8002924:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002926:	0021      	movs	r1, r4
 8002928:	187b      	adds	r3, r7, r1
 800292a:	2202      	movs	r2, #2
 800292c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800292e:	187b      	adds	r3, r7, r1
 8002930:	2200      	movs	r2, #0
 8002932:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002934:	187b      	adds	r3, r7, r1
 8002936:	2203      	movs	r2, #3
 8002938:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 800293a:	187b      	adds	r3, r7, r1
 800293c:	2201      	movs	r2, #1
 800293e:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002940:	187a      	adds	r2, r7, r1
 8002942:	2390      	movs	r3, #144	; 0x90
 8002944:	05db      	lsls	r3, r3, #23
 8002946:	0011      	movs	r1, r2
 8002948:	0018      	movs	r0, r3
 800294a:	f000 fe13 	bl	8003574 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 800294e:	46c0      	nop			; (mov r8, r8)
 8002950:	46bd      	mov	sp, r7
 8002952:	b00b      	add	sp, #44	; 0x2c
 8002954:	bd90      	pop	{r4, r7, pc}
 8002956:	46c0      	nop			; (mov r8, r8)
 8002958:	40013800 	.word	0x40013800
 800295c:	40021000 	.word	0x40021000

08002960 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002960:	b580      	push	{r7, lr}
 8002962:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002964:	e7fe      	b.n	8002964 <NMI_Handler+0x4>

08002966 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002966:	b580      	push	{r7, lr}
 8002968:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800296a:	e7fe      	b.n	800296a <HardFault_Handler+0x4>

0800296c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800296c:	b580      	push	{r7, lr}
 800296e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002970:	46c0      	nop			; (mov r8, r8)
 8002972:	46bd      	mov	sp, r7
 8002974:	bd80      	pop	{r7, pc}

08002976 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002976:	b580      	push	{r7, lr}
 8002978:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800297a:	46c0      	nop			; (mov r8, r8)
 800297c:	46bd      	mov	sp, r7
 800297e:	bd80      	pop	{r7, pc}

08002980 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002980:	b580      	push	{r7, lr}
 8002982:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002984:	f000 f938 	bl	8002bf8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002988:	46c0      	nop			; (mov r8, r8)
 800298a:	46bd      	mov	sp, r7
 800298c:	bd80      	pop	{r7, pc}

0800298e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800298e:	b580      	push	{r7, lr}
 8002990:	af00      	add	r7, sp, #0
  return 1;
 8002992:	2301      	movs	r3, #1
}
 8002994:	0018      	movs	r0, r3
 8002996:	46bd      	mov	sp, r7
 8002998:	bd80      	pop	{r7, pc}

0800299a <_kill>:

int _kill(int pid, int sig)
{
 800299a:	b580      	push	{r7, lr}
 800299c:	b082      	sub	sp, #8
 800299e:	af00      	add	r7, sp, #0
 80029a0:	6078      	str	r0, [r7, #4]
 80029a2:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80029a4:	f003 ff4e 	bl	8006844 <__errno>
 80029a8:	0003      	movs	r3, r0
 80029aa:	2216      	movs	r2, #22
 80029ac:	601a      	str	r2, [r3, #0]
  return -1;
 80029ae:	2301      	movs	r3, #1
 80029b0:	425b      	negs	r3, r3
}
 80029b2:	0018      	movs	r0, r3
 80029b4:	46bd      	mov	sp, r7
 80029b6:	b002      	add	sp, #8
 80029b8:	bd80      	pop	{r7, pc}

080029ba <_exit>:

void _exit (int status)
{
 80029ba:	b580      	push	{r7, lr}
 80029bc:	b082      	sub	sp, #8
 80029be:	af00      	add	r7, sp, #0
 80029c0:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80029c2:	2301      	movs	r3, #1
 80029c4:	425a      	negs	r2, r3
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	0011      	movs	r1, r2
 80029ca:	0018      	movs	r0, r3
 80029cc:	f7ff ffe5 	bl	800299a <_kill>
  while (1) {}    /* Make sure we hang here */
 80029d0:	e7fe      	b.n	80029d0 <_exit+0x16>

080029d2 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029d2:	b580      	push	{r7, lr}
 80029d4:	b086      	sub	sp, #24
 80029d6:	af00      	add	r7, sp, #0
 80029d8:	60f8      	str	r0, [r7, #12]
 80029da:	60b9      	str	r1, [r7, #8]
 80029dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029de:	2300      	movs	r3, #0
 80029e0:	617b      	str	r3, [r7, #20]
 80029e2:	e00a      	b.n	80029fa <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80029e4:	e000      	b.n	80029e8 <_read+0x16>
 80029e6:	bf00      	nop
 80029e8:	0001      	movs	r1, r0
 80029ea:	68bb      	ldr	r3, [r7, #8]
 80029ec:	1c5a      	adds	r2, r3, #1
 80029ee:	60ba      	str	r2, [r7, #8]
 80029f0:	b2ca      	uxtb	r2, r1
 80029f2:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029f4:	697b      	ldr	r3, [r7, #20]
 80029f6:	3301      	adds	r3, #1
 80029f8:	617b      	str	r3, [r7, #20]
 80029fa:	697a      	ldr	r2, [r7, #20]
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	429a      	cmp	r2, r3
 8002a00:	dbf0      	blt.n	80029e4 <_read+0x12>
  }

  return len;
 8002a02:	687b      	ldr	r3, [r7, #4]
}
 8002a04:	0018      	movs	r0, r3
 8002a06:	46bd      	mov	sp, r7
 8002a08:	b006      	add	sp, #24
 8002a0a:	bd80      	pop	{r7, pc}

08002a0c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002a0c:	b580      	push	{r7, lr}
 8002a0e:	b086      	sub	sp, #24
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	60f8      	str	r0, [r7, #12]
 8002a14:	60b9      	str	r1, [r7, #8]
 8002a16:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a18:	2300      	movs	r3, #0
 8002a1a:	617b      	str	r3, [r7, #20]
 8002a1c:	e009      	b.n	8002a32 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002a1e:	68bb      	ldr	r3, [r7, #8]
 8002a20:	1c5a      	adds	r2, r3, #1
 8002a22:	60ba      	str	r2, [r7, #8]
 8002a24:	781b      	ldrb	r3, [r3, #0]
 8002a26:	0018      	movs	r0, r3
 8002a28:	e000      	b.n	8002a2c <_write+0x20>
 8002a2a:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a2c:	697b      	ldr	r3, [r7, #20]
 8002a2e:	3301      	adds	r3, #1
 8002a30:	617b      	str	r3, [r7, #20]
 8002a32:	697a      	ldr	r2, [r7, #20]
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	429a      	cmp	r2, r3
 8002a38:	dbf1      	blt.n	8002a1e <_write+0x12>
  }
  return len;
 8002a3a:	687b      	ldr	r3, [r7, #4]
}
 8002a3c:	0018      	movs	r0, r3
 8002a3e:	46bd      	mov	sp, r7
 8002a40:	b006      	add	sp, #24
 8002a42:	bd80      	pop	{r7, pc}

08002a44 <_close>:

int _close(int file)
{
 8002a44:	b580      	push	{r7, lr}
 8002a46:	b082      	sub	sp, #8
 8002a48:	af00      	add	r7, sp, #0
 8002a4a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002a4c:	2301      	movs	r3, #1
 8002a4e:	425b      	negs	r3, r3
}
 8002a50:	0018      	movs	r0, r3
 8002a52:	46bd      	mov	sp, r7
 8002a54:	b002      	add	sp, #8
 8002a56:	bd80      	pop	{r7, pc}

08002a58 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002a58:	b580      	push	{r7, lr}
 8002a5a:	b082      	sub	sp, #8
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	6078      	str	r0, [r7, #4]
 8002a60:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002a62:	683b      	ldr	r3, [r7, #0]
 8002a64:	2280      	movs	r2, #128	; 0x80
 8002a66:	0192      	lsls	r2, r2, #6
 8002a68:	605a      	str	r2, [r3, #4]
  return 0;
 8002a6a:	2300      	movs	r3, #0
}
 8002a6c:	0018      	movs	r0, r3
 8002a6e:	46bd      	mov	sp, r7
 8002a70:	b002      	add	sp, #8
 8002a72:	bd80      	pop	{r7, pc}

08002a74 <_isatty>:

int _isatty(int file)
{
 8002a74:	b580      	push	{r7, lr}
 8002a76:	b082      	sub	sp, #8
 8002a78:	af00      	add	r7, sp, #0
 8002a7a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002a7c:	2301      	movs	r3, #1
}
 8002a7e:	0018      	movs	r0, r3
 8002a80:	46bd      	mov	sp, r7
 8002a82:	b002      	add	sp, #8
 8002a84:	bd80      	pop	{r7, pc}

08002a86 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002a86:	b580      	push	{r7, lr}
 8002a88:	b084      	sub	sp, #16
 8002a8a:	af00      	add	r7, sp, #0
 8002a8c:	60f8      	str	r0, [r7, #12]
 8002a8e:	60b9      	str	r1, [r7, #8]
 8002a90:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002a92:	2300      	movs	r3, #0
}
 8002a94:	0018      	movs	r0, r3
 8002a96:	46bd      	mov	sp, r7
 8002a98:	b004      	add	sp, #16
 8002a9a:	bd80      	pop	{r7, pc}

08002a9c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b086      	sub	sp, #24
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002aa4:	4a14      	ldr	r2, [pc, #80]	; (8002af8 <_sbrk+0x5c>)
 8002aa6:	4b15      	ldr	r3, [pc, #84]	; (8002afc <_sbrk+0x60>)
 8002aa8:	1ad3      	subs	r3, r2, r3
 8002aaa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002aac:	697b      	ldr	r3, [r7, #20]
 8002aae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002ab0:	4b13      	ldr	r3, [pc, #76]	; (8002b00 <_sbrk+0x64>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d102      	bne.n	8002abe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002ab8:	4b11      	ldr	r3, [pc, #68]	; (8002b00 <_sbrk+0x64>)
 8002aba:	4a12      	ldr	r2, [pc, #72]	; (8002b04 <_sbrk+0x68>)
 8002abc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002abe:	4b10      	ldr	r3, [pc, #64]	; (8002b00 <_sbrk+0x64>)
 8002ac0:	681a      	ldr	r2, [r3, #0]
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	18d3      	adds	r3, r2, r3
 8002ac6:	693a      	ldr	r2, [r7, #16]
 8002ac8:	429a      	cmp	r2, r3
 8002aca:	d207      	bcs.n	8002adc <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002acc:	f003 feba 	bl	8006844 <__errno>
 8002ad0:	0003      	movs	r3, r0
 8002ad2:	220c      	movs	r2, #12
 8002ad4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002ad6:	2301      	movs	r3, #1
 8002ad8:	425b      	negs	r3, r3
 8002ada:	e009      	b.n	8002af0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002adc:	4b08      	ldr	r3, [pc, #32]	; (8002b00 <_sbrk+0x64>)
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002ae2:	4b07      	ldr	r3, [pc, #28]	; (8002b00 <_sbrk+0x64>)
 8002ae4:	681a      	ldr	r2, [r3, #0]
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	18d2      	adds	r2, r2, r3
 8002aea:	4b05      	ldr	r3, [pc, #20]	; (8002b00 <_sbrk+0x64>)
 8002aec:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002aee:	68fb      	ldr	r3, [r7, #12]
}
 8002af0:	0018      	movs	r0, r3
 8002af2:	46bd      	mov	sp, r7
 8002af4:	b006      	add	sp, #24
 8002af6:	bd80      	pop	{r7, pc}
 8002af8:	20002000 	.word	0x20002000
 8002afc:	00000400 	.word	0x00000400
 8002b00:	200002bc 	.word	0x200002bc
 8002b04:	20000410 	.word	0x20000410

08002b08 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002b0c:	46c0      	nop			; (mov r8, r8)
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	bd80      	pop	{r7, pc}
	...

08002b14 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002b14:	480d      	ldr	r0, [pc, #52]	; (8002b4c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002b16:	4685      	mov	sp, r0
  
  /* Call the clock system initialization function.*/
  bl  SystemInit
 8002b18:	f7ff fff6 	bl	8002b08 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002b1c:	480c      	ldr	r0, [pc, #48]	; (8002b50 <LoopForever+0x6>)
  ldr r1, =_edata
 8002b1e:	490d      	ldr	r1, [pc, #52]	; (8002b54 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002b20:	4a0d      	ldr	r2, [pc, #52]	; (8002b58 <LoopForever+0xe>)
  movs r3, #0
 8002b22:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002b24:	e002      	b.n	8002b2c <LoopCopyDataInit>

08002b26 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002b26:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002b28:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002b2a:	3304      	adds	r3, #4

08002b2c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002b2c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002b2e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002b30:	d3f9      	bcc.n	8002b26 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002b32:	4a0a      	ldr	r2, [pc, #40]	; (8002b5c <LoopForever+0x12>)
  ldr r4, =_ebss
 8002b34:	4c0a      	ldr	r4, [pc, #40]	; (8002b60 <LoopForever+0x16>)
  movs r3, #0
 8002b36:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002b38:	e001      	b.n	8002b3e <LoopFillZerobss>

08002b3a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002b3a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002b3c:	3204      	adds	r2, #4

08002b3e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002b3e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002b40:	d3fb      	bcc.n	8002b3a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002b42:	f003 fe85 	bl	8006850 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002b46:	f7ff fc9b 	bl	8002480 <main>

08002b4a <LoopForever>:

LoopForever:
    b LoopForever
 8002b4a:	e7fe      	b.n	8002b4a <LoopForever>
  ldr   r0, =_estack
 8002b4c:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8002b50:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002b54:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8002b58:	080099b8 	.word	0x080099b8
  ldr r2, =_sbss
 8002b5c:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8002b60:	20000410 	.word	0x20000410

08002b64 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002b64:	e7fe      	b.n	8002b64 <ADC1_COMP_IRQHandler>
	...

08002b68 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b6c:	4b07      	ldr	r3, [pc, #28]	; (8002b8c <HAL_Init+0x24>)
 8002b6e:	681a      	ldr	r2, [r3, #0]
 8002b70:	4b06      	ldr	r3, [pc, #24]	; (8002b8c <HAL_Init+0x24>)
 8002b72:	2110      	movs	r1, #16
 8002b74:	430a      	orrs	r2, r1
 8002b76:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8002b78:	2003      	movs	r0, #3
 8002b7a:	f000 f809 	bl	8002b90 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002b7e:	f7ff fe37 	bl	80027f0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002b82:	2300      	movs	r3, #0
}
 8002b84:	0018      	movs	r0, r3
 8002b86:	46bd      	mov	sp, r7
 8002b88:	bd80      	pop	{r7, pc}
 8002b8a:	46c0      	nop			; (mov r8, r8)
 8002b8c:	40022000 	.word	0x40022000

08002b90 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b90:	b590      	push	{r4, r7, lr}
 8002b92:	b083      	sub	sp, #12
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002b98:	4b14      	ldr	r3, [pc, #80]	; (8002bec <HAL_InitTick+0x5c>)
 8002b9a:	681c      	ldr	r4, [r3, #0]
 8002b9c:	4b14      	ldr	r3, [pc, #80]	; (8002bf0 <HAL_InitTick+0x60>)
 8002b9e:	781b      	ldrb	r3, [r3, #0]
 8002ba0:	0019      	movs	r1, r3
 8002ba2:	23fa      	movs	r3, #250	; 0xfa
 8002ba4:	0098      	lsls	r0, r3, #2
 8002ba6:	f7fd facb 	bl	8000140 <__udivsi3>
 8002baa:	0003      	movs	r3, r0
 8002bac:	0019      	movs	r1, r3
 8002bae:	0020      	movs	r0, r4
 8002bb0:	f7fd fac6 	bl	8000140 <__udivsi3>
 8002bb4:	0003      	movs	r3, r0
 8002bb6:	0018      	movs	r0, r3
 8002bb8:	f000 fccf 	bl	800355a <HAL_SYSTICK_Config>
 8002bbc:	1e03      	subs	r3, r0, #0
 8002bbe:	d001      	beq.n	8002bc4 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8002bc0:	2301      	movs	r3, #1
 8002bc2:	e00f      	b.n	8002be4 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	2b03      	cmp	r3, #3
 8002bc8:	d80b      	bhi.n	8002be2 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002bca:	6879      	ldr	r1, [r7, #4]
 8002bcc:	2301      	movs	r3, #1
 8002bce:	425b      	negs	r3, r3
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	0018      	movs	r0, r3
 8002bd4:	f000 fcac 	bl	8003530 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002bd8:	4b06      	ldr	r3, [pc, #24]	; (8002bf4 <HAL_InitTick+0x64>)
 8002bda:	687a      	ldr	r2, [r7, #4]
 8002bdc:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8002bde:	2300      	movs	r3, #0
 8002be0:	e000      	b.n	8002be4 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8002be2:	2301      	movs	r3, #1
}
 8002be4:	0018      	movs	r0, r3
 8002be6:	46bd      	mov	sp, r7
 8002be8:	b003      	add	sp, #12
 8002bea:	bd90      	pop	{r4, r7, pc}
 8002bec:	20000000 	.word	0x20000000
 8002bf0:	20000008 	.word	0x20000008
 8002bf4:	20000004 	.word	0x20000004

08002bf8 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002bf8:	b580      	push	{r7, lr}
 8002bfa:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002bfc:	4b05      	ldr	r3, [pc, #20]	; (8002c14 <HAL_IncTick+0x1c>)
 8002bfe:	781b      	ldrb	r3, [r3, #0]
 8002c00:	001a      	movs	r2, r3
 8002c02:	4b05      	ldr	r3, [pc, #20]	; (8002c18 <HAL_IncTick+0x20>)
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	18d2      	adds	r2, r2, r3
 8002c08:	4b03      	ldr	r3, [pc, #12]	; (8002c18 <HAL_IncTick+0x20>)
 8002c0a:	601a      	str	r2, [r3, #0]
}
 8002c0c:	46c0      	nop			; (mov r8, r8)
 8002c0e:	46bd      	mov	sp, r7
 8002c10:	bd80      	pop	{r7, pc}
 8002c12:	46c0      	nop			; (mov r8, r8)
 8002c14:	20000008 	.word	0x20000008
 8002c18:	200002c0 	.word	0x200002c0

08002c1c <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002c1c:	b580      	push	{r7, lr}
 8002c1e:	af00      	add	r7, sp, #0
  return uwTick;
 8002c20:	4b02      	ldr	r3, [pc, #8]	; (8002c2c <HAL_GetTick+0x10>)
 8002c22:	681b      	ldr	r3, [r3, #0]
}
 8002c24:	0018      	movs	r0, r3
 8002c26:	46bd      	mov	sp, r7
 8002c28:	bd80      	pop	{r7, pc}
 8002c2a:	46c0      	nop			; (mov r8, r8)
 8002c2c:	200002c0 	.word	0x200002c0

08002c30 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b084      	sub	sp, #16
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002c38:	f7ff fff0 	bl	8002c1c <HAL_GetTick>
 8002c3c:	0003      	movs	r3, r0
 8002c3e:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002c44:	68fb      	ldr	r3, [r7, #12]
 8002c46:	3301      	adds	r3, #1
 8002c48:	d005      	beq.n	8002c56 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002c4a:	4b0a      	ldr	r3, [pc, #40]	; (8002c74 <HAL_Delay+0x44>)
 8002c4c:	781b      	ldrb	r3, [r3, #0]
 8002c4e:	001a      	movs	r2, r3
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	189b      	adds	r3, r3, r2
 8002c54:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002c56:	46c0      	nop			; (mov r8, r8)
 8002c58:	f7ff ffe0 	bl	8002c1c <HAL_GetTick>
 8002c5c:	0002      	movs	r2, r0
 8002c5e:	68bb      	ldr	r3, [r7, #8]
 8002c60:	1ad3      	subs	r3, r2, r3
 8002c62:	68fa      	ldr	r2, [r7, #12]
 8002c64:	429a      	cmp	r2, r3
 8002c66:	d8f7      	bhi.n	8002c58 <HAL_Delay+0x28>
  {
  }
}
 8002c68:	46c0      	nop			; (mov r8, r8)
 8002c6a:	46c0      	nop			; (mov r8, r8)
 8002c6c:	46bd      	mov	sp, r7
 8002c6e:	b004      	add	sp, #16
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	46c0      	nop			; (mov r8, r8)
 8002c74:	20000008 	.word	0x20000008

08002c78 <HAL_ADC_Init>:
  *         of structure "ADC_InitTypeDef".
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002c78:	b580      	push	{r7, lr}
 8002c7a:	b084      	sub	sp, #16
 8002c7c:	af00      	add	r7, sp, #0
 8002c7e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002c80:	230f      	movs	r3, #15
 8002c82:	18fb      	adds	r3, r7, r3
 8002c84:	2200      	movs	r2, #0
 8002c86:	701a      	strb	r2, [r3, #0]
  uint32_t tmpCFGR1 = 0U;
 8002c88:	2300      	movs	r3, #0
 8002c8a:	60bb      	str	r3, [r7, #8]

  /* Check ADC handle */
  if(hadc == NULL)
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	2b00      	cmp	r3, #0
 8002c90:	d101      	bne.n	8002c96 <HAL_ADC_Init+0x1e>
  {
    return HAL_ERROR;
 8002c92:	2301      	movs	r3, #1
 8002c94:	e125      	b.n	8002ee2 <HAL_ADC_Init+0x26a>
  /* Refer to header of this file for more details on clock enabling procedure*/
  
  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d10a      	bne.n	8002cb4 <HAL_ADC_Init+0x3c>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	2200      	movs	r2, #0
 8002ca2:	63da      	str	r2, [r3, #60]	; 0x3c
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	2234      	movs	r2, #52	; 0x34
 8002ca8:	2100      	movs	r1, #0
 8002caa:	5499      	strb	r1, [r3, r2]
    
    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	0018      	movs	r0, r3
 8002cb0:	f7ff fdc2 	bl	8002838 <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */ 
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cb8:	2210      	movs	r2, #16
 8002cba:	4013      	ands	r3, r2
 8002cbc:	d000      	beq.n	8002cc0 <HAL_ADC_Init+0x48>
 8002cbe:	e103      	b.n	8002ec8 <HAL_ADC_Init+0x250>
 8002cc0:	230f      	movs	r3, #15
 8002cc2:	18fb      	adds	r3, r7, r3
 8002cc4:	781b      	ldrb	r3, [r3, #0]
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d000      	beq.n	8002ccc <HAL_ADC_Init+0x54>
 8002cca:	e0fd      	b.n	8002ec8 <HAL_ADC_Init+0x250>
      (tmp_hal_status == HAL_OK)                                &&
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	689b      	ldr	r3, [r3, #8]
 8002cd2:	2204      	movs	r2, #4
 8002cd4:	4013      	ands	r3, r2
      (tmp_hal_status == HAL_OK)                                &&
 8002cd6:	d000      	beq.n	8002cda <HAL_ADC_Init+0x62>
 8002cd8:	e0f6      	b.n	8002ec8 <HAL_ADC_Init+0x250>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cde:	4a83      	ldr	r2, [pc, #524]	; (8002eec <HAL_ADC_Init+0x274>)
 8002ce0:	4013      	ands	r3, r2
 8002ce2:	2202      	movs	r2, #2
 8002ce4:	431a      	orrs	r2, r3
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	639a      	str	r2, [r3, #56]	; 0x38
    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - ADC clock mode                                                      */
    /*  - ADC clock prescaler                                                 */
    /*  - ADC resolution                                                      */
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	689b      	ldr	r3, [r3, #8]
 8002cf0:	2203      	movs	r2, #3
 8002cf2:	4013      	ands	r3, r2
 8002cf4:	2b01      	cmp	r3, #1
 8002cf6:	d112      	bne.n	8002d1e <HAL_ADC_Init+0xa6>
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	2201      	movs	r2, #1
 8002d00:	4013      	ands	r3, r2
 8002d02:	2b01      	cmp	r3, #1
 8002d04:	d009      	beq.n	8002d1a <HAL_ADC_Init+0xa2>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	68da      	ldr	r2, [r3, #12]
 8002d0c:	2380      	movs	r3, #128	; 0x80
 8002d0e:	021b      	lsls	r3, r3, #8
 8002d10:	401a      	ands	r2, r3
 8002d12:	2380      	movs	r3, #128	; 0x80
 8002d14:	021b      	lsls	r3, r3, #8
 8002d16:	429a      	cmp	r2, r3
 8002d18:	d101      	bne.n	8002d1e <HAL_ADC_Init+0xa6>
 8002d1a:	2301      	movs	r3, #1
 8002d1c:	e000      	b.n	8002d20 <HAL_ADC_Init+0xa8>
 8002d1e:	2300      	movs	r3, #0
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	d116      	bne.n	8002d52 <HAL_ADC_Init+0xda>
      /* parameters):                                                         */
      /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
      /*     (set into HAL_ADC_ConfigChannel() )                              */
     
      /* Configuration of ADC resolution                                      */
      MODIFY_REG(hadc->Instance->CFGR1,
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	68db      	ldr	r3, [r3, #12]
 8002d2a:	2218      	movs	r2, #24
 8002d2c:	4393      	bics	r3, r2
 8002d2e:	0019      	movs	r1, r3
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	689a      	ldr	r2, [r3, #8]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	430a      	orrs	r2, r1
 8002d3a:	60da      	str	r2, [r3, #12]
                 ADC_CFGR1_RES        ,
                 hadc->Init.Resolution );
      
      /* Configuration of ADC clock mode: clock source AHB or HSI with        */
      /* selectable prescaler                                                 */
      MODIFY_REG(hadc->Instance->CFGR2    ,
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	691b      	ldr	r3, [r3, #16]
 8002d42:	009b      	lsls	r3, r3, #2
 8002d44:	0899      	lsrs	r1, r3, #2
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	685a      	ldr	r2, [r3, #4]
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	430a      	orrs	r2, r1
 8002d50:	611a      	str	r2, [r3, #16]
    /*  - external trigger polarity                                           */
    /*  - data alignment                                                      */
    /*  - resolution                                                          */
    /*  - scan direction                                                      */
    /*  - DMA continuous request                                              */
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	68da      	ldr	r2, [r3, #12]
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	4964      	ldr	r1, [pc, #400]	; (8002ef0 <HAL_ADC_Init+0x278>)
 8002d5e:	400a      	ands	r2, r1
 8002d60:	60da      	str	r2, [r3, #12]
                                ADC_CFGR1_EXTEN   |
                                ADC_CFGR1_ALIGN   |
                                ADC_CFGR1_SCANDIR |
                                ADC_CFGR1_DMACFG   );

    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	7e1b      	ldrb	r3, [r3, #24]
 8002d66:	039a      	lsls	r2, r3, #14
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	7e5b      	ldrb	r3, [r3, #25]
 8002d6c:	03db      	lsls	r3, r3, #15
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002d6e:	431a      	orrs	r2, r3
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	7e9b      	ldrb	r3, [r3, #26]
 8002d74:	035b      	lsls	r3, r3, #13
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002d76:	431a      	orrs	r2, r3
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d7c:	2b01      	cmp	r3, #1
 8002d7e:	d002      	beq.n	8002d86 <HAL_ADC_Init+0x10e>
 8002d80:	2380      	movs	r3, #128	; 0x80
 8002d82:	015b      	lsls	r3, r3, #5
 8002d84:	e000      	b.n	8002d88 <HAL_ADC_Init+0x110>
 8002d86:	2300      	movs	r3, #0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002d88:	431a      	orrs	r2, r3
                 hadc->Init.DataAlign                                             |
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	68db      	ldr	r3, [r3, #12]
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002d8e:	431a      	orrs	r2, r3
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	691b      	ldr	r3, [r3, #16]
 8002d94:	2b02      	cmp	r3, #2
 8002d96:	d101      	bne.n	8002d9c <HAL_ADC_Init+0x124>
 8002d98:	2304      	movs	r3, #4
 8002d9a:	e000      	b.n	8002d9e <HAL_ADC_Init+0x126>
 8002d9c:	2300      	movs	r3, #0
                 hadc->Init.DataAlign                                             |
 8002d9e:	431a      	orrs	r2, r3
                 ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	2124      	movs	r1, #36	; 0x24
 8002da4:	5c5b      	ldrb	r3, [r3, r1]
 8002da6:	005b      	lsls	r3, r3, #1
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002da8:	4313      	orrs	r3, r2
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002daa:	68ba      	ldr	r2, [r7, #8]
 8002dac:	4313      	orrs	r3, r2
 8002dae:	60bb      	str	r3, [r7, #8]
    
    /* Enable discontinuous mode only if continuous mode is disabled */
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	7edb      	ldrb	r3, [r3, #27]
 8002db4:	2b01      	cmp	r3, #1
 8002db6:	d115      	bne.n	8002de4 <HAL_ADC_Init+0x16c>
    {
      if (hadc->Init.ContinuousConvMode == DISABLE)
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	7e9b      	ldrb	r3, [r3, #26]
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d105      	bne.n	8002dcc <HAL_ADC_Init+0x154>
      {
        /* Enable the selected ADC group regular discontinuous mode */
        tmpCFGR1 |= ADC_CFGR1_DISCEN;
 8002dc0:	68bb      	ldr	r3, [r7, #8]
 8002dc2:	2280      	movs	r2, #128	; 0x80
 8002dc4:	0252      	lsls	r2, r2, #9
 8002dc6:	4313      	orrs	r3, r2
 8002dc8:	60bb      	str	r3, [r7, #8]
 8002dca:	e00b      	b.n	8002de4 <HAL_ADC_Init+0x16c>
        /* ADC regular group discontinuous was intended to be enabled,        */
        /* but ADC regular group modes continuous and sequencer discontinuous */
        /* cannot be enabled simultaneously.                                  */
        
        /* Update ADC state machine to error */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002dd0:	2220      	movs	r2, #32
 8002dd2:	431a      	orrs	r2, r3
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	639a      	str	r2, [r3, #56]	; 0x38
        
        /* Set ADC error code to ADC IP internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002ddc:	2201      	movs	r2, #1
 8002dde:	431a      	orrs	r2, r3
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	63da      	str	r2, [r3, #60]	; 0x3c
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	69da      	ldr	r2, [r3, #28]
 8002de8:	23c2      	movs	r3, #194	; 0xc2
 8002dea:	33ff      	adds	r3, #255	; 0xff
 8002dec:	429a      	cmp	r2, r3
 8002dee:	d007      	beq.n	8002e00 <HAL_ADC_Init+0x188>
    {
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	69da      	ldr	r2, [r3, #28]
                    hadc->Init.ExternalTrigConvEdge );
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	6a1b      	ldr	r3, [r3, #32]
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002df8:	4313      	orrs	r3, r2
 8002dfa:	68ba      	ldr	r2, [r7, #8]
 8002dfc:	4313      	orrs	r3, r2
 8002dfe:	60bb      	str	r3, [r7, #8]
    }
    
    /* Update ADC configuration register with previous settings */
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	68d9      	ldr	r1, [r3, #12]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	68ba      	ldr	r2, [r7, #8]
 8002e0c:	430a      	orrs	r2, r1
 8002e0e:	60da      	str	r2, [r3, #12]
    /* Management of parameters "SamplingTimeCommon" and "SamplingTime"       */
    /* (obsolete): sampling time set in this function if parameter            */
    /*  "SamplingTimeCommon" has been set to a valid sampling time.           */
    /* Otherwise, sampling time is set into ADC channel initialization        */
    /* structure with parameter "SamplingTime" (obsolete).                    */
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002e14:	2380      	movs	r3, #128	; 0x80
 8002e16:	055b      	lsls	r3, r3, #21
 8002e18:	429a      	cmp	r2, r3
 8002e1a:	d01b      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e20:	2b01      	cmp	r3, #1
 8002e22:	d017      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e28:	2b02      	cmp	r3, #2
 8002e2a:	d013      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e30:	2b03      	cmp	r3, #3
 8002e32:	d00f      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e38:	2b04      	cmp	r3, #4
 8002e3a:	d00b      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e40:	2b05      	cmp	r3, #5
 8002e42:	d007      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e48:	2b06      	cmp	r3, #6
 8002e4a:	d003      	beq.n	8002e54 <HAL_ADC_Init+0x1dc>
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e50:	2b07      	cmp	r3, #7
 8002e52:	d112      	bne.n	8002e7a <HAL_ADC_Init+0x202>
    {
      /* Channel sampling time configuration */
      /* Clear the old sample time */
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	695a      	ldr	r2, [r3, #20]
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	2107      	movs	r1, #7
 8002e60:	438a      	bics	r2, r1
 8002e62:	615a      	str	r2, [r3, #20]
      
      /* Set the new sample time */
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	6959      	ldr	r1, [r3, #20]
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e6e:	2207      	movs	r2, #7
 8002e70:	401a      	ands	r2, r3
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	430a      	orrs	r2, r1
 8002e78:	615a      	str	r2, [r3, #20]
    /* Check back that ADC registers have effectively been configured to      */
    /* ensure of no potential problem of ADC core IP clocking.                */
    /* Check through register CFGR1 (excluding analog watchdog configuration: */
    /* set into separate dedicated function, and bits of ADC resolution set   */
    /* out of temporary variable 'tmpCFGR1').                                 */
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	68db      	ldr	r3, [r3, #12]
 8002e80:	4a1c      	ldr	r2, [pc, #112]	; (8002ef4 <HAL_ADC_Init+0x27c>)
 8002e82:	4013      	ands	r3, r2
 8002e84:	68ba      	ldr	r2, [r7, #8]
 8002e86:	429a      	cmp	r2, r3
 8002e88:	d10b      	bne.n	8002ea2 <HAL_ADC_Init+0x22a>
         == tmpCFGR1)
    {
      /* Set ADC error code to none */
      ADC_CLEAR_ERRORCODE(hadc);
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	63da      	str	r2, [r3, #60]	; 0x3c
      
      /* Set the ADC state */
      ADC_STATE_CLR_SET(hadc->State,
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e94:	2203      	movs	r2, #3
 8002e96:	4393      	bics	r3, r2
 8002e98:	2201      	movs	r2, #1
 8002e9a:	431a      	orrs	r2, r3
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	639a      	str	r2, [r3, #56]	; 0x38
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002ea0:	e01c      	b.n	8002edc <HAL_ADC_Init+0x264>
                        HAL_ADC_STATE_READY);
    }
    else
    {
      /* Update ADC state machine to error */
      ADC_STATE_CLR_SET(hadc->State,
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ea6:	2212      	movs	r2, #18
 8002ea8:	4393      	bics	r3, r2
 8002eaa:	2210      	movs	r2, #16
 8002eac:	431a      	orrs	r2, r3
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	639a      	str	r2, [r3, #56]	; 0x38
                        HAL_ADC_STATE_BUSY_INTERNAL,
                        HAL_ADC_STATE_ERROR_INTERNAL);
      
      /* Set ADC error code to ADC IP internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002eb6:	2201      	movs	r2, #1
 8002eb8:	431a      	orrs	r2, r3
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	63da      	str	r2, [r3, #60]	; 0x3c
      
      tmp_hal_status = HAL_ERROR;
 8002ebe:	230f      	movs	r3, #15
 8002ec0:	18fb      	adds	r3, r7, r3
 8002ec2:	2201      	movs	r2, #1
 8002ec4:	701a      	strb	r2, [r3, #0]
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002ec6:	e009      	b.n	8002edc <HAL_ADC_Init+0x264>
  
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ecc:	2210      	movs	r2, #16
 8002ece:	431a      	orrs	r2, r3
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	639a      	str	r2, [r3, #56]	; 0x38
        
    tmp_hal_status = HAL_ERROR;
 8002ed4:	230f      	movs	r3, #15
 8002ed6:	18fb      	adds	r3, r7, r3
 8002ed8:	2201      	movs	r2, #1
 8002eda:	701a      	strb	r2, [r3, #0]
  }
  
  /* Return function status */
  return tmp_hal_status;
 8002edc:	230f      	movs	r3, #15
 8002ede:	18fb      	adds	r3, r7, r3
 8002ee0:	781b      	ldrb	r3, [r3, #0]
}
 8002ee2:	0018      	movs	r0, r3
 8002ee4:	46bd      	mov	sp, r7
 8002ee6:	b004      	add	sp, #16
 8002ee8:	bd80      	pop	{r7, pc}
 8002eea:	46c0      	nop			; (mov r8, r8)
 8002eec:	fffffefd 	.word	0xfffffefd
 8002ef0:	fffe0219 	.word	0xfffe0219
 8002ef4:	833fffe7 	.word	0x833fffe7

08002ef8 <HAL_ADC_Start>:
  *         Interruptions enabled in this function: None.
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8002ef8:	b590      	push	{r4, r7, lr}
 8002efa:	b085      	sub	sp, #20
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002f00:	230f      	movs	r3, #15
 8002f02:	18fb      	adds	r3, r7, r3
 8002f04:	2200      	movs	r2, #0
 8002f06:	701a      	strb	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Perform ADC enable and conversion start if no conversion is on going */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	689b      	ldr	r3, [r3, #8]
 8002f0e:	2204      	movs	r2, #4
 8002f10:	4013      	ands	r3, r2
 8002f12:	d138      	bne.n	8002f86 <HAL_ADC_Start+0x8e>
  {
    /* Process locked */
    __HAL_LOCK(hadc);
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	2234      	movs	r2, #52	; 0x34
 8002f18:	5c9b      	ldrb	r3, [r3, r2]
 8002f1a:	2b01      	cmp	r3, #1
 8002f1c:	d101      	bne.n	8002f22 <HAL_ADC_Start+0x2a>
 8002f1e:	2302      	movs	r3, #2
 8002f20:	e038      	b.n	8002f94 <HAL_ADC_Start+0x9c>
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	2234      	movs	r2, #52	; 0x34
 8002f26:	2101      	movs	r1, #1
 8002f28:	5499      	strb	r1, [r3, r2]
      
    /* Enable the ADC peripheral */
    /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
    /* performed automatically by hardware.                                   */
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	7e5b      	ldrb	r3, [r3, #25]
 8002f2e:	2b01      	cmp	r3, #1
 8002f30:	d007      	beq.n	8002f42 <HAL_ADC_Start+0x4a>
    {
      tmp_hal_status = ADC_Enable(hadc);
 8002f32:	230f      	movs	r3, #15
 8002f34:	18fc      	adds	r4, r7, r3
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	0018      	movs	r0, r3
 8002f3a:	f000 f9e3 	bl	8003304 <ADC_Enable>
 8002f3e:	0003      	movs	r3, r0
 8002f40:	7023      	strb	r3, [r4, #0]
    }
    
    /* Start conversion if ADC is effectively enabled */
    if (tmp_hal_status == HAL_OK)
 8002f42:	230f      	movs	r3, #15
 8002f44:	18fb      	adds	r3, r7, r3
 8002f46:	781b      	ldrb	r3, [r3, #0]
 8002f48:	2b00      	cmp	r3, #0
 8002f4a:	d120      	bne.n	8002f8e <HAL_ADC_Start+0x96>
    {
      /* Set ADC state                                                        */
      /* - Clear state bitfield related to regular group conversion results   */
      /* - Set state bitfield related to regular operation                    */
      ADC_STATE_CLR_SET(hadc->State,
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f50:	4a12      	ldr	r2, [pc, #72]	; (8002f9c <HAL_ADC_Start+0xa4>)
 8002f52:	4013      	ands	r3, r2
 8002f54:	2280      	movs	r2, #128	; 0x80
 8002f56:	0052      	lsls	r2, r2, #1
 8002f58:	431a      	orrs	r2, r3
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	639a      	str	r2, [r3, #56]	; 0x38
                        HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC_STATE_REG_EOSMP,
                        HAL_ADC_STATE_REG_BUSY);
      
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	2200      	movs	r2, #0
 8002f62:	63da      	str	r2, [r3, #60]	; 0x3c
      
      /* Process unlocked */
      /* Unlock before starting ADC conversions: in case of potential         */
      /* interruption, to let the process to ADC IRQ Handler.                 */
      __HAL_UNLOCK(hadc);
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	2234      	movs	r2, #52	; 0x34
 8002f68:	2100      	movs	r1, #0
 8002f6a:	5499      	strb	r1, [r3, r2]
      
      /* Clear regular group conversion flag and overrun flag */
      /* (To ensure of no unknown state from potential previous ADC           */
      /* operations)                                                          */
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	221c      	movs	r2, #28
 8002f72:	601a      	str	r2, [r3, #0]
      
      /* Enable conversion of regular group.                                  */
      /* If software start has been selected, conversion starts immediately.  */
      /* If external trigger has been selected, conversion will start at next */
      /* trigger event.                                                       */
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	689a      	ldr	r2, [r3, #8]
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	2104      	movs	r1, #4
 8002f80:	430a      	orrs	r2, r1
 8002f82:	609a      	str	r2, [r3, #8]
 8002f84:	e003      	b.n	8002f8e <HAL_ADC_Start+0x96>
    }
  }
  else
  {
    tmp_hal_status = HAL_BUSY;
 8002f86:	230f      	movs	r3, #15
 8002f88:	18fb      	adds	r3, r7, r3
 8002f8a:	2202      	movs	r2, #2
 8002f8c:	701a      	strb	r2, [r3, #0]
  }
  
  /* Return function status */
  return tmp_hal_status;
 8002f8e:	230f      	movs	r3, #15
 8002f90:	18fb      	adds	r3, r7, r3
 8002f92:	781b      	ldrb	r3, [r3, #0]
}
 8002f94:	0018      	movs	r0, r3
 8002f96:	46bd      	mov	sp, r7
 8002f98:	b005      	add	sp, #20
 8002f9a:	bd90      	pop	{r4, r7, pc}
 8002f9c:	fffff0fe 	.word	0xfffff0fe

08002fa0 <HAL_ADC_PollForConversion>:
  * @param  hadc ADC handle
  * @param  Timeout Timeout value in millisecond.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8002fa0:	b580      	push	{r7, lr}
 8002fa2:	b084      	sub	sp, #16
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
 8002fa8:	6039      	str	r1, [r7, #0]
 
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* If end of conversion selected to end of sequence */
  if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	695b      	ldr	r3, [r3, #20]
 8002fae:	2b08      	cmp	r3, #8
 8002fb0:	d102      	bne.n	8002fb8 <HAL_ADC_PollForConversion+0x18>
  {
    tmp_Flag_EOC = ADC_FLAG_EOS;
 8002fb2:	2308      	movs	r3, #8
 8002fb4:	60fb      	str	r3, [r7, #12]
 8002fb6:	e014      	b.n	8002fe2 <HAL_ADC_PollForConversion+0x42>
    /* each conversion:                                                       */
    /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
    /* several ranks and polling for end of each conversion.                  */
    /* For code simplicity sake, this particular case is generalized to       */
    /* ADC configured in DMA mode and and polling for end of each conversion. */
    if (HAL_IS_BIT_SET(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN))
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	68db      	ldr	r3, [r3, #12]
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	4013      	ands	r3, r2
 8002fc2:	2b01      	cmp	r3, #1
 8002fc4:	d10b      	bne.n	8002fde <HAL_ADC_PollForConversion+0x3e>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002fca:	2220      	movs	r2, #32
 8002fcc:	431a      	orrs	r2, r3
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	639a      	str	r2, [r3, #56]	; 0x38
      
      /* Process unlocked */
      __HAL_UNLOCK(hadc);
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	2234      	movs	r2, #52	; 0x34
 8002fd6:	2100      	movs	r1, #0
 8002fd8:	5499      	strb	r1, [r3, r2]
      
      return HAL_ERROR;
 8002fda:	2301      	movs	r3, #1
 8002fdc:	e071      	b.n	80030c2 <HAL_ADC_PollForConversion+0x122>
    }
    else
    {
      tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 8002fde:	230c      	movs	r3, #12
 8002fe0:	60fb      	str	r3, [r7, #12]
    }
  }
  
  /* Get tick count */
  tickstart = HAL_GetTick();
 8002fe2:	f7ff fe1b 	bl	8002c1c <HAL_GetTick>
 8002fe6:	0003      	movs	r3, r0
 8002fe8:	60bb      	str	r3, [r7, #8]
  
  /* Wait until End of Conversion flag is raised */
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8002fea:	e01f      	b.n	800302c <HAL_ADC_PollForConversion+0x8c>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8002fec:	683b      	ldr	r3, [r7, #0]
 8002fee:	3301      	adds	r3, #1
 8002ff0:	d01c      	beq.n	800302c <HAL_ADC_PollForConversion+0x8c>
    {
      if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	d007      	beq.n	8003008 <HAL_ADC_PollForConversion+0x68>
 8002ff8:	f7ff fe10 	bl	8002c1c <HAL_GetTick>
 8002ffc:	0002      	movs	r2, r0
 8002ffe:	68bb      	ldr	r3, [r7, #8]
 8003000:	1ad3      	subs	r3, r2, r3
 8003002:	683a      	ldr	r2, [r7, #0]
 8003004:	429a      	cmp	r2, r3
 8003006:	d211      	bcs.n	800302c <HAL_ADC_PollForConversion+0x8c>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	681b      	ldr	r3, [r3, #0]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	68fa      	ldr	r2, [r7, #12]
 8003010:	4013      	ands	r3, r2
 8003012:	d10b      	bne.n	800302c <HAL_ADC_PollForConversion+0x8c>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003018:	2204      	movs	r2, #4
 800301a:	431a      	orrs	r2, r3
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	639a      	str	r2, [r3, #56]	; 0x38

          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	2234      	movs	r2, #52	; 0x34
 8003024:	2100      	movs	r1, #0
 8003026:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8003028:	2303      	movs	r3, #3
 800302a:	e04a      	b.n	80030c2 <HAL_ADC_PollForConversion+0x122>
  while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	68fa      	ldr	r2, [r7, #12]
 8003034:	4013      	ands	r3, r2
 8003036:	d0d9      	beq.n	8002fec <HAL_ADC_PollForConversion+0x4c>
      }
    }
  }
    
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800303c:	2280      	movs	r2, #128	; 0x80
 800303e:	0092      	lsls	r2, r2, #2
 8003040:	431a      	orrs	r2, r3
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	639a      	str	r2, [r3, #56]	; 0x38
  
  /* Determine whether any further conversion upcoming on group regular       */
  /* by external trigger, continuous mode or scan sequence on going.          */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	68da      	ldr	r2, [r3, #12]
 800304c:	23c0      	movs	r3, #192	; 0xc0
 800304e:	011b      	lsls	r3, r3, #4
 8003050:	4013      	ands	r3, r2
 8003052:	d12d      	bne.n	80030b0 <HAL_ADC_PollForConversion+0x110>
     (hadc->Init.ContinuousConvMode == DISABLE)   )
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	7e9b      	ldrb	r3, [r3, #26]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8003058:	2b00      	cmp	r3, #0
 800305a:	d129      	bne.n	80030b0 <HAL_ADC_PollForConversion+0x110>
  {
    /* If End of Sequence is reached, disable interrupts */
    if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	2208      	movs	r2, #8
 8003064:	4013      	ands	r3, r2
 8003066:	2b08      	cmp	r3, #8
 8003068:	d122      	bne.n	80030b0 <HAL_ADC_PollForConversion+0x110>
    {
      /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
      /* ADSTART==0 (no conversion on going)                                  */
      if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	689b      	ldr	r3, [r3, #8]
 8003070:	2204      	movs	r2, #4
 8003072:	4013      	ands	r3, r2
 8003074:	d110      	bne.n	8003098 <HAL_ADC_PollForConversion+0xf8>
      {
        /* Disable ADC end of single conversion interrupt on group regular */
        /* Note: Overrun interrupt was enabled with EOC interrupt in          */
        /* HAL_Start_IT(), but is not disabled here because can be used       */
        /* by overrun IRQ process below.                                      */
        __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	685a      	ldr	r2, [r3, #4]
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	210c      	movs	r1, #12
 8003082:	438a      	bics	r2, r1
 8003084:	605a      	str	r2, [r3, #4]
        
        /* Set ADC state */
        ADC_STATE_CLR_SET(hadc->State,
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800308a:	4a10      	ldr	r2, [pc, #64]	; (80030cc <HAL_ADC_PollForConversion+0x12c>)
 800308c:	4013      	ands	r3, r2
 800308e:	2201      	movs	r2, #1
 8003090:	431a      	orrs	r2, r3
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	639a      	str	r2, [r3, #56]	; 0x38
 8003096:	e00b      	b.n	80030b0 <HAL_ADC_PollForConversion+0x110>
                          HAL_ADC_STATE_READY);
      }
      else
      {
        /* Change ADC state to error state */
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800309c:	2220      	movs	r2, #32
 800309e:	431a      	orrs	r2, r3
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	639a      	str	r2, [r3, #56]	; 0x38
        
        /* Set ADC error code to ADC IP internal error */
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80030a8:	2201      	movs	r2, #1
 80030aa:	431a      	orrs	r2, r3
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	63da      	str	r2, [r3, #60]	; 0x3c
  }
  
  /* Clear end of conversion flag of regular group if low power feature       */
  /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
  /* until data register is read using function HAL_ADC_GetValue().           */
  if (hadc->Init.LowPowerAutoWait == DISABLE)
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	7e1b      	ldrb	r3, [r3, #24]
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d103      	bne.n	80030c0 <HAL_ADC_PollForConversion+0x120>
  {
    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	220c      	movs	r2, #12
 80030be:	601a      	str	r2, [r3, #0]
  }
  
  /* Return ADC state */
  return HAL_OK;
 80030c0:	2300      	movs	r3, #0
}
 80030c2:	0018      	movs	r0, r3
 80030c4:	46bd      	mov	sp, r7
 80030c6:	b004      	add	sp, #16
 80030c8:	bd80      	pop	{r7, pc}
 80030ca:	46c0      	nop			; (mov r8, r8)
 80030cc:	fffffefe 	.word	0xfffffefe

080030d0 <HAL_ADC_GetValue>:
  *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
  * @param  hadc ADC handle
  * @retval ADC group regular conversion data
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{
 80030d0:	b580      	push	{r7, lr}
 80030d2:	b082      	sub	sp, #8
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]

  /* Note: EOC flag is not cleared here by software because automatically     */
  /*       cleared by hardware when reading register DR.                      */
  
  /* Return ADC converted value */ 
  return hadc->Instance->DR;
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 80030de:	0018      	movs	r0, r3
 80030e0:	46bd      	mov	sp, r7
 80030e2:	b002      	add	sp, #8
 80030e4:	bd80      	pop	{r7, pc}
	...

080030e8 <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel for regular group.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 80030e8:	b580      	push	{r7, lr}
 80030ea:	b084      	sub	sp, #16
 80030ec:	af00      	add	r7, sp, #0
 80030ee:	6078      	str	r0, [r7, #4]
 80030f0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80030f2:	230f      	movs	r3, #15
 80030f4:	18fb      	adds	r3, r7, r3
 80030f6:	2200      	movs	r2, #0
 80030f8:	701a      	strb	r2, [r3, #0]
  __IO uint32_t wait_loop_index = 0U;
 80030fa:	2300      	movs	r3, #0
 80030fc:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_RANK(sConfig->Rank));
  
  if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003102:	2380      	movs	r3, #128	; 0x80
 8003104:	055b      	lsls	r3, r3, #21
 8003106:	429a      	cmp	r2, r3
 8003108:	d011      	beq.n	800312e <HAL_ADC_ConfigChannel+0x46>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800310e:	2b01      	cmp	r3, #1
 8003110:	d00d      	beq.n	800312e <HAL_ADC_ConfigChannel+0x46>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003116:	2b02      	cmp	r3, #2
 8003118:	d009      	beq.n	800312e <HAL_ADC_ConfigChannel+0x46>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800311e:	2b03      	cmp	r3, #3
 8003120:	d005      	beq.n	800312e <HAL_ADC_ConfigChannel+0x46>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003126:	2b04      	cmp	r3, #4
 8003128:	d001      	beq.n	800312e <HAL_ADC_ConfigChannel+0x46>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  {
    assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  }
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2234      	movs	r2, #52	; 0x34
 8003132:	5c9b      	ldrb	r3, [r3, r2]
 8003134:	2b01      	cmp	r3, #1
 8003136:	d101      	bne.n	800313c <HAL_ADC_ConfigChannel+0x54>
 8003138:	2302      	movs	r3, #2
 800313a:	e0d0      	b.n	80032de <HAL_ADC_ConfigChannel+0x1f6>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	2234      	movs	r2, #52	; 0x34
 8003140:	2101      	movs	r1, #1
 8003142:	5499      	strb	r1, [r3, r2]
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel sampling time                                                 */
  /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	689b      	ldr	r3, [r3, #8]
 800314a:	2204      	movs	r2, #4
 800314c:	4013      	ands	r3, r2
 800314e:	d000      	beq.n	8003152 <HAL_ADC_ConfigChannel+0x6a>
 8003150:	e0b4      	b.n	80032bc <HAL_ADC_ConfigChannel+0x1d4>
  {
    /* Configure channel: depending on rank setting, add it or remove it from */
    /* ADC conversion sequencer.                                              */
    if (sConfig->Rank != ADC_RANK_NONE)
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	685b      	ldr	r3, [r3, #4]
 8003156:	4a64      	ldr	r2, [pc, #400]	; (80032e8 <HAL_ADC_ConfigChannel+0x200>)
 8003158:	4293      	cmp	r3, r2
 800315a:	d100      	bne.n	800315e <HAL_ADC_ConfigChannel+0x76>
 800315c:	e082      	b.n	8003264 <HAL_ADC_ConfigChannel+0x17c>
    {
      /* Regular sequence configuration */
      /* Set the channel selection register from the selected channel */
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8003164:	683b      	ldr	r3, [r7, #0]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	2201      	movs	r2, #1
 800316a:	409a      	lsls	r2, r3
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	430a      	orrs	r2, r1
 8003172:	629a      	str	r2, [r3, #40]	; 0x28
      /* Channel sampling time configuration */
      /* Management of parameters "SamplingTimeCommon" and "SamplingTime"     */
      /* (obsolete): sampling time set in this function with                  */
      /* parameter "SamplingTime" (obsolete) only if not already set into     */
      /* ADC initialization structure with parameter "SamplingTimeCommon".    */
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003178:	2380      	movs	r3, #128	; 0x80
 800317a:	055b      	lsls	r3, r3, #21
 800317c:	429a      	cmp	r2, r3
 800317e:	d037      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003184:	2b01      	cmp	r3, #1
 8003186:	d033      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800318c:	2b02      	cmp	r3, #2
 800318e:	d02f      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003194:	2b03      	cmp	r3, #3
 8003196:	d02b      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800319c:	2b04      	cmp	r3, #4
 800319e:	d027      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031a4:	2b05      	cmp	r3, #5
 80031a6:	d023      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031ac:	2b06      	cmp	r3, #6
 80031ae:	d01f      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031b4:	2b07      	cmp	r3, #7
 80031b6:	d01b      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
      {
        /* Modify sampling time if needed (not needed in case of recurrence */
        /* for several channels programmed consecutively into the sequencer)  */
        if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
 80031b8:	683b      	ldr	r3, [r7, #0]
 80031ba:	689a      	ldr	r2, [r3, #8]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	695b      	ldr	r3, [r3, #20]
 80031c2:	2107      	movs	r1, #7
 80031c4:	400b      	ands	r3, r1
 80031c6:	429a      	cmp	r2, r3
 80031c8:	d012      	beq.n	80031f0 <HAL_ADC_ConfigChannel+0x108>
        {
          /* Channel sampling time configuration */
          /* Clear the old sample time */
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	695a      	ldr	r2, [r3, #20]
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	2107      	movs	r1, #7
 80031d6:	438a      	bics	r2, r1
 80031d8:	615a      	str	r2, [r3, #20]
          
          /* Set the new sample time */
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	6959      	ldr	r1, [r3, #20]
 80031e0:	683b      	ldr	r3, [r7, #0]
 80031e2:	689b      	ldr	r3, [r3, #8]
 80031e4:	2207      	movs	r2, #7
 80031e6:	401a      	ands	r2, r3
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	430a      	orrs	r2, r1
 80031ee:	615a      	str	r2, [r3, #20]
      /* internal measurement paths enable: If internal channel selected,     */
      /* enable dedicated internal buffers and path.                          */
      /* Note: these internal measurement paths can be disabled using         */
      /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
      /*       channel configuration parameter "Rank".                        */
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 80031f0:	683b      	ldr	r3, [r7, #0]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	2b10      	cmp	r3, #16
 80031f6:	d007      	beq.n	8003208 <HAL_ADC_ConfigChannel+0x120>
 80031f8:	683b      	ldr	r3, [r7, #0]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	2b11      	cmp	r3, #17
 80031fe:	d003      	beq.n	8003208 <HAL_ADC_ConfigChannel+0x120>
 8003200:	683b      	ldr	r3, [r7, #0]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	2b12      	cmp	r3, #18
 8003206:	d163      	bne.n	80032d0 <HAL_ADC_ConfigChannel+0x1e8>
      {
        /* If Channel_16 is selected, enable Temp. sensor measurement path. */
        /* If Channel_17 is selected, enable VREFINT measurement path. */
        /* If Channel_18 is selected, enable VBAT measurement path. */
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8003208:	4b38      	ldr	r3, [pc, #224]	; (80032ec <HAL_ADC_ConfigChannel+0x204>)
 800320a:	6819      	ldr	r1, [r3, #0]
 800320c:	683b      	ldr	r3, [r7, #0]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	2b10      	cmp	r3, #16
 8003212:	d009      	beq.n	8003228 <HAL_ADC_ConfigChannel+0x140>
 8003214:	683b      	ldr	r3, [r7, #0]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	2b11      	cmp	r3, #17
 800321a:	d102      	bne.n	8003222 <HAL_ADC_ConfigChannel+0x13a>
 800321c:	2380      	movs	r3, #128	; 0x80
 800321e:	03db      	lsls	r3, r3, #15
 8003220:	e004      	b.n	800322c <HAL_ADC_ConfigChannel+0x144>
 8003222:	2380      	movs	r3, #128	; 0x80
 8003224:	045b      	lsls	r3, r3, #17
 8003226:	e001      	b.n	800322c <HAL_ADC_ConfigChannel+0x144>
 8003228:	2380      	movs	r3, #128	; 0x80
 800322a:	041b      	lsls	r3, r3, #16
 800322c:	4a2f      	ldr	r2, [pc, #188]	; (80032ec <HAL_ADC_ConfigChannel+0x204>)
 800322e:	430b      	orrs	r3, r1
 8003230:	6013      	str	r3, [r2, #0]
        
        /* If Temp. sensor is selected, wait for stabilization delay */
        if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8003232:	683b      	ldr	r3, [r7, #0]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	2b10      	cmp	r3, #16
 8003238:	d14a      	bne.n	80032d0 <HAL_ADC_ConfigChannel+0x1e8>
        {
          /* Delay for temperature sensor stabilization time */
          /* Compute number of CPU cycles to wait for */
          wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800323a:	4b2d      	ldr	r3, [pc, #180]	; (80032f0 <HAL_ADC_ConfigChannel+0x208>)
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	492d      	ldr	r1, [pc, #180]	; (80032f4 <HAL_ADC_ConfigChannel+0x20c>)
 8003240:	0018      	movs	r0, r3
 8003242:	f7fc ff7d 	bl	8000140 <__udivsi3>
 8003246:	0003      	movs	r3, r0
 8003248:	001a      	movs	r2, r3
 800324a:	0013      	movs	r3, r2
 800324c:	009b      	lsls	r3, r3, #2
 800324e:	189b      	adds	r3, r3, r2
 8003250:	005b      	lsls	r3, r3, #1
 8003252:	60bb      	str	r3, [r7, #8]
          while(wait_loop_index != 0U)
 8003254:	e002      	b.n	800325c <HAL_ADC_ConfigChannel+0x174>
          {
            wait_loop_index--;
 8003256:	68bb      	ldr	r3, [r7, #8]
 8003258:	3b01      	subs	r3, #1
 800325a:	60bb      	str	r3, [r7, #8]
          while(wait_loop_index != 0U)
 800325c:	68bb      	ldr	r3, [r7, #8]
 800325e:	2b00      	cmp	r3, #0
 8003260:	d1f9      	bne.n	8003256 <HAL_ADC_ConfigChannel+0x16e>
 8003262:	e035      	b.n	80032d0 <HAL_ADC_ConfigChannel+0x1e8>
    }
    else
    {
      /* Regular sequence configuration */
      /* Reset the channel selection register from the selected channel */
      hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800326a:	683b      	ldr	r3, [r7, #0]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	2101      	movs	r1, #1
 8003270:	4099      	lsls	r1, r3
 8003272:	000b      	movs	r3, r1
 8003274:	43d9      	mvns	r1, r3
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	400a      	ands	r2, r1
 800327c:	629a      	str	r2, [r3, #40]	; 0x28
      
      /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
      /* internal measurement paths disable: If internal channel selected,    */
      /* disable dedicated internal buffers and path.                         */
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 800327e:	683b      	ldr	r3, [r7, #0]
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	2b10      	cmp	r3, #16
 8003284:	d007      	beq.n	8003296 <HAL_ADC_ConfigChannel+0x1ae>
 8003286:	683b      	ldr	r3, [r7, #0]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	2b11      	cmp	r3, #17
 800328c:	d003      	beq.n	8003296 <HAL_ADC_ConfigChannel+0x1ae>
 800328e:	683b      	ldr	r3, [r7, #0]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	2b12      	cmp	r3, #18
 8003294:	d11c      	bne.n	80032d0 <HAL_ADC_ConfigChannel+0x1e8>
      {
        /* If Channel_16 is selected, disable Temp. sensor measurement path. */
        /* If Channel_17 is selected, disable VREFINT measurement path. */
        /* If Channel_18 is selected, disable VBAT measurement path. */
        ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8003296:	4b15      	ldr	r3, [pc, #84]	; (80032ec <HAL_ADC_ConfigChannel+0x204>)
 8003298:	6819      	ldr	r1, [r3, #0]
 800329a:	683b      	ldr	r3, [r7, #0]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	2b10      	cmp	r3, #16
 80032a0:	d007      	beq.n	80032b2 <HAL_ADC_ConfigChannel+0x1ca>
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	2b11      	cmp	r3, #17
 80032a8:	d101      	bne.n	80032ae <HAL_ADC_ConfigChannel+0x1c6>
 80032aa:	4b13      	ldr	r3, [pc, #76]	; (80032f8 <HAL_ADC_ConfigChannel+0x210>)
 80032ac:	e002      	b.n	80032b4 <HAL_ADC_ConfigChannel+0x1cc>
 80032ae:	4b13      	ldr	r3, [pc, #76]	; (80032fc <HAL_ADC_ConfigChannel+0x214>)
 80032b0:	e000      	b.n	80032b4 <HAL_ADC_ConfigChannel+0x1cc>
 80032b2:	4b13      	ldr	r3, [pc, #76]	; (8003300 <HAL_ADC_ConfigChannel+0x218>)
 80032b4:	4a0d      	ldr	r2, [pc, #52]	; (80032ec <HAL_ADC_ConfigChannel+0x204>)
 80032b6:	400b      	ands	r3, r1
 80032b8:	6013      	str	r3, [r2, #0]
 80032ba:	e009      	b.n	80032d0 <HAL_ADC_ConfigChannel+0x1e8>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80032c0:	2220      	movs	r2, #32
 80032c2:	431a      	orrs	r2, r3
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	639a      	str	r2, [r3, #56]	; 0x38
    
    tmp_hal_status = HAL_ERROR;
 80032c8:	230f      	movs	r3, #15
 80032ca:	18fb      	adds	r3, r7, r3
 80032cc:	2201      	movs	r2, #1
 80032ce:	701a      	strb	r2, [r3, #0]
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	2234      	movs	r2, #52	; 0x34
 80032d4:	2100      	movs	r1, #0
 80032d6:	5499      	strb	r1, [r3, r2]
  
  /* Return function status */
  return tmp_hal_status;
 80032d8:	230f      	movs	r3, #15
 80032da:	18fb      	adds	r3, r7, r3
 80032dc:	781b      	ldrb	r3, [r3, #0]
}
 80032de:	0018      	movs	r0, r3
 80032e0:	46bd      	mov	sp, r7
 80032e2:	b004      	add	sp, #16
 80032e4:	bd80      	pop	{r7, pc}
 80032e6:	46c0      	nop			; (mov r8, r8)
 80032e8:	00001001 	.word	0x00001001
 80032ec:	40012708 	.word	0x40012708
 80032f0:	20000000 	.word	0x20000000
 80032f4:	000f4240 	.word	0x000f4240
 80032f8:	ffbfffff 	.word	0xffbfffff
 80032fc:	feffffff 	.word	0xfeffffff
 8003300:	ff7fffff 	.word	0xff7fffff

08003304 <ADC_Enable>:
  *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
  * @param  hadc ADC handle
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
{
 8003304:	b580      	push	{r7, lr}
 8003306:	b084      	sub	sp, #16
 8003308:	af00      	add	r7, sp, #0
 800330a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 800330c:	2300      	movs	r3, #0
 800330e:	60fb      	str	r3, [r7, #12]
  __IO uint32_t wait_loop_index = 0U;
 8003310:	2300      	movs	r3, #0
 8003312:	60bb      	str	r3, [r7, #8]
  
  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	689b      	ldr	r3, [r3, #8]
 800331a:	2203      	movs	r2, #3
 800331c:	4013      	ands	r3, r2
 800331e:	2b01      	cmp	r3, #1
 8003320:	d112      	bne.n	8003348 <ADC_Enable+0x44>
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	2201      	movs	r2, #1
 800332a:	4013      	ands	r3, r2
 800332c:	2b01      	cmp	r3, #1
 800332e:	d009      	beq.n	8003344 <ADC_Enable+0x40>
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	68da      	ldr	r2, [r3, #12]
 8003336:	2380      	movs	r3, #128	; 0x80
 8003338:	021b      	lsls	r3, r3, #8
 800333a:	401a      	ands	r2, r3
 800333c:	2380      	movs	r3, #128	; 0x80
 800333e:	021b      	lsls	r3, r3, #8
 8003340:	429a      	cmp	r2, r3
 8003342:	d101      	bne.n	8003348 <ADC_Enable+0x44>
 8003344:	2301      	movs	r3, #1
 8003346:	e000      	b.n	800334a <ADC_Enable+0x46>
 8003348:	2300      	movs	r3, #0
 800334a:	2b00      	cmp	r3, #0
 800334c:	d152      	bne.n	80033f4 <ADC_Enable+0xf0>
  {
    /* Check if conditions to enable the ADC are fulfilled */
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	689b      	ldr	r3, [r3, #8]
 8003354:	4a2a      	ldr	r2, [pc, #168]	; (8003400 <ADC_Enable+0xfc>)
 8003356:	4013      	ands	r3, r2
 8003358:	d00d      	beq.n	8003376 <ADC_Enable+0x72>
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800335e:	2210      	movs	r2, #16
 8003360:	431a      	orrs	r2, r3
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	639a      	str	r2, [r3, #56]	; 0x38
    
      /* Set ADC error code to ADC IP internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800336a:	2201      	movs	r2, #1
 800336c:	431a      	orrs	r2, r3
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	63da      	str	r2, [r3, #60]	; 0x3c
      
      return HAL_ERROR;
 8003372:	2301      	movs	r3, #1
 8003374:	e03f      	b.n	80033f6 <ADC_Enable+0xf2>
    }
    
    /* Enable the ADC peripheral */
    __HAL_ADC_ENABLE(hadc);
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	689a      	ldr	r2, [r3, #8]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	2101      	movs	r1, #1
 8003382:	430a      	orrs	r2, r1
 8003384:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8003386:	4b1f      	ldr	r3, [pc, #124]	; (8003404 <ADC_Enable+0x100>)
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	491f      	ldr	r1, [pc, #124]	; (8003408 <ADC_Enable+0x104>)
 800338c:	0018      	movs	r0, r3
 800338e:	f7fc fed7 	bl	8000140 <__udivsi3>
 8003392:	0003      	movs	r3, r0
 8003394:	60bb      	str	r3, [r7, #8]
    while(wait_loop_index != 0U)
 8003396:	e002      	b.n	800339e <ADC_Enable+0x9a>
    {
      wait_loop_index--;
 8003398:	68bb      	ldr	r3, [r7, #8]
 800339a:	3b01      	subs	r3, #1
 800339c:	60bb      	str	r3, [r7, #8]
    while(wait_loop_index != 0U)
 800339e:	68bb      	ldr	r3, [r7, #8]
 80033a0:	2b00      	cmp	r3, #0
 80033a2:	d1f9      	bne.n	8003398 <ADC_Enable+0x94>
    }

    /* Get tick count */
    tickstart = HAL_GetTick();
 80033a4:	f7ff fc3a 	bl	8002c1c <HAL_GetTick>
 80033a8:	0003      	movs	r3, r0
 80033aa:	60fb      	str	r3, [r7, #12]
    
    /* Wait for ADC effectively enabled */
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 80033ac:	e01b      	b.n	80033e6 <ADC_Enable+0xe2>
    {
      if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 80033ae:	f7ff fc35 	bl	8002c1c <HAL_GetTick>
 80033b2:	0002      	movs	r2, r0
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	1ad3      	subs	r3, r2, r3
 80033b8:	2b02      	cmp	r3, #2
 80033ba:	d914      	bls.n	80033e6 <ADC_Enable+0xe2>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	681b      	ldr	r3, [r3, #0]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	2201      	movs	r2, #1
 80033c4:	4013      	ands	r3, r2
 80033c6:	2b01      	cmp	r3, #1
 80033c8:	d00d      	beq.n	80033e6 <ADC_Enable+0xe2>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80033ce:	2210      	movs	r2, #16
 80033d0:	431a      	orrs	r2, r3
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	639a      	str	r2, [r3, #56]	; 0x38

          /* Set ADC error code to ADC IP internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033da:	2201      	movs	r2, #1
 80033dc:	431a      	orrs	r2, r3
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	63da      	str	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 80033e2:	2301      	movs	r3, #1
 80033e4:	e007      	b.n	80033f6 <ADC_Enable+0xf2>
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	2201      	movs	r2, #1
 80033ee:	4013      	ands	r3, r2
 80033f0:	2b01      	cmp	r3, #1
 80033f2:	d1dc      	bne.n	80033ae <ADC_Enable+0xaa>
      }
    }
  }
   
  /* Return HAL status */
  return HAL_OK;
 80033f4:	2300      	movs	r3, #0
}
 80033f6:	0018      	movs	r0, r3
 80033f8:	46bd      	mov	sp, r7
 80033fa:	b004      	add	sp, #16
 80033fc:	bd80      	pop	{r7, pc}
 80033fe:	46c0      	nop			; (mov r8, r8)
 8003400:	80000017 	.word	0x80000017
 8003404:	20000000 	.word	0x20000000
 8003408:	000f4240 	.word	0x000f4240

0800340c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800340c:	b590      	push	{r4, r7, lr}
 800340e:	b083      	sub	sp, #12
 8003410:	af00      	add	r7, sp, #0
 8003412:	0002      	movs	r2, r0
 8003414:	6039      	str	r1, [r7, #0]
 8003416:	1dfb      	adds	r3, r7, #7
 8003418:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800341a:	1dfb      	adds	r3, r7, #7
 800341c:	781b      	ldrb	r3, [r3, #0]
 800341e:	2b7f      	cmp	r3, #127	; 0x7f
 8003420:	d828      	bhi.n	8003474 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003422:	4a2f      	ldr	r2, [pc, #188]	; (80034e0 <__NVIC_SetPriority+0xd4>)
 8003424:	1dfb      	adds	r3, r7, #7
 8003426:	781b      	ldrb	r3, [r3, #0]
 8003428:	b25b      	sxtb	r3, r3
 800342a:	089b      	lsrs	r3, r3, #2
 800342c:	33c0      	adds	r3, #192	; 0xc0
 800342e:	009b      	lsls	r3, r3, #2
 8003430:	589b      	ldr	r3, [r3, r2]
 8003432:	1dfa      	adds	r2, r7, #7
 8003434:	7812      	ldrb	r2, [r2, #0]
 8003436:	0011      	movs	r1, r2
 8003438:	2203      	movs	r2, #3
 800343a:	400a      	ands	r2, r1
 800343c:	00d2      	lsls	r2, r2, #3
 800343e:	21ff      	movs	r1, #255	; 0xff
 8003440:	4091      	lsls	r1, r2
 8003442:	000a      	movs	r2, r1
 8003444:	43d2      	mvns	r2, r2
 8003446:	401a      	ands	r2, r3
 8003448:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800344a:	683b      	ldr	r3, [r7, #0]
 800344c:	019b      	lsls	r3, r3, #6
 800344e:	22ff      	movs	r2, #255	; 0xff
 8003450:	401a      	ands	r2, r3
 8003452:	1dfb      	adds	r3, r7, #7
 8003454:	781b      	ldrb	r3, [r3, #0]
 8003456:	0018      	movs	r0, r3
 8003458:	2303      	movs	r3, #3
 800345a:	4003      	ands	r3, r0
 800345c:	00db      	lsls	r3, r3, #3
 800345e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003460:	481f      	ldr	r0, [pc, #124]	; (80034e0 <__NVIC_SetPriority+0xd4>)
 8003462:	1dfb      	adds	r3, r7, #7
 8003464:	781b      	ldrb	r3, [r3, #0]
 8003466:	b25b      	sxtb	r3, r3
 8003468:	089b      	lsrs	r3, r3, #2
 800346a:	430a      	orrs	r2, r1
 800346c:	33c0      	adds	r3, #192	; 0xc0
 800346e:	009b      	lsls	r3, r3, #2
 8003470:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003472:	e031      	b.n	80034d8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003474:	4a1b      	ldr	r2, [pc, #108]	; (80034e4 <__NVIC_SetPriority+0xd8>)
 8003476:	1dfb      	adds	r3, r7, #7
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	0019      	movs	r1, r3
 800347c:	230f      	movs	r3, #15
 800347e:	400b      	ands	r3, r1
 8003480:	3b08      	subs	r3, #8
 8003482:	089b      	lsrs	r3, r3, #2
 8003484:	3306      	adds	r3, #6
 8003486:	009b      	lsls	r3, r3, #2
 8003488:	18d3      	adds	r3, r2, r3
 800348a:	3304      	adds	r3, #4
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	1dfa      	adds	r2, r7, #7
 8003490:	7812      	ldrb	r2, [r2, #0]
 8003492:	0011      	movs	r1, r2
 8003494:	2203      	movs	r2, #3
 8003496:	400a      	ands	r2, r1
 8003498:	00d2      	lsls	r2, r2, #3
 800349a:	21ff      	movs	r1, #255	; 0xff
 800349c:	4091      	lsls	r1, r2
 800349e:	000a      	movs	r2, r1
 80034a0:	43d2      	mvns	r2, r2
 80034a2:	401a      	ands	r2, r3
 80034a4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80034a6:	683b      	ldr	r3, [r7, #0]
 80034a8:	019b      	lsls	r3, r3, #6
 80034aa:	22ff      	movs	r2, #255	; 0xff
 80034ac:	401a      	ands	r2, r3
 80034ae:	1dfb      	adds	r3, r7, #7
 80034b0:	781b      	ldrb	r3, [r3, #0]
 80034b2:	0018      	movs	r0, r3
 80034b4:	2303      	movs	r3, #3
 80034b6:	4003      	ands	r3, r0
 80034b8:	00db      	lsls	r3, r3, #3
 80034ba:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80034bc:	4809      	ldr	r0, [pc, #36]	; (80034e4 <__NVIC_SetPriority+0xd8>)
 80034be:	1dfb      	adds	r3, r7, #7
 80034c0:	781b      	ldrb	r3, [r3, #0]
 80034c2:	001c      	movs	r4, r3
 80034c4:	230f      	movs	r3, #15
 80034c6:	4023      	ands	r3, r4
 80034c8:	3b08      	subs	r3, #8
 80034ca:	089b      	lsrs	r3, r3, #2
 80034cc:	430a      	orrs	r2, r1
 80034ce:	3306      	adds	r3, #6
 80034d0:	009b      	lsls	r3, r3, #2
 80034d2:	18c3      	adds	r3, r0, r3
 80034d4:	3304      	adds	r3, #4
 80034d6:	601a      	str	r2, [r3, #0]
}
 80034d8:	46c0      	nop			; (mov r8, r8)
 80034da:	46bd      	mov	sp, r7
 80034dc:	b003      	add	sp, #12
 80034de:	bd90      	pop	{r4, r7, pc}
 80034e0:	e000e100 	.word	0xe000e100
 80034e4:	e000ed00 	.word	0xe000ed00

080034e8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80034e8:	b580      	push	{r7, lr}
 80034ea:	b082      	sub	sp, #8
 80034ec:	af00      	add	r7, sp, #0
 80034ee:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	1e5a      	subs	r2, r3, #1
 80034f4:	2380      	movs	r3, #128	; 0x80
 80034f6:	045b      	lsls	r3, r3, #17
 80034f8:	429a      	cmp	r2, r3
 80034fa:	d301      	bcc.n	8003500 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 80034fc:	2301      	movs	r3, #1
 80034fe:	e010      	b.n	8003522 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003500:	4b0a      	ldr	r3, [pc, #40]	; (800352c <SysTick_Config+0x44>)
 8003502:	687a      	ldr	r2, [r7, #4]
 8003504:	3a01      	subs	r2, #1
 8003506:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003508:	2301      	movs	r3, #1
 800350a:	425b      	negs	r3, r3
 800350c:	2103      	movs	r1, #3
 800350e:	0018      	movs	r0, r3
 8003510:	f7ff ff7c 	bl	800340c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003514:	4b05      	ldr	r3, [pc, #20]	; (800352c <SysTick_Config+0x44>)
 8003516:	2200      	movs	r2, #0
 8003518:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800351a:	4b04      	ldr	r3, [pc, #16]	; (800352c <SysTick_Config+0x44>)
 800351c:	2207      	movs	r2, #7
 800351e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003520:	2300      	movs	r3, #0
}
 8003522:	0018      	movs	r0, r3
 8003524:	46bd      	mov	sp, r7
 8003526:	b002      	add	sp, #8
 8003528:	bd80      	pop	{r7, pc}
 800352a:	46c0      	nop			; (mov r8, r8)
 800352c:	e000e010 	.word	0xe000e010

08003530 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003530:	b580      	push	{r7, lr}
 8003532:	b084      	sub	sp, #16
 8003534:	af00      	add	r7, sp, #0
 8003536:	60b9      	str	r1, [r7, #8]
 8003538:	607a      	str	r2, [r7, #4]
 800353a:	210f      	movs	r1, #15
 800353c:	187b      	adds	r3, r7, r1
 800353e:	1c02      	adds	r2, r0, #0
 8003540:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003542:	68ba      	ldr	r2, [r7, #8]
 8003544:	187b      	adds	r3, r7, r1
 8003546:	781b      	ldrb	r3, [r3, #0]
 8003548:	b25b      	sxtb	r3, r3
 800354a:	0011      	movs	r1, r2
 800354c:	0018      	movs	r0, r3
 800354e:	f7ff ff5d 	bl	800340c <__NVIC_SetPriority>
}
 8003552:	46c0      	nop			; (mov r8, r8)
 8003554:	46bd      	mov	sp, r7
 8003556:	b004      	add	sp, #16
 8003558:	bd80      	pop	{r7, pc}

0800355a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800355a:	b580      	push	{r7, lr}
 800355c:	b082      	sub	sp, #8
 800355e:	af00      	add	r7, sp, #0
 8003560:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	0018      	movs	r0, r3
 8003566:	f7ff ffbf 	bl	80034e8 <SysTick_Config>
 800356a:	0003      	movs	r3, r0
}
 800356c:	0018      	movs	r0, r3
 800356e:	46bd      	mov	sp, r7
 8003570:	b002      	add	sp, #8
 8003572:	bd80      	pop	{r7, pc}

08003574 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003574:	b580      	push	{r7, lr}
 8003576:	b086      	sub	sp, #24
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800357e:	2300      	movs	r3, #0
 8003580:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003582:	e14f      	b.n	8003824 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	2101      	movs	r1, #1
 800358a:	697a      	ldr	r2, [r7, #20]
 800358c:	4091      	lsls	r1, r2
 800358e:	000a      	movs	r2, r1
 8003590:	4013      	ands	r3, r2
 8003592:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	2b00      	cmp	r3, #0
 8003598:	d100      	bne.n	800359c <HAL_GPIO_Init+0x28>
 800359a:	e140      	b.n	800381e <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800359c:	683b      	ldr	r3, [r7, #0]
 800359e:	685b      	ldr	r3, [r3, #4]
 80035a0:	2203      	movs	r2, #3
 80035a2:	4013      	ands	r3, r2
 80035a4:	2b01      	cmp	r3, #1
 80035a6:	d005      	beq.n	80035b4 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80035a8:	683b      	ldr	r3, [r7, #0]
 80035aa:	685b      	ldr	r3, [r3, #4]
 80035ac:	2203      	movs	r2, #3
 80035ae:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80035b0:	2b02      	cmp	r3, #2
 80035b2:	d130      	bne.n	8003616 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	689b      	ldr	r3, [r3, #8]
 80035b8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80035ba:	697b      	ldr	r3, [r7, #20]
 80035bc:	005b      	lsls	r3, r3, #1
 80035be:	2203      	movs	r2, #3
 80035c0:	409a      	lsls	r2, r3
 80035c2:	0013      	movs	r3, r2
 80035c4:	43da      	mvns	r2, r3
 80035c6:	693b      	ldr	r3, [r7, #16]
 80035c8:	4013      	ands	r3, r2
 80035ca:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80035cc:	683b      	ldr	r3, [r7, #0]
 80035ce:	68da      	ldr	r2, [r3, #12]
 80035d0:	697b      	ldr	r3, [r7, #20]
 80035d2:	005b      	lsls	r3, r3, #1
 80035d4:	409a      	lsls	r2, r3
 80035d6:	0013      	movs	r3, r2
 80035d8:	693a      	ldr	r2, [r7, #16]
 80035da:	4313      	orrs	r3, r2
 80035dc:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	693a      	ldr	r2, [r7, #16]
 80035e2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	685b      	ldr	r3, [r3, #4]
 80035e8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80035ea:	2201      	movs	r2, #1
 80035ec:	697b      	ldr	r3, [r7, #20]
 80035ee:	409a      	lsls	r2, r3
 80035f0:	0013      	movs	r3, r2
 80035f2:	43da      	mvns	r2, r3
 80035f4:	693b      	ldr	r3, [r7, #16]
 80035f6:	4013      	ands	r3, r2
 80035f8:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80035fa:	683b      	ldr	r3, [r7, #0]
 80035fc:	685b      	ldr	r3, [r3, #4]
 80035fe:	091b      	lsrs	r3, r3, #4
 8003600:	2201      	movs	r2, #1
 8003602:	401a      	ands	r2, r3
 8003604:	697b      	ldr	r3, [r7, #20]
 8003606:	409a      	lsls	r2, r3
 8003608:	0013      	movs	r3, r2
 800360a:	693a      	ldr	r2, [r7, #16]
 800360c:	4313      	orrs	r3, r2
 800360e:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	693a      	ldr	r2, [r7, #16]
 8003614:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003616:	683b      	ldr	r3, [r7, #0]
 8003618:	685b      	ldr	r3, [r3, #4]
 800361a:	2203      	movs	r2, #3
 800361c:	4013      	ands	r3, r2
 800361e:	2b03      	cmp	r3, #3
 8003620:	d017      	beq.n	8003652 <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	68db      	ldr	r3, [r3, #12]
 8003626:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003628:	697b      	ldr	r3, [r7, #20]
 800362a:	005b      	lsls	r3, r3, #1
 800362c:	2203      	movs	r2, #3
 800362e:	409a      	lsls	r2, r3
 8003630:	0013      	movs	r3, r2
 8003632:	43da      	mvns	r2, r3
 8003634:	693b      	ldr	r3, [r7, #16]
 8003636:	4013      	ands	r3, r2
 8003638:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 800363a:	683b      	ldr	r3, [r7, #0]
 800363c:	689a      	ldr	r2, [r3, #8]
 800363e:	697b      	ldr	r3, [r7, #20]
 8003640:	005b      	lsls	r3, r3, #1
 8003642:	409a      	lsls	r2, r3
 8003644:	0013      	movs	r3, r2
 8003646:	693a      	ldr	r2, [r7, #16]
 8003648:	4313      	orrs	r3, r2
 800364a:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	693a      	ldr	r2, [r7, #16]
 8003650:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003652:	683b      	ldr	r3, [r7, #0]
 8003654:	685b      	ldr	r3, [r3, #4]
 8003656:	2203      	movs	r2, #3
 8003658:	4013      	ands	r3, r2
 800365a:	2b02      	cmp	r3, #2
 800365c:	d123      	bne.n	80036a6 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 800365e:	697b      	ldr	r3, [r7, #20]
 8003660:	08da      	lsrs	r2, r3, #3
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	3208      	adds	r2, #8
 8003666:	0092      	lsls	r2, r2, #2
 8003668:	58d3      	ldr	r3, [r2, r3]
 800366a:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800366c:	697b      	ldr	r3, [r7, #20]
 800366e:	2207      	movs	r2, #7
 8003670:	4013      	ands	r3, r2
 8003672:	009b      	lsls	r3, r3, #2
 8003674:	220f      	movs	r2, #15
 8003676:	409a      	lsls	r2, r3
 8003678:	0013      	movs	r3, r2
 800367a:	43da      	mvns	r2, r3
 800367c:	693b      	ldr	r3, [r7, #16]
 800367e:	4013      	ands	r3, r2
 8003680:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003682:	683b      	ldr	r3, [r7, #0]
 8003684:	691a      	ldr	r2, [r3, #16]
 8003686:	697b      	ldr	r3, [r7, #20]
 8003688:	2107      	movs	r1, #7
 800368a:	400b      	ands	r3, r1
 800368c:	009b      	lsls	r3, r3, #2
 800368e:	409a      	lsls	r2, r3
 8003690:	0013      	movs	r3, r2
 8003692:	693a      	ldr	r2, [r7, #16]
 8003694:	4313      	orrs	r3, r2
 8003696:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003698:	697b      	ldr	r3, [r7, #20]
 800369a:	08da      	lsrs	r2, r3, #3
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	3208      	adds	r2, #8
 80036a0:	0092      	lsls	r2, r2, #2
 80036a2:	6939      	ldr	r1, [r7, #16]
 80036a4:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80036ac:	697b      	ldr	r3, [r7, #20]
 80036ae:	005b      	lsls	r3, r3, #1
 80036b0:	2203      	movs	r2, #3
 80036b2:	409a      	lsls	r2, r3
 80036b4:	0013      	movs	r3, r2
 80036b6:	43da      	mvns	r2, r3
 80036b8:	693b      	ldr	r3, [r7, #16]
 80036ba:	4013      	ands	r3, r2
 80036bc:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	685b      	ldr	r3, [r3, #4]
 80036c2:	2203      	movs	r2, #3
 80036c4:	401a      	ands	r2, r3
 80036c6:	697b      	ldr	r3, [r7, #20]
 80036c8:	005b      	lsls	r3, r3, #1
 80036ca:	409a      	lsls	r2, r3
 80036cc:	0013      	movs	r3, r2
 80036ce:	693a      	ldr	r2, [r7, #16]
 80036d0:	4313      	orrs	r3, r2
 80036d2:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	693a      	ldr	r2, [r7, #16]
 80036d8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80036da:	683b      	ldr	r3, [r7, #0]
 80036dc:	685a      	ldr	r2, [r3, #4]
 80036de:	23c0      	movs	r3, #192	; 0xc0
 80036e0:	029b      	lsls	r3, r3, #10
 80036e2:	4013      	ands	r3, r2
 80036e4:	d100      	bne.n	80036e8 <HAL_GPIO_Init+0x174>
 80036e6:	e09a      	b.n	800381e <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80036e8:	4b54      	ldr	r3, [pc, #336]	; (800383c <HAL_GPIO_Init+0x2c8>)
 80036ea:	699a      	ldr	r2, [r3, #24]
 80036ec:	4b53      	ldr	r3, [pc, #332]	; (800383c <HAL_GPIO_Init+0x2c8>)
 80036ee:	2101      	movs	r1, #1
 80036f0:	430a      	orrs	r2, r1
 80036f2:	619a      	str	r2, [r3, #24]
 80036f4:	4b51      	ldr	r3, [pc, #324]	; (800383c <HAL_GPIO_Init+0x2c8>)
 80036f6:	699b      	ldr	r3, [r3, #24]
 80036f8:	2201      	movs	r2, #1
 80036fa:	4013      	ands	r3, r2
 80036fc:	60bb      	str	r3, [r7, #8]
 80036fe:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003700:	4a4f      	ldr	r2, [pc, #316]	; (8003840 <HAL_GPIO_Init+0x2cc>)
 8003702:	697b      	ldr	r3, [r7, #20]
 8003704:	089b      	lsrs	r3, r3, #2
 8003706:	3302      	adds	r3, #2
 8003708:	009b      	lsls	r3, r3, #2
 800370a:	589b      	ldr	r3, [r3, r2]
 800370c:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800370e:	697b      	ldr	r3, [r7, #20]
 8003710:	2203      	movs	r2, #3
 8003712:	4013      	ands	r3, r2
 8003714:	009b      	lsls	r3, r3, #2
 8003716:	220f      	movs	r2, #15
 8003718:	409a      	lsls	r2, r3
 800371a:	0013      	movs	r3, r2
 800371c:	43da      	mvns	r2, r3
 800371e:	693b      	ldr	r3, [r7, #16]
 8003720:	4013      	ands	r3, r2
 8003722:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003724:	687a      	ldr	r2, [r7, #4]
 8003726:	2390      	movs	r3, #144	; 0x90
 8003728:	05db      	lsls	r3, r3, #23
 800372a:	429a      	cmp	r2, r3
 800372c:	d013      	beq.n	8003756 <HAL_GPIO_Init+0x1e2>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	4a44      	ldr	r2, [pc, #272]	; (8003844 <HAL_GPIO_Init+0x2d0>)
 8003732:	4293      	cmp	r3, r2
 8003734:	d00d      	beq.n	8003752 <HAL_GPIO_Init+0x1de>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	4a43      	ldr	r2, [pc, #268]	; (8003848 <HAL_GPIO_Init+0x2d4>)
 800373a:	4293      	cmp	r3, r2
 800373c:	d007      	beq.n	800374e <HAL_GPIO_Init+0x1da>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	4a42      	ldr	r2, [pc, #264]	; (800384c <HAL_GPIO_Init+0x2d8>)
 8003742:	4293      	cmp	r3, r2
 8003744:	d101      	bne.n	800374a <HAL_GPIO_Init+0x1d6>
 8003746:	2303      	movs	r3, #3
 8003748:	e006      	b.n	8003758 <HAL_GPIO_Init+0x1e4>
 800374a:	2305      	movs	r3, #5
 800374c:	e004      	b.n	8003758 <HAL_GPIO_Init+0x1e4>
 800374e:	2302      	movs	r3, #2
 8003750:	e002      	b.n	8003758 <HAL_GPIO_Init+0x1e4>
 8003752:	2301      	movs	r3, #1
 8003754:	e000      	b.n	8003758 <HAL_GPIO_Init+0x1e4>
 8003756:	2300      	movs	r3, #0
 8003758:	697a      	ldr	r2, [r7, #20]
 800375a:	2103      	movs	r1, #3
 800375c:	400a      	ands	r2, r1
 800375e:	0092      	lsls	r2, r2, #2
 8003760:	4093      	lsls	r3, r2
 8003762:	693a      	ldr	r2, [r7, #16]
 8003764:	4313      	orrs	r3, r2
 8003766:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003768:	4935      	ldr	r1, [pc, #212]	; (8003840 <HAL_GPIO_Init+0x2cc>)
 800376a:	697b      	ldr	r3, [r7, #20]
 800376c:	089b      	lsrs	r3, r3, #2
 800376e:	3302      	adds	r3, #2
 8003770:	009b      	lsls	r3, r3, #2
 8003772:	693a      	ldr	r2, [r7, #16]
 8003774:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003776:	4b36      	ldr	r3, [pc, #216]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 8003778:	689b      	ldr	r3, [r3, #8]
 800377a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	43da      	mvns	r2, r3
 8003780:	693b      	ldr	r3, [r7, #16]
 8003782:	4013      	ands	r3, r2
 8003784:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8003786:	683b      	ldr	r3, [r7, #0]
 8003788:	685a      	ldr	r2, [r3, #4]
 800378a:	2380      	movs	r3, #128	; 0x80
 800378c:	035b      	lsls	r3, r3, #13
 800378e:	4013      	ands	r3, r2
 8003790:	d003      	beq.n	800379a <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 8003792:	693a      	ldr	r2, [r7, #16]
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	4313      	orrs	r3, r2
 8003798:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 800379a:	4b2d      	ldr	r3, [pc, #180]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 800379c:	693a      	ldr	r2, [r7, #16]
 800379e:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80037a0:	4b2b      	ldr	r3, [pc, #172]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 80037a2:	68db      	ldr	r3, [r3, #12]
 80037a4:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	43da      	mvns	r2, r3
 80037aa:	693b      	ldr	r3, [r7, #16]
 80037ac:	4013      	ands	r3, r2
 80037ae:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80037b0:	683b      	ldr	r3, [r7, #0]
 80037b2:	685a      	ldr	r2, [r3, #4]
 80037b4:	2380      	movs	r3, #128	; 0x80
 80037b6:	039b      	lsls	r3, r3, #14
 80037b8:	4013      	ands	r3, r2
 80037ba:	d003      	beq.n	80037c4 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 80037bc:	693a      	ldr	r2, [r7, #16]
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	4313      	orrs	r3, r2
 80037c2:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80037c4:	4b22      	ldr	r3, [pc, #136]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 80037c6:	693a      	ldr	r2, [r7, #16]
 80037c8:	60da      	str	r2, [r3, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR;
 80037ca:	4b21      	ldr	r3, [pc, #132]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 80037cc:	685b      	ldr	r3, [r3, #4]
 80037ce:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	43da      	mvns	r2, r3
 80037d4:	693b      	ldr	r3, [r7, #16]
 80037d6:	4013      	ands	r3, r2
 80037d8:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80037da:	683b      	ldr	r3, [r7, #0]
 80037dc:	685a      	ldr	r2, [r3, #4]
 80037de:	2380      	movs	r3, #128	; 0x80
 80037e0:	029b      	lsls	r3, r3, #10
 80037e2:	4013      	ands	r3, r2
 80037e4:	d003      	beq.n	80037ee <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 80037e6:	693a      	ldr	r2, [r7, #16]
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	4313      	orrs	r3, r2
 80037ec:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 80037ee:	4b18      	ldr	r3, [pc, #96]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 80037f0:	693a      	ldr	r2, [r7, #16]
 80037f2:	605a      	str	r2, [r3, #4]

        temp = EXTI->IMR;
 80037f4:	4b16      	ldr	r3, [pc, #88]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	43da      	mvns	r2, r3
 80037fe:	693b      	ldr	r3, [r7, #16]
 8003800:	4013      	ands	r3, r2
 8003802:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003804:	683b      	ldr	r3, [r7, #0]
 8003806:	685a      	ldr	r2, [r3, #4]
 8003808:	2380      	movs	r3, #128	; 0x80
 800380a:	025b      	lsls	r3, r3, #9
 800380c:	4013      	ands	r3, r2
 800380e:	d003      	beq.n	8003818 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8003810:	693a      	ldr	r2, [r7, #16]
 8003812:	68fb      	ldr	r3, [r7, #12]
 8003814:	4313      	orrs	r3, r2
 8003816:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003818:	4b0d      	ldr	r3, [pc, #52]	; (8003850 <HAL_GPIO_Init+0x2dc>)
 800381a:	693a      	ldr	r2, [r7, #16]
 800381c:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 800381e:	697b      	ldr	r3, [r7, #20]
 8003820:	3301      	adds	r3, #1
 8003822:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003824:	683b      	ldr	r3, [r7, #0]
 8003826:	681a      	ldr	r2, [r3, #0]
 8003828:	697b      	ldr	r3, [r7, #20]
 800382a:	40da      	lsrs	r2, r3
 800382c:	1e13      	subs	r3, r2, #0
 800382e:	d000      	beq.n	8003832 <HAL_GPIO_Init+0x2be>
 8003830:	e6a8      	b.n	8003584 <HAL_GPIO_Init+0x10>
  } 
}
 8003832:	46c0      	nop			; (mov r8, r8)
 8003834:	46c0      	nop			; (mov r8, r8)
 8003836:	46bd      	mov	sp, r7
 8003838:	b006      	add	sp, #24
 800383a:	bd80      	pop	{r7, pc}
 800383c:	40021000 	.word	0x40021000
 8003840:	40010000 	.word	0x40010000
 8003844:	48000400 	.word	0x48000400
 8003848:	48000800 	.word	0x48000800
 800384c:	48000c00 	.word	0x48000c00
 8003850:	40010400 	.word	0x40010400

08003854 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003854:	b580      	push	{r7, lr}
 8003856:	b088      	sub	sp, #32
 8003858:	af00      	add	r7, sp, #0
 800385a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	2b00      	cmp	r3, #0
 8003860:	d101      	bne.n	8003866 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8003862:	2301      	movs	r3, #1
 8003864:	e301      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	2201      	movs	r2, #1
 800386c:	4013      	ands	r3, r2
 800386e:	d100      	bne.n	8003872 <HAL_RCC_OscConfig+0x1e>
 8003870:	e08d      	b.n	800398e <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003872:	4bc3      	ldr	r3, [pc, #780]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003874:	685b      	ldr	r3, [r3, #4]
 8003876:	220c      	movs	r2, #12
 8003878:	4013      	ands	r3, r2
 800387a:	2b04      	cmp	r3, #4
 800387c:	d00e      	beq.n	800389c <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800387e:	4bc0      	ldr	r3, [pc, #768]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003880:	685b      	ldr	r3, [r3, #4]
 8003882:	220c      	movs	r2, #12
 8003884:	4013      	ands	r3, r2
 8003886:	2b08      	cmp	r3, #8
 8003888:	d116      	bne.n	80038b8 <HAL_RCC_OscConfig+0x64>
 800388a:	4bbd      	ldr	r3, [pc, #756]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800388c:	685a      	ldr	r2, [r3, #4]
 800388e:	2380      	movs	r3, #128	; 0x80
 8003890:	025b      	lsls	r3, r3, #9
 8003892:	401a      	ands	r2, r3
 8003894:	2380      	movs	r3, #128	; 0x80
 8003896:	025b      	lsls	r3, r3, #9
 8003898:	429a      	cmp	r2, r3
 800389a:	d10d      	bne.n	80038b8 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800389c:	4bb8      	ldr	r3, [pc, #736]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800389e:	681a      	ldr	r2, [r3, #0]
 80038a0:	2380      	movs	r3, #128	; 0x80
 80038a2:	029b      	lsls	r3, r3, #10
 80038a4:	4013      	ands	r3, r2
 80038a6:	d100      	bne.n	80038aa <HAL_RCC_OscConfig+0x56>
 80038a8:	e070      	b.n	800398c <HAL_RCC_OscConfig+0x138>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	685b      	ldr	r3, [r3, #4]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d000      	beq.n	80038b4 <HAL_RCC_OscConfig+0x60>
 80038b2:	e06b      	b.n	800398c <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 80038b4:	2301      	movs	r3, #1
 80038b6:	e2d8      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	685b      	ldr	r3, [r3, #4]
 80038bc:	2b01      	cmp	r3, #1
 80038be:	d107      	bne.n	80038d0 <HAL_RCC_OscConfig+0x7c>
 80038c0:	4baf      	ldr	r3, [pc, #700]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038c2:	681a      	ldr	r2, [r3, #0]
 80038c4:	4bae      	ldr	r3, [pc, #696]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038c6:	2180      	movs	r1, #128	; 0x80
 80038c8:	0249      	lsls	r1, r1, #9
 80038ca:	430a      	orrs	r2, r1
 80038cc:	601a      	str	r2, [r3, #0]
 80038ce:	e02f      	b.n	8003930 <HAL_RCC_OscConfig+0xdc>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	685b      	ldr	r3, [r3, #4]
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	d10c      	bne.n	80038f2 <HAL_RCC_OscConfig+0x9e>
 80038d8:	4ba9      	ldr	r3, [pc, #676]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038da:	681a      	ldr	r2, [r3, #0]
 80038dc:	4ba8      	ldr	r3, [pc, #672]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038de:	49a9      	ldr	r1, [pc, #676]	; (8003b84 <HAL_RCC_OscConfig+0x330>)
 80038e0:	400a      	ands	r2, r1
 80038e2:	601a      	str	r2, [r3, #0]
 80038e4:	4ba6      	ldr	r3, [pc, #664]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038e6:	681a      	ldr	r2, [r3, #0]
 80038e8:	4ba5      	ldr	r3, [pc, #660]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038ea:	49a7      	ldr	r1, [pc, #668]	; (8003b88 <HAL_RCC_OscConfig+0x334>)
 80038ec:	400a      	ands	r2, r1
 80038ee:	601a      	str	r2, [r3, #0]
 80038f0:	e01e      	b.n	8003930 <HAL_RCC_OscConfig+0xdc>
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	685b      	ldr	r3, [r3, #4]
 80038f6:	2b05      	cmp	r3, #5
 80038f8:	d10e      	bne.n	8003918 <HAL_RCC_OscConfig+0xc4>
 80038fa:	4ba1      	ldr	r3, [pc, #644]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80038fc:	681a      	ldr	r2, [r3, #0]
 80038fe:	4ba0      	ldr	r3, [pc, #640]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003900:	2180      	movs	r1, #128	; 0x80
 8003902:	02c9      	lsls	r1, r1, #11
 8003904:	430a      	orrs	r2, r1
 8003906:	601a      	str	r2, [r3, #0]
 8003908:	4b9d      	ldr	r3, [pc, #628]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800390a:	681a      	ldr	r2, [r3, #0]
 800390c:	4b9c      	ldr	r3, [pc, #624]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800390e:	2180      	movs	r1, #128	; 0x80
 8003910:	0249      	lsls	r1, r1, #9
 8003912:	430a      	orrs	r2, r1
 8003914:	601a      	str	r2, [r3, #0]
 8003916:	e00b      	b.n	8003930 <HAL_RCC_OscConfig+0xdc>
 8003918:	4b99      	ldr	r3, [pc, #612]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800391a:	681a      	ldr	r2, [r3, #0]
 800391c:	4b98      	ldr	r3, [pc, #608]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800391e:	4999      	ldr	r1, [pc, #612]	; (8003b84 <HAL_RCC_OscConfig+0x330>)
 8003920:	400a      	ands	r2, r1
 8003922:	601a      	str	r2, [r3, #0]
 8003924:	4b96      	ldr	r3, [pc, #600]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003926:	681a      	ldr	r2, [r3, #0]
 8003928:	4b95      	ldr	r3, [pc, #596]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800392a:	4997      	ldr	r1, [pc, #604]	; (8003b88 <HAL_RCC_OscConfig+0x334>)
 800392c:	400a      	ands	r2, r1
 800392e:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	685b      	ldr	r3, [r3, #4]
 8003934:	2b00      	cmp	r3, #0
 8003936:	d014      	beq.n	8003962 <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003938:	f7ff f970 	bl	8002c1c <HAL_GetTick>
 800393c:	0003      	movs	r3, r0
 800393e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003940:	e008      	b.n	8003954 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003942:	f7ff f96b 	bl	8002c1c <HAL_GetTick>
 8003946:	0002      	movs	r2, r0
 8003948:	69bb      	ldr	r3, [r7, #24]
 800394a:	1ad3      	subs	r3, r2, r3
 800394c:	2b64      	cmp	r3, #100	; 0x64
 800394e:	d901      	bls.n	8003954 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8003950:	2303      	movs	r3, #3
 8003952:	e28a      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003954:	4b8a      	ldr	r3, [pc, #552]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003956:	681a      	ldr	r2, [r3, #0]
 8003958:	2380      	movs	r3, #128	; 0x80
 800395a:	029b      	lsls	r3, r3, #10
 800395c:	4013      	ands	r3, r2
 800395e:	d0f0      	beq.n	8003942 <HAL_RCC_OscConfig+0xee>
 8003960:	e015      	b.n	800398e <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003962:	f7ff f95b 	bl	8002c1c <HAL_GetTick>
 8003966:	0003      	movs	r3, r0
 8003968:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800396a:	e008      	b.n	800397e <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800396c:	f7ff f956 	bl	8002c1c <HAL_GetTick>
 8003970:	0002      	movs	r2, r0
 8003972:	69bb      	ldr	r3, [r7, #24]
 8003974:	1ad3      	subs	r3, r2, r3
 8003976:	2b64      	cmp	r3, #100	; 0x64
 8003978:	d901      	bls.n	800397e <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 800397a:	2303      	movs	r3, #3
 800397c:	e275      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800397e:	4b80      	ldr	r3, [pc, #512]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003980:	681a      	ldr	r2, [r3, #0]
 8003982:	2380      	movs	r3, #128	; 0x80
 8003984:	029b      	lsls	r3, r3, #10
 8003986:	4013      	ands	r3, r2
 8003988:	d1f0      	bne.n	800396c <HAL_RCC_OscConfig+0x118>
 800398a:	e000      	b.n	800398e <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800398c:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	2202      	movs	r2, #2
 8003994:	4013      	ands	r3, r2
 8003996:	d100      	bne.n	800399a <HAL_RCC_OscConfig+0x146>
 8003998:	e069      	b.n	8003a6e <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800399a:	4b79      	ldr	r3, [pc, #484]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 800399c:	685b      	ldr	r3, [r3, #4]
 800399e:	220c      	movs	r2, #12
 80039a0:	4013      	ands	r3, r2
 80039a2:	d00b      	beq.n	80039bc <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80039a4:	4b76      	ldr	r3, [pc, #472]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039a6:	685b      	ldr	r3, [r3, #4]
 80039a8:	220c      	movs	r2, #12
 80039aa:	4013      	ands	r3, r2
 80039ac:	2b08      	cmp	r3, #8
 80039ae:	d11c      	bne.n	80039ea <HAL_RCC_OscConfig+0x196>
 80039b0:	4b73      	ldr	r3, [pc, #460]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039b2:	685a      	ldr	r2, [r3, #4]
 80039b4:	2380      	movs	r3, #128	; 0x80
 80039b6:	025b      	lsls	r3, r3, #9
 80039b8:	4013      	ands	r3, r2
 80039ba:	d116      	bne.n	80039ea <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80039bc:	4b70      	ldr	r3, [pc, #448]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	2202      	movs	r2, #2
 80039c2:	4013      	ands	r3, r2
 80039c4:	d005      	beq.n	80039d2 <HAL_RCC_OscConfig+0x17e>
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	68db      	ldr	r3, [r3, #12]
 80039ca:	2b01      	cmp	r3, #1
 80039cc:	d001      	beq.n	80039d2 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 80039ce:	2301      	movs	r3, #1
 80039d0:	e24b      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80039d2:	4b6b      	ldr	r3, [pc, #428]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	22f8      	movs	r2, #248	; 0xf8
 80039d8:	4393      	bics	r3, r2
 80039da:	0019      	movs	r1, r3
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	691b      	ldr	r3, [r3, #16]
 80039e0:	00da      	lsls	r2, r3, #3
 80039e2:	4b67      	ldr	r3, [pc, #412]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039e4:	430a      	orrs	r2, r1
 80039e6:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80039e8:	e041      	b.n	8003a6e <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	68db      	ldr	r3, [r3, #12]
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d024      	beq.n	8003a3c <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80039f2:	4b63      	ldr	r3, [pc, #396]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039f4:	681a      	ldr	r2, [r3, #0]
 80039f6:	4b62      	ldr	r3, [pc, #392]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 80039f8:	2101      	movs	r1, #1
 80039fa:	430a      	orrs	r2, r1
 80039fc:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80039fe:	f7ff f90d 	bl	8002c1c <HAL_GetTick>
 8003a02:	0003      	movs	r3, r0
 8003a04:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003a06:	e008      	b.n	8003a1a <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003a08:	f7ff f908 	bl	8002c1c <HAL_GetTick>
 8003a0c:	0002      	movs	r2, r0
 8003a0e:	69bb      	ldr	r3, [r7, #24]
 8003a10:	1ad3      	subs	r3, r2, r3
 8003a12:	2b02      	cmp	r3, #2
 8003a14:	d901      	bls.n	8003a1a <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8003a16:	2303      	movs	r3, #3
 8003a18:	e227      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003a1a:	4b59      	ldr	r3, [pc, #356]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	2202      	movs	r2, #2
 8003a20:	4013      	ands	r3, r2
 8003a22:	d0f1      	beq.n	8003a08 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003a24:	4b56      	ldr	r3, [pc, #344]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	22f8      	movs	r2, #248	; 0xf8
 8003a2a:	4393      	bics	r3, r2
 8003a2c:	0019      	movs	r1, r3
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	691b      	ldr	r3, [r3, #16]
 8003a32:	00da      	lsls	r2, r3, #3
 8003a34:	4b52      	ldr	r3, [pc, #328]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a36:	430a      	orrs	r2, r1
 8003a38:	601a      	str	r2, [r3, #0]
 8003a3a:	e018      	b.n	8003a6e <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8003a3c:	4b50      	ldr	r3, [pc, #320]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a3e:	681a      	ldr	r2, [r3, #0]
 8003a40:	4b4f      	ldr	r3, [pc, #316]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a42:	2101      	movs	r1, #1
 8003a44:	438a      	bics	r2, r1
 8003a46:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a48:	f7ff f8e8 	bl	8002c1c <HAL_GetTick>
 8003a4c:	0003      	movs	r3, r0
 8003a4e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003a50:	e008      	b.n	8003a64 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003a52:	f7ff f8e3 	bl	8002c1c <HAL_GetTick>
 8003a56:	0002      	movs	r2, r0
 8003a58:	69bb      	ldr	r3, [r7, #24]
 8003a5a:	1ad3      	subs	r3, r2, r3
 8003a5c:	2b02      	cmp	r3, #2
 8003a5e:	d901      	bls.n	8003a64 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8003a60:	2303      	movs	r3, #3
 8003a62:	e202      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003a64:	4b46      	ldr	r3, [pc, #280]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	2202      	movs	r2, #2
 8003a6a:	4013      	ands	r3, r2
 8003a6c:	d1f1      	bne.n	8003a52 <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	2208      	movs	r2, #8
 8003a74:	4013      	ands	r3, r2
 8003a76:	d036      	beq.n	8003ae6 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	69db      	ldr	r3, [r3, #28]
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d019      	beq.n	8003ab4 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003a80:	4b3f      	ldr	r3, [pc, #252]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a82:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a84:	4b3e      	ldr	r3, [pc, #248]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003a86:	2101      	movs	r1, #1
 8003a88:	430a      	orrs	r2, r1
 8003a8a:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003a8c:	f7ff f8c6 	bl	8002c1c <HAL_GetTick>
 8003a90:	0003      	movs	r3, r0
 8003a92:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003a94:	e008      	b.n	8003aa8 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003a96:	f7ff f8c1 	bl	8002c1c <HAL_GetTick>
 8003a9a:	0002      	movs	r2, r0
 8003a9c:	69bb      	ldr	r3, [r7, #24]
 8003a9e:	1ad3      	subs	r3, r2, r3
 8003aa0:	2b02      	cmp	r3, #2
 8003aa2:	d901      	bls.n	8003aa8 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8003aa4:	2303      	movs	r3, #3
 8003aa6:	e1e0      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003aa8:	4b35      	ldr	r3, [pc, #212]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003aaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aac:	2202      	movs	r2, #2
 8003aae:	4013      	ands	r3, r2
 8003ab0:	d0f1      	beq.n	8003a96 <HAL_RCC_OscConfig+0x242>
 8003ab2:	e018      	b.n	8003ae6 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003ab4:	4b32      	ldr	r3, [pc, #200]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003ab6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003ab8:	4b31      	ldr	r3, [pc, #196]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003aba:	2101      	movs	r1, #1
 8003abc:	438a      	bics	r2, r1
 8003abe:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003ac0:	f7ff f8ac 	bl	8002c1c <HAL_GetTick>
 8003ac4:	0003      	movs	r3, r0
 8003ac6:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003ac8:	e008      	b.n	8003adc <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003aca:	f7ff f8a7 	bl	8002c1c <HAL_GetTick>
 8003ace:	0002      	movs	r2, r0
 8003ad0:	69bb      	ldr	r3, [r7, #24]
 8003ad2:	1ad3      	subs	r3, r2, r3
 8003ad4:	2b02      	cmp	r3, #2
 8003ad6:	d901      	bls.n	8003adc <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8003ad8:	2303      	movs	r3, #3
 8003ada:	e1c6      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003adc:	4b28      	ldr	r3, [pc, #160]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003ade:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ae0:	2202      	movs	r2, #2
 8003ae2:	4013      	ands	r3, r2
 8003ae4:	d1f1      	bne.n	8003aca <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	2204      	movs	r2, #4
 8003aec:	4013      	ands	r3, r2
 8003aee:	d100      	bne.n	8003af2 <HAL_RCC_OscConfig+0x29e>
 8003af0:	e0b4      	b.n	8003c5c <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003af2:	201f      	movs	r0, #31
 8003af4:	183b      	adds	r3, r7, r0
 8003af6:	2200      	movs	r2, #0
 8003af8:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003afa:	4b21      	ldr	r3, [pc, #132]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003afc:	69da      	ldr	r2, [r3, #28]
 8003afe:	2380      	movs	r3, #128	; 0x80
 8003b00:	055b      	lsls	r3, r3, #21
 8003b02:	4013      	ands	r3, r2
 8003b04:	d110      	bne.n	8003b28 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003b06:	4b1e      	ldr	r3, [pc, #120]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003b08:	69da      	ldr	r2, [r3, #28]
 8003b0a:	4b1d      	ldr	r3, [pc, #116]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003b0c:	2180      	movs	r1, #128	; 0x80
 8003b0e:	0549      	lsls	r1, r1, #21
 8003b10:	430a      	orrs	r2, r1
 8003b12:	61da      	str	r2, [r3, #28]
 8003b14:	4b1a      	ldr	r3, [pc, #104]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003b16:	69da      	ldr	r2, [r3, #28]
 8003b18:	2380      	movs	r3, #128	; 0x80
 8003b1a:	055b      	lsls	r3, r3, #21
 8003b1c:	4013      	ands	r3, r2
 8003b1e:	60fb      	str	r3, [r7, #12]
 8003b20:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8003b22:	183b      	adds	r3, r7, r0
 8003b24:	2201      	movs	r2, #1
 8003b26:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003b28:	4b18      	ldr	r3, [pc, #96]	; (8003b8c <HAL_RCC_OscConfig+0x338>)
 8003b2a:	681a      	ldr	r2, [r3, #0]
 8003b2c:	2380      	movs	r3, #128	; 0x80
 8003b2e:	005b      	lsls	r3, r3, #1
 8003b30:	4013      	ands	r3, r2
 8003b32:	d11a      	bne.n	8003b6a <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003b34:	4b15      	ldr	r3, [pc, #84]	; (8003b8c <HAL_RCC_OscConfig+0x338>)
 8003b36:	681a      	ldr	r2, [r3, #0]
 8003b38:	4b14      	ldr	r3, [pc, #80]	; (8003b8c <HAL_RCC_OscConfig+0x338>)
 8003b3a:	2180      	movs	r1, #128	; 0x80
 8003b3c:	0049      	lsls	r1, r1, #1
 8003b3e:	430a      	orrs	r2, r1
 8003b40:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003b42:	f7ff f86b 	bl	8002c1c <HAL_GetTick>
 8003b46:	0003      	movs	r3, r0
 8003b48:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003b4a:	e008      	b.n	8003b5e <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003b4c:	f7ff f866 	bl	8002c1c <HAL_GetTick>
 8003b50:	0002      	movs	r2, r0
 8003b52:	69bb      	ldr	r3, [r7, #24]
 8003b54:	1ad3      	subs	r3, r2, r3
 8003b56:	2b64      	cmp	r3, #100	; 0x64
 8003b58:	d901      	bls.n	8003b5e <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 8003b5a:	2303      	movs	r3, #3
 8003b5c:	e185      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003b5e:	4b0b      	ldr	r3, [pc, #44]	; (8003b8c <HAL_RCC_OscConfig+0x338>)
 8003b60:	681a      	ldr	r2, [r3, #0]
 8003b62:	2380      	movs	r3, #128	; 0x80
 8003b64:	005b      	lsls	r3, r3, #1
 8003b66:	4013      	ands	r3, r2
 8003b68:	d0f0      	beq.n	8003b4c <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	689b      	ldr	r3, [r3, #8]
 8003b6e:	2b01      	cmp	r3, #1
 8003b70:	d10e      	bne.n	8003b90 <HAL_RCC_OscConfig+0x33c>
 8003b72:	4b03      	ldr	r3, [pc, #12]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003b74:	6a1a      	ldr	r2, [r3, #32]
 8003b76:	4b02      	ldr	r3, [pc, #8]	; (8003b80 <HAL_RCC_OscConfig+0x32c>)
 8003b78:	2101      	movs	r1, #1
 8003b7a:	430a      	orrs	r2, r1
 8003b7c:	621a      	str	r2, [r3, #32]
 8003b7e:	e035      	b.n	8003bec <HAL_RCC_OscConfig+0x398>
 8003b80:	40021000 	.word	0x40021000
 8003b84:	fffeffff 	.word	0xfffeffff
 8003b88:	fffbffff 	.word	0xfffbffff
 8003b8c:	40007000 	.word	0x40007000
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	689b      	ldr	r3, [r3, #8]
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d10c      	bne.n	8003bb2 <HAL_RCC_OscConfig+0x35e>
 8003b98:	4bb6      	ldr	r3, [pc, #728]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003b9a:	6a1a      	ldr	r2, [r3, #32]
 8003b9c:	4bb5      	ldr	r3, [pc, #724]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003b9e:	2101      	movs	r1, #1
 8003ba0:	438a      	bics	r2, r1
 8003ba2:	621a      	str	r2, [r3, #32]
 8003ba4:	4bb3      	ldr	r3, [pc, #716]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003ba6:	6a1a      	ldr	r2, [r3, #32]
 8003ba8:	4bb2      	ldr	r3, [pc, #712]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003baa:	2104      	movs	r1, #4
 8003bac:	438a      	bics	r2, r1
 8003bae:	621a      	str	r2, [r3, #32]
 8003bb0:	e01c      	b.n	8003bec <HAL_RCC_OscConfig+0x398>
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	689b      	ldr	r3, [r3, #8]
 8003bb6:	2b05      	cmp	r3, #5
 8003bb8:	d10c      	bne.n	8003bd4 <HAL_RCC_OscConfig+0x380>
 8003bba:	4bae      	ldr	r3, [pc, #696]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bbc:	6a1a      	ldr	r2, [r3, #32]
 8003bbe:	4bad      	ldr	r3, [pc, #692]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bc0:	2104      	movs	r1, #4
 8003bc2:	430a      	orrs	r2, r1
 8003bc4:	621a      	str	r2, [r3, #32]
 8003bc6:	4bab      	ldr	r3, [pc, #684]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bc8:	6a1a      	ldr	r2, [r3, #32]
 8003bca:	4baa      	ldr	r3, [pc, #680]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bcc:	2101      	movs	r1, #1
 8003bce:	430a      	orrs	r2, r1
 8003bd0:	621a      	str	r2, [r3, #32]
 8003bd2:	e00b      	b.n	8003bec <HAL_RCC_OscConfig+0x398>
 8003bd4:	4ba7      	ldr	r3, [pc, #668]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bd6:	6a1a      	ldr	r2, [r3, #32]
 8003bd8:	4ba6      	ldr	r3, [pc, #664]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003bda:	2101      	movs	r1, #1
 8003bdc:	438a      	bics	r2, r1
 8003bde:	621a      	str	r2, [r3, #32]
 8003be0:	4ba4      	ldr	r3, [pc, #656]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003be2:	6a1a      	ldr	r2, [r3, #32]
 8003be4:	4ba3      	ldr	r3, [pc, #652]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003be6:	2104      	movs	r1, #4
 8003be8:	438a      	bics	r2, r1
 8003bea:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	689b      	ldr	r3, [r3, #8]
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d014      	beq.n	8003c1e <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003bf4:	f7ff f812 	bl	8002c1c <HAL_GetTick>
 8003bf8:	0003      	movs	r3, r0
 8003bfa:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003bfc:	e009      	b.n	8003c12 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003bfe:	f7ff f80d 	bl	8002c1c <HAL_GetTick>
 8003c02:	0002      	movs	r2, r0
 8003c04:	69bb      	ldr	r3, [r7, #24]
 8003c06:	1ad3      	subs	r3, r2, r3
 8003c08:	4a9b      	ldr	r2, [pc, #620]	; (8003e78 <HAL_RCC_OscConfig+0x624>)
 8003c0a:	4293      	cmp	r3, r2
 8003c0c:	d901      	bls.n	8003c12 <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8003c0e:	2303      	movs	r3, #3
 8003c10:	e12b      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003c12:	4b98      	ldr	r3, [pc, #608]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c14:	6a1b      	ldr	r3, [r3, #32]
 8003c16:	2202      	movs	r2, #2
 8003c18:	4013      	ands	r3, r2
 8003c1a:	d0f0      	beq.n	8003bfe <HAL_RCC_OscConfig+0x3aa>
 8003c1c:	e013      	b.n	8003c46 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003c1e:	f7fe fffd 	bl	8002c1c <HAL_GetTick>
 8003c22:	0003      	movs	r3, r0
 8003c24:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003c26:	e009      	b.n	8003c3c <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003c28:	f7fe fff8 	bl	8002c1c <HAL_GetTick>
 8003c2c:	0002      	movs	r2, r0
 8003c2e:	69bb      	ldr	r3, [r7, #24]
 8003c30:	1ad3      	subs	r3, r2, r3
 8003c32:	4a91      	ldr	r2, [pc, #580]	; (8003e78 <HAL_RCC_OscConfig+0x624>)
 8003c34:	4293      	cmp	r3, r2
 8003c36:	d901      	bls.n	8003c3c <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8003c38:	2303      	movs	r3, #3
 8003c3a:	e116      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003c3c:	4b8d      	ldr	r3, [pc, #564]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c3e:	6a1b      	ldr	r3, [r3, #32]
 8003c40:	2202      	movs	r2, #2
 8003c42:	4013      	ands	r3, r2
 8003c44:	d1f0      	bne.n	8003c28 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003c46:	231f      	movs	r3, #31
 8003c48:	18fb      	adds	r3, r7, r3
 8003c4a:	781b      	ldrb	r3, [r3, #0]
 8003c4c:	2b01      	cmp	r3, #1
 8003c4e:	d105      	bne.n	8003c5c <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003c50:	4b88      	ldr	r3, [pc, #544]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c52:	69da      	ldr	r2, [r3, #28]
 8003c54:	4b87      	ldr	r3, [pc, #540]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c56:	4989      	ldr	r1, [pc, #548]	; (8003e7c <HAL_RCC_OscConfig+0x628>)
 8003c58:	400a      	ands	r2, r1
 8003c5a:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	2210      	movs	r2, #16
 8003c62:	4013      	ands	r3, r2
 8003c64:	d063      	beq.n	8003d2e <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	695b      	ldr	r3, [r3, #20]
 8003c6a:	2b01      	cmp	r3, #1
 8003c6c:	d12a      	bne.n	8003cc4 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003c6e:	4b81      	ldr	r3, [pc, #516]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003c72:	4b80      	ldr	r3, [pc, #512]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c74:	2104      	movs	r1, #4
 8003c76:	430a      	orrs	r2, r1
 8003c78:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8003c7a:	4b7e      	ldr	r3, [pc, #504]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c7c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003c7e:	4b7d      	ldr	r3, [pc, #500]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003c80:	2101      	movs	r1, #1
 8003c82:	430a      	orrs	r2, r1
 8003c84:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003c86:	f7fe ffc9 	bl	8002c1c <HAL_GetTick>
 8003c8a:	0003      	movs	r3, r0
 8003c8c:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003c8e:	e008      	b.n	8003ca2 <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003c90:	f7fe ffc4 	bl	8002c1c <HAL_GetTick>
 8003c94:	0002      	movs	r2, r0
 8003c96:	69bb      	ldr	r3, [r7, #24]
 8003c98:	1ad3      	subs	r3, r2, r3
 8003c9a:	2b02      	cmp	r3, #2
 8003c9c:	d901      	bls.n	8003ca2 <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8003c9e:	2303      	movs	r3, #3
 8003ca0:	e0e3      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003ca2:	4b74      	ldr	r3, [pc, #464]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003ca4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003ca6:	2202      	movs	r2, #2
 8003ca8:	4013      	ands	r3, r2
 8003caa:	d0f1      	beq.n	8003c90 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003cac:	4b71      	ldr	r3, [pc, #452]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003cb0:	22f8      	movs	r2, #248	; 0xf8
 8003cb2:	4393      	bics	r3, r2
 8003cb4:	0019      	movs	r1, r3
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	699b      	ldr	r3, [r3, #24]
 8003cba:	00da      	lsls	r2, r3, #3
 8003cbc:	4b6d      	ldr	r3, [pc, #436]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cbe:	430a      	orrs	r2, r1
 8003cc0:	635a      	str	r2, [r3, #52]	; 0x34
 8003cc2:	e034      	b.n	8003d2e <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	695b      	ldr	r3, [r3, #20]
 8003cc8:	3305      	adds	r3, #5
 8003cca:	d111      	bne.n	8003cf0 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8003ccc:	4b69      	ldr	r3, [pc, #420]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003cd0:	4b68      	ldr	r3, [pc, #416]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cd2:	2104      	movs	r1, #4
 8003cd4:	438a      	bics	r2, r1
 8003cd6:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003cd8:	4b66      	ldr	r3, [pc, #408]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003cdc:	22f8      	movs	r2, #248	; 0xf8
 8003cde:	4393      	bics	r3, r2
 8003ce0:	0019      	movs	r1, r3
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	699b      	ldr	r3, [r3, #24]
 8003ce6:	00da      	lsls	r2, r3, #3
 8003ce8:	4b62      	ldr	r3, [pc, #392]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cea:	430a      	orrs	r2, r1
 8003cec:	635a      	str	r2, [r3, #52]	; 0x34
 8003cee:	e01e      	b.n	8003d2e <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003cf0:	4b60      	ldr	r3, [pc, #384]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cf2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003cf4:	4b5f      	ldr	r3, [pc, #380]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cf6:	2104      	movs	r1, #4
 8003cf8:	430a      	orrs	r2, r1
 8003cfa:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003cfc:	4b5d      	ldr	r3, [pc, #372]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003cfe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003d00:	4b5c      	ldr	r3, [pc, #368]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d02:	2101      	movs	r1, #1
 8003d04:	438a      	bics	r2, r1
 8003d06:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003d08:	f7fe ff88 	bl	8002c1c <HAL_GetTick>
 8003d0c:	0003      	movs	r3, r0
 8003d0e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003d10:	e008      	b.n	8003d24 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003d12:	f7fe ff83 	bl	8002c1c <HAL_GetTick>
 8003d16:	0002      	movs	r2, r0
 8003d18:	69bb      	ldr	r3, [r7, #24]
 8003d1a:	1ad3      	subs	r3, r2, r3
 8003d1c:	2b02      	cmp	r3, #2
 8003d1e:	d901      	bls.n	8003d24 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 8003d20:	2303      	movs	r3, #3
 8003d22:	e0a2      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003d24:	4b53      	ldr	r3, [pc, #332]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003d28:	2202      	movs	r2, #2
 8003d2a:	4013      	ands	r3, r2
 8003d2c:	d1f1      	bne.n	8003d12 <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	6a1b      	ldr	r3, [r3, #32]
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d100      	bne.n	8003d38 <HAL_RCC_OscConfig+0x4e4>
 8003d36:	e097      	b.n	8003e68 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003d38:	4b4e      	ldr	r3, [pc, #312]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d3a:	685b      	ldr	r3, [r3, #4]
 8003d3c:	220c      	movs	r2, #12
 8003d3e:	4013      	ands	r3, r2
 8003d40:	2b08      	cmp	r3, #8
 8003d42:	d100      	bne.n	8003d46 <HAL_RCC_OscConfig+0x4f2>
 8003d44:	e06b      	b.n	8003e1e <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	6a1b      	ldr	r3, [r3, #32]
 8003d4a:	2b02      	cmp	r3, #2
 8003d4c:	d14c      	bne.n	8003de8 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003d4e:	4b49      	ldr	r3, [pc, #292]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d50:	681a      	ldr	r2, [r3, #0]
 8003d52:	4b48      	ldr	r3, [pc, #288]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d54:	494a      	ldr	r1, [pc, #296]	; (8003e80 <HAL_RCC_OscConfig+0x62c>)
 8003d56:	400a      	ands	r2, r1
 8003d58:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003d5a:	f7fe ff5f 	bl	8002c1c <HAL_GetTick>
 8003d5e:	0003      	movs	r3, r0
 8003d60:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003d62:	e008      	b.n	8003d76 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003d64:	f7fe ff5a 	bl	8002c1c <HAL_GetTick>
 8003d68:	0002      	movs	r2, r0
 8003d6a:	69bb      	ldr	r3, [r7, #24]
 8003d6c:	1ad3      	subs	r3, r2, r3
 8003d6e:	2b02      	cmp	r3, #2
 8003d70:	d901      	bls.n	8003d76 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8003d72:	2303      	movs	r3, #3
 8003d74:	e079      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003d76:	4b3f      	ldr	r3, [pc, #252]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d78:	681a      	ldr	r2, [r3, #0]
 8003d7a:	2380      	movs	r3, #128	; 0x80
 8003d7c:	049b      	lsls	r3, r3, #18
 8003d7e:	4013      	ands	r3, r2
 8003d80:	d1f0      	bne.n	8003d64 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003d82:	4b3c      	ldr	r3, [pc, #240]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d86:	220f      	movs	r2, #15
 8003d88:	4393      	bics	r3, r2
 8003d8a:	0019      	movs	r1, r3
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003d90:	4b38      	ldr	r3, [pc, #224]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d92:	430a      	orrs	r2, r1
 8003d94:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d96:	4b37      	ldr	r3, [pc, #220]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	4a3a      	ldr	r2, [pc, #232]	; (8003e84 <HAL_RCC_OscConfig+0x630>)
 8003d9c:	4013      	ands	r3, r2
 8003d9e:	0019      	movs	r1, r3
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003da8:	431a      	orrs	r2, r3
 8003daa:	4b32      	ldr	r3, [pc, #200]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003dac:	430a      	orrs	r2, r1
 8003dae:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003db0:	4b30      	ldr	r3, [pc, #192]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003db2:	681a      	ldr	r2, [r3, #0]
 8003db4:	4b2f      	ldr	r3, [pc, #188]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003db6:	2180      	movs	r1, #128	; 0x80
 8003db8:	0449      	lsls	r1, r1, #17
 8003dba:	430a      	orrs	r2, r1
 8003dbc:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003dbe:	f7fe ff2d 	bl	8002c1c <HAL_GetTick>
 8003dc2:	0003      	movs	r3, r0
 8003dc4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003dc6:	e008      	b.n	8003dda <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003dc8:	f7fe ff28 	bl	8002c1c <HAL_GetTick>
 8003dcc:	0002      	movs	r2, r0
 8003dce:	69bb      	ldr	r3, [r7, #24]
 8003dd0:	1ad3      	subs	r3, r2, r3
 8003dd2:	2b02      	cmp	r3, #2
 8003dd4:	d901      	bls.n	8003dda <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 8003dd6:	2303      	movs	r3, #3
 8003dd8:	e047      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003dda:	4b26      	ldr	r3, [pc, #152]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003ddc:	681a      	ldr	r2, [r3, #0]
 8003dde:	2380      	movs	r3, #128	; 0x80
 8003de0:	049b      	lsls	r3, r3, #18
 8003de2:	4013      	ands	r3, r2
 8003de4:	d0f0      	beq.n	8003dc8 <HAL_RCC_OscConfig+0x574>
 8003de6:	e03f      	b.n	8003e68 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003de8:	4b22      	ldr	r3, [pc, #136]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003dea:	681a      	ldr	r2, [r3, #0]
 8003dec:	4b21      	ldr	r3, [pc, #132]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003dee:	4924      	ldr	r1, [pc, #144]	; (8003e80 <HAL_RCC_OscConfig+0x62c>)
 8003df0:	400a      	ands	r2, r1
 8003df2:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003df4:	f7fe ff12 	bl	8002c1c <HAL_GetTick>
 8003df8:	0003      	movs	r3, r0
 8003dfa:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003dfc:	e008      	b.n	8003e10 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003dfe:	f7fe ff0d 	bl	8002c1c <HAL_GetTick>
 8003e02:	0002      	movs	r2, r0
 8003e04:	69bb      	ldr	r3, [r7, #24]
 8003e06:	1ad3      	subs	r3, r2, r3
 8003e08:	2b02      	cmp	r3, #2
 8003e0a:	d901      	bls.n	8003e10 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8003e0c:	2303      	movs	r3, #3
 8003e0e:	e02c      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003e10:	4b18      	ldr	r3, [pc, #96]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003e12:	681a      	ldr	r2, [r3, #0]
 8003e14:	2380      	movs	r3, #128	; 0x80
 8003e16:	049b      	lsls	r3, r3, #18
 8003e18:	4013      	ands	r3, r2
 8003e1a:	d1f0      	bne.n	8003dfe <HAL_RCC_OscConfig+0x5aa>
 8003e1c:	e024      	b.n	8003e68 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	6a1b      	ldr	r3, [r3, #32]
 8003e22:	2b01      	cmp	r3, #1
 8003e24:	d101      	bne.n	8003e2a <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8003e26:	2301      	movs	r3, #1
 8003e28:	e01f      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003e2a:	4b12      	ldr	r3, [pc, #72]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003e2c:	685b      	ldr	r3, [r3, #4]
 8003e2e:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8003e30:	4b10      	ldr	r3, [pc, #64]	; (8003e74 <HAL_RCC_OscConfig+0x620>)
 8003e32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e34:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003e36:	697a      	ldr	r2, [r7, #20]
 8003e38:	2380      	movs	r3, #128	; 0x80
 8003e3a:	025b      	lsls	r3, r3, #9
 8003e3c:	401a      	ands	r2, r3
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e42:	429a      	cmp	r2, r3
 8003e44:	d10e      	bne.n	8003e64 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003e46:	693b      	ldr	r3, [r7, #16]
 8003e48:	220f      	movs	r2, #15
 8003e4a:	401a      	ands	r2, r3
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003e50:	429a      	cmp	r2, r3
 8003e52:	d107      	bne.n	8003e64 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003e54:	697a      	ldr	r2, [r7, #20]
 8003e56:	23f0      	movs	r3, #240	; 0xf0
 8003e58:	039b      	lsls	r3, r3, #14
 8003e5a:	401a      	ands	r2, r3
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003e60:	429a      	cmp	r2, r3
 8003e62:	d001      	beq.n	8003e68 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8003e64:	2301      	movs	r3, #1
 8003e66:	e000      	b.n	8003e6a <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8003e68:	2300      	movs	r3, #0
}
 8003e6a:	0018      	movs	r0, r3
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	b008      	add	sp, #32
 8003e70:	bd80      	pop	{r7, pc}
 8003e72:	46c0      	nop			; (mov r8, r8)
 8003e74:	40021000 	.word	0x40021000
 8003e78:	00001388 	.word	0x00001388
 8003e7c:	efffffff 	.word	0xefffffff
 8003e80:	feffffff 	.word	0xfeffffff
 8003e84:	ffc2ffff 	.word	0xffc2ffff

08003e88 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003e88:	b580      	push	{r7, lr}
 8003e8a:	b084      	sub	sp, #16
 8003e8c:	af00      	add	r7, sp, #0
 8003e8e:	6078      	str	r0, [r7, #4]
 8003e90:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d101      	bne.n	8003e9c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003e98:	2301      	movs	r3, #1
 8003e9a:	e0b3      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003e9c:	4b5b      	ldr	r3, [pc, #364]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	2201      	movs	r2, #1
 8003ea2:	4013      	ands	r3, r2
 8003ea4:	683a      	ldr	r2, [r7, #0]
 8003ea6:	429a      	cmp	r2, r3
 8003ea8:	d911      	bls.n	8003ece <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003eaa:	4b58      	ldr	r3, [pc, #352]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	2201      	movs	r2, #1
 8003eb0:	4393      	bics	r3, r2
 8003eb2:	0019      	movs	r1, r3
 8003eb4:	4b55      	ldr	r3, [pc, #340]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003eb6:	683a      	ldr	r2, [r7, #0]
 8003eb8:	430a      	orrs	r2, r1
 8003eba:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003ebc:	4b53      	ldr	r3, [pc, #332]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	2201      	movs	r2, #1
 8003ec2:	4013      	ands	r3, r2
 8003ec4:	683a      	ldr	r2, [r7, #0]
 8003ec6:	429a      	cmp	r2, r3
 8003ec8:	d001      	beq.n	8003ece <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8003eca:	2301      	movs	r3, #1
 8003ecc:	e09a      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	2202      	movs	r2, #2
 8003ed4:	4013      	ands	r3, r2
 8003ed6:	d015      	beq.n	8003f04 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	2204      	movs	r2, #4
 8003ede:	4013      	ands	r3, r2
 8003ee0:	d006      	beq.n	8003ef0 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003ee2:	4b4b      	ldr	r3, [pc, #300]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003ee4:	685a      	ldr	r2, [r3, #4]
 8003ee6:	4b4a      	ldr	r3, [pc, #296]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003ee8:	21e0      	movs	r1, #224	; 0xe0
 8003eea:	00c9      	lsls	r1, r1, #3
 8003eec:	430a      	orrs	r2, r1
 8003eee:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003ef0:	4b47      	ldr	r3, [pc, #284]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003ef2:	685b      	ldr	r3, [r3, #4]
 8003ef4:	22f0      	movs	r2, #240	; 0xf0
 8003ef6:	4393      	bics	r3, r2
 8003ef8:	0019      	movs	r1, r3
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	689a      	ldr	r2, [r3, #8]
 8003efe:	4b44      	ldr	r3, [pc, #272]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f00:	430a      	orrs	r2, r1
 8003f02:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	2201      	movs	r2, #1
 8003f0a:	4013      	ands	r3, r2
 8003f0c:	d040      	beq.n	8003f90 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	685b      	ldr	r3, [r3, #4]
 8003f12:	2b01      	cmp	r3, #1
 8003f14:	d107      	bne.n	8003f26 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003f16:	4b3e      	ldr	r3, [pc, #248]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f18:	681a      	ldr	r2, [r3, #0]
 8003f1a:	2380      	movs	r3, #128	; 0x80
 8003f1c:	029b      	lsls	r3, r3, #10
 8003f1e:	4013      	ands	r3, r2
 8003f20:	d114      	bne.n	8003f4c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003f22:	2301      	movs	r3, #1
 8003f24:	e06e      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	2b02      	cmp	r3, #2
 8003f2c:	d107      	bne.n	8003f3e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003f2e:	4b38      	ldr	r3, [pc, #224]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f30:	681a      	ldr	r2, [r3, #0]
 8003f32:	2380      	movs	r3, #128	; 0x80
 8003f34:	049b      	lsls	r3, r3, #18
 8003f36:	4013      	ands	r3, r2
 8003f38:	d108      	bne.n	8003f4c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003f3a:	2301      	movs	r3, #1
 8003f3c:	e062      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003f3e:	4b34      	ldr	r3, [pc, #208]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	2202      	movs	r2, #2
 8003f44:	4013      	ands	r3, r2
 8003f46:	d101      	bne.n	8003f4c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003f48:	2301      	movs	r3, #1
 8003f4a:	e05b      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003f4c:	4b30      	ldr	r3, [pc, #192]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f4e:	685b      	ldr	r3, [r3, #4]
 8003f50:	2203      	movs	r2, #3
 8003f52:	4393      	bics	r3, r2
 8003f54:	0019      	movs	r1, r3
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	685a      	ldr	r2, [r3, #4]
 8003f5a:	4b2d      	ldr	r3, [pc, #180]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f5c:	430a      	orrs	r2, r1
 8003f5e:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003f60:	f7fe fe5c 	bl	8002c1c <HAL_GetTick>
 8003f64:	0003      	movs	r3, r0
 8003f66:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003f68:	e009      	b.n	8003f7e <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003f6a:	f7fe fe57 	bl	8002c1c <HAL_GetTick>
 8003f6e:	0002      	movs	r2, r0
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	1ad3      	subs	r3, r2, r3
 8003f74:	4a27      	ldr	r2, [pc, #156]	; (8004014 <HAL_RCC_ClockConfig+0x18c>)
 8003f76:	4293      	cmp	r3, r2
 8003f78:	d901      	bls.n	8003f7e <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003f7a:	2303      	movs	r3, #3
 8003f7c:	e042      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003f7e:	4b24      	ldr	r3, [pc, #144]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003f80:	685b      	ldr	r3, [r3, #4]
 8003f82:	220c      	movs	r2, #12
 8003f84:	401a      	ands	r2, r3
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	685b      	ldr	r3, [r3, #4]
 8003f8a:	009b      	lsls	r3, r3, #2
 8003f8c:	429a      	cmp	r2, r3
 8003f8e:	d1ec      	bne.n	8003f6a <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003f90:	4b1e      	ldr	r3, [pc, #120]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	2201      	movs	r2, #1
 8003f96:	4013      	ands	r3, r2
 8003f98:	683a      	ldr	r2, [r7, #0]
 8003f9a:	429a      	cmp	r2, r3
 8003f9c:	d211      	bcs.n	8003fc2 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003f9e:	4b1b      	ldr	r3, [pc, #108]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	2201      	movs	r2, #1
 8003fa4:	4393      	bics	r3, r2
 8003fa6:	0019      	movs	r1, r3
 8003fa8:	4b18      	ldr	r3, [pc, #96]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003faa:	683a      	ldr	r2, [r7, #0]
 8003fac:	430a      	orrs	r2, r1
 8003fae:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003fb0:	4b16      	ldr	r3, [pc, #88]	; (800400c <HAL_RCC_ClockConfig+0x184>)
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	2201      	movs	r2, #1
 8003fb6:	4013      	ands	r3, r2
 8003fb8:	683a      	ldr	r2, [r7, #0]
 8003fba:	429a      	cmp	r2, r3
 8003fbc:	d001      	beq.n	8003fc2 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003fbe:	2301      	movs	r3, #1
 8003fc0:	e020      	b.n	8004004 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	2204      	movs	r2, #4
 8003fc8:	4013      	ands	r3, r2
 8003fca:	d009      	beq.n	8003fe0 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003fcc:	4b10      	ldr	r3, [pc, #64]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003fce:	685b      	ldr	r3, [r3, #4]
 8003fd0:	4a11      	ldr	r2, [pc, #68]	; (8004018 <HAL_RCC_ClockConfig+0x190>)
 8003fd2:	4013      	ands	r3, r2
 8003fd4:	0019      	movs	r1, r3
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	68da      	ldr	r2, [r3, #12]
 8003fda:	4b0d      	ldr	r3, [pc, #52]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003fdc:	430a      	orrs	r2, r1
 8003fde:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003fe0:	f000 f820 	bl	8004024 <HAL_RCC_GetSysClockFreq>
 8003fe4:	0001      	movs	r1, r0
 8003fe6:	4b0a      	ldr	r3, [pc, #40]	; (8004010 <HAL_RCC_ClockConfig+0x188>)
 8003fe8:	685b      	ldr	r3, [r3, #4]
 8003fea:	091b      	lsrs	r3, r3, #4
 8003fec:	220f      	movs	r2, #15
 8003fee:	4013      	ands	r3, r2
 8003ff0:	4a0a      	ldr	r2, [pc, #40]	; (800401c <HAL_RCC_ClockConfig+0x194>)
 8003ff2:	5cd3      	ldrb	r3, [r2, r3]
 8003ff4:	000a      	movs	r2, r1
 8003ff6:	40da      	lsrs	r2, r3
 8003ff8:	4b09      	ldr	r3, [pc, #36]	; (8004020 <HAL_RCC_ClockConfig+0x198>)
 8003ffa:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003ffc:	2003      	movs	r0, #3
 8003ffe:	f7fe fdc7 	bl	8002b90 <HAL_InitTick>
  
  return HAL_OK;
 8004002:	2300      	movs	r3, #0
}
 8004004:	0018      	movs	r0, r3
 8004006:	46bd      	mov	sp, r7
 8004008:	b004      	add	sp, #16
 800400a:	bd80      	pop	{r7, pc}
 800400c:	40022000 	.word	0x40022000
 8004010:	40021000 	.word	0x40021000
 8004014:	00001388 	.word	0x00001388
 8004018:	fffff8ff 	.word	0xfffff8ff
 800401c:	08009554 	.word	0x08009554
 8004020:	20000000 	.word	0x20000000

08004024 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004024:	b580      	push	{r7, lr}
 8004026:	b086      	sub	sp, #24
 8004028:	af00      	add	r7, sp, #0
  static const uint8_t aPLLMULFactorTable[16U] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
                                                   10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  static const uint8_t aPredivFactorTable[16U] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
                                                   9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 800402a:	2300      	movs	r3, #0
 800402c:	60fb      	str	r3, [r7, #12]
 800402e:	2300      	movs	r3, #0
 8004030:	60bb      	str	r3, [r7, #8]
 8004032:	2300      	movs	r3, #0
 8004034:	617b      	str	r3, [r7, #20]
 8004036:	2300      	movs	r3, #0
 8004038:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 800403a:	2300      	movs	r3, #0
 800403c:	613b      	str	r3, [r7, #16]
  
  tmpreg = RCC->CFGR;
 800403e:	4b20      	ldr	r3, [pc, #128]	; (80040c0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004040:	685b      	ldr	r3, [r3, #4]
 8004042:	60fb      	str	r3, [r7, #12]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	220c      	movs	r2, #12
 8004048:	4013      	ands	r3, r2
 800404a:	2b04      	cmp	r3, #4
 800404c:	d002      	beq.n	8004054 <HAL_RCC_GetSysClockFreq+0x30>
 800404e:	2b08      	cmp	r3, #8
 8004050:	d003      	beq.n	800405a <HAL_RCC_GetSysClockFreq+0x36>
 8004052:	e02c      	b.n	80040ae <HAL_RCC_GetSysClockFreq+0x8a>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8004054:	4b1b      	ldr	r3, [pc, #108]	; (80040c4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004056:	613b      	str	r3, [r7, #16]
      break;
 8004058:	e02c      	b.n	80040b4 <HAL_RCC_GetSysClockFreq+0x90>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	0c9b      	lsrs	r3, r3, #18
 800405e:	220f      	movs	r2, #15
 8004060:	4013      	ands	r3, r2
 8004062:	4a19      	ldr	r2, [pc, #100]	; (80040c8 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004064:	5cd3      	ldrb	r3, [r2, r3]
 8004066:	607b      	str	r3, [r7, #4]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8004068:	4b15      	ldr	r3, [pc, #84]	; (80040c0 <HAL_RCC_GetSysClockFreq+0x9c>)
 800406a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800406c:	220f      	movs	r2, #15
 800406e:	4013      	ands	r3, r2
 8004070:	4a16      	ldr	r2, [pc, #88]	; (80040cc <HAL_RCC_GetSysClockFreq+0xa8>)
 8004072:	5cd3      	ldrb	r3, [r2, r3]
 8004074:	60bb      	str	r3, [r7, #8]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8004076:	68fa      	ldr	r2, [r7, #12]
 8004078:	2380      	movs	r3, #128	; 0x80
 800407a:	025b      	lsls	r3, r3, #9
 800407c:	4013      	ands	r3, r2
 800407e:	d009      	beq.n	8004094 <HAL_RCC_GetSysClockFreq+0x70>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8004080:	68b9      	ldr	r1, [r7, #8]
 8004082:	4810      	ldr	r0, [pc, #64]	; (80040c4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004084:	f7fc f85c 	bl	8000140 <__udivsi3>
 8004088:	0003      	movs	r3, r0
 800408a:	001a      	movs	r2, r3
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	4353      	muls	r3, r2
 8004090:	617b      	str	r3, [r7, #20]
 8004092:	e009      	b.n	80040a8 <HAL_RCC_GetSysClockFreq+0x84>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8004094:	6879      	ldr	r1, [r7, #4]
 8004096:	000a      	movs	r2, r1
 8004098:	0152      	lsls	r2, r2, #5
 800409a:	1a52      	subs	r2, r2, r1
 800409c:	0193      	lsls	r3, r2, #6
 800409e:	1a9b      	subs	r3, r3, r2
 80040a0:	00db      	lsls	r3, r3, #3
 80040a2:	185b      	adds	r3, r3, r1
 80040a4:	021b      	lsls	r3, r3, #8
 80040a6:	617b      	str	r3, [r7, #20]
#endif
      }
      sysclockfreq = pllclk;
 80040a8:	697b      	ldr	r3, [r7, #20]
 80040aa:	613b      	str	r3, [r7, #16]
      break;
 80040ac:	e002      	b.n	80040b4 <HAL_RCC_GetSysClockFreq+0x90>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 80040ae:	4b05      	ldr	r3, [pc, #20]	; (80040c4 <HAL_RCC_GetSysClockFreq+0xa0>)
 80040b0:	613b      	str	r3, [r7, #16]
      break;
 80040b2:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80040b4:	693b      	ldr	r3, [r7, #16]
}
 80040b6:	0018      	movs	r0, r3
 80040b8:	46bd      	mov	sp, r7
 80040ba:	b006      	add	sp, #24
 80040bc:	bd80      	pop	{r7, pc}
 80040be:	46c0      	nop			; (mov r8, r8)
 80040c0:	40021000 	.word	0x40021000
 80040c4:	007a1200 	.word	0x007a1200
 80040c8:	0800956c 	.word	0x0800956c
 80040cc:	0800957c 	.word	0x0800957c

080040d0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80040d0:	b580      	push	{r7, lr}
 80040d2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80040d4:	4b02      	ldr	r3, [pc, #8]	; (80040e0 <HAL_RCC_GetHCLKFreq+0x10>)
 80040d6:	681b      	ldr	r3, [r3, #0]
}
 80040d8:	0018      	movs	r0, r3
 80040da:	46bd      	mov	sp, r7
 80040dc:	bd80      	pop	{r7, pc}
 80040de:	46c0      	nop			; (mov r8, r8)
 80040e0:	20000000 	.word	0x20000000

080040e4 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80040e4:	b580      	push	{r7, lr}
 80040e6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 80040e8:	f7ff fff2 	bl	80040d0 <HAL_RCC_GetHCLKFreq>
 80040ec:	0001      	movs	r1, r0
 80040ee:	4b06      	ldr	r3, [pc, #24]	; (8004108 <HAL_RCC_GetPCLK1Freq+0x24>)
 80040f0:	685b      	ldr	r3, [r3, #4]
 80040f2:	0a1b      	lsrs	r3, r3, #8
 80040f4:	2207      	movs	r2, #7
 80040f6:	4013      	ands	r3, r2
 80040f8:	4a04      	ldr	r2, [pc, #16]	; (800410c <HAL_RCC_GetPCLK1Freq+0x28>)
 80040fa:	5cd3      	ldrb	r3, [r2, r3]
 80040fc:	40d9      	lsrs	r1, r3
 80040fe:	000b      	movs	r3, r1
}    
 8004100:	0018      	movs	r0, r3
 8004102:	46bd      	mov	sp, r7
 8004104:	bd80      	pop	{r7, pc}
 8004106:	46c0      	nop			; (mov r8, r8)
 8004108:	40021000 	.word	0x40021000
 800410c:	08009564 	.word	0x08009564

08004110 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8004110:	b580      	push	{r7, lr}
 8004112:	b086      	sub	sp, #24
 8004114:	af00      	add	r7, sp, #0
 8004116:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8004118:	2300      	movs	r3, #0
 800411a:	613b      	str	r3, [r7, #16]
  uint32_t temp_reg = 0U;
 800411c:	2300      	movs	r3, #0
 800411e:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681a      	ldr	r2, [r3, #0]
 8004124:	2380      	movs	r3, #128	; 0x80
 8004126:	025b      	lsls	r3, r3, #9
 8004128:	4013      	ands	r3, r2
 800412a:	d100      	bne.n	800412e <HAL_RCCEx_PeriphCLKConfig+0x1e>
 800412c:	e08e      	b.n	800424c <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
    
    FlagStatus       pwrclkchanged = RESET;
 800412e:	2017      	movs	r0, #23
 8004130:	183b      	adds	r3, r7, r0
 8004132:	2200      	movs	r2, #0
 8004134:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004136:	4b5f      	ldr	r3, [pc, #380]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004138:	69da      	ldr	r2, [r3, #28]
 800413a:	2380      	movs	r3, #128	; 0x80
 800413c:	055b      	lsls	r3, r3, #21
 800413e:	4013      	ands	r3, r2
 8004140:	d110      	bne.n	8004164 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 8004142:	4b5c      	ldr	r3, [pc, #368]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004144:	69da      	ldr	r2, [r3, #28]
 8004146:	4b5b      	ldr	r3, [pc, #364]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004148:	2180      	movs	r1, #128	; 0x80
 800414a:	0549      	lsls	r1, r1, #21
 800414c:	430a      	orrs	r2, r1
 800414e:	61da      	str	r2, [r3, #28]
 8004150:	4b58      	ldr	r3, [pc, #352]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004152:	69da      	ldr	r2, [r3, #28]
 8004154:	2380      	movs	r3, #128	; 0x80
 8004156:	055b      	lsls	r3, r3, #21
 8004158:	4013      	ands	r3, r2
 800415a:	60bb      	str	r3, [r7, #8]
 800415c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800415e:	183b      	adds	r3, r7, r0
 8004160:	2201      	movs	r2, #1
 8004162:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004164:	4b54      	ldr	r3, [pc, #336]	; (80042b8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8004166:	681a      	ldr	r2, [r3, #0]
 8004168:	2380      	movs	r3, #128	; 0x80
 800416a:	005b      	lsls	r3, r3, #1
 800416c:	4013      	ands	r3, r2
 800416e:	d11a      	bne.n	80041a6 <HAL_RCCEx_PeriphCLKConfig+0x96>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004170:	4b51      	ldr	r3, [pc, #324]	; (80042b8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8004172:	681a      	ldr	r2, [r3, #0]
 8004174:	4b50      	ldr	r3, [pc, #320]	; (80042b8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8004176:	2180      	movs	r1, #128	; 0x80
 8004178:	0049      	lsls	r1, r1, #1
 800417a:	430a      	orrs	r2, r1
 800417c:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800417e:	f7fe fd4d 	bl	8002c1c <HAL_GetTick>
 8004182:	0003      	movs	r3, r0
 8004184:	613b      	str	r3, [r7, #16]
      
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004186:	e008      	b.n	800419a <HAL_RCCEx_PeriphCLKConfig+0x8a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004188:	f7fe fd48 	bl	8002c1c <HAL_GetTick>
 800418c:	0002      	movs	r2, r0
 800418e:	693b      	ldr	r3, [r7, #16]
 8004190:	1ad3      	subs	r3, r2, r3
 8004192:	2b64      	cmp	r3, #100	; 0x64
 8004194:	d901      	bls.n	800419a <HAL_RCCEx_PeriphCLKConfig+0x8a>
        {
          return HAL_TIMEOUT;
 8004196:	2303      	movs	r3, #3
 8004198:	e087      	b.n	80042aa <HAL_RCCEx_PeriphCLKConfig+0x19a>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800419a:	4b47      	ldr	r3, [pc, #284]	; (80042b8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 800419c:	681a      	ldr	r2, [r3, #0]
 800419e:	2380      	movs	r3, #128	; 0x80
 80041a0:	005b      	lsls	r3, r3, #1
 80041a2:	4013      	ands	r3, r2
 80041a4:	d0f0      	beq.n	8004188 <HAL_RCCEx_PeriphCLKConfig+0x78>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80041a6:	4b43      	ldr	r3, [pc, #268]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041a8:	6a1a      	ldr	r2, [r3, #32]
 80041aa:	23c0      	movs	r3, #192	; 0xc0
 80041ac:	009b      	lsls	r3, r3, #2
 80041ae:	4013      	ands	r3, r2
 80041b0:	60fb      	str	r3, [r7, #12]
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80041b2:	68fb      	ldr	r3, [r7, #12]
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d034      	beq.n	8004222 <HAL_RCCEx_PeriphCLKConfig+0x112>
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	685a      	ldr	r2, [r3, #4]
 80041bc:	23c0      	movs	r3, #192	; 0xc0
 80041be:	009b      	lsls	r3, r3, #2
 80041c0:	4013      	ands	r3, r2
 80041c2:	68fa      	ldr	r2, [r7, #12]
 80041c4:	429a      	cmp	r2, r3
 80041c6:	d02c      	beq.n	8004222 <HAL_RCCEx_PeriphCLKConfig+0x112>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80041c8:	4b3a      	ldr	r3, [pc, #232]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041ca:	6a1b      	ldr	r3, [r3, #32]
 80041cc:	4a3b      	ldr	r2, [pc, #236]	; (80042bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 80041ce:	4013      	ands	r3, r2
 80041d0:	60fb      	str	r3, [r7, #12]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80041d2:	4b38      	ldr	r3, [pc, #224]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041d4:	6a1a      	ldr	r2, [r3, #32]
 80041d6:	4b37      	ldr	r3, [pc, #220]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041d8:	2180      	movs	r1, #128	; 0x80
 80041da:	0249      	lsls	r1, r1, #9
 80041dc:	430a      	orrs	r2, r1
 80041de:	621a      	str	r2, [r3, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 80041e0:	4b34      	ldr	r3, [pc, #208]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041e2:	6a1a      	ldr	r2, [r3, #32]
 80041e4:	4b33      	ldr	r3, [pc, #204]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041e6:	4936      	ldr	r1, [pc, #216]	; (80042c0 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 80041e8:	400a      	ands	r2, r1
 80041ea:	621a      	str	r2, [r3, #32]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 80041ec:	4b31      	ldr	r3, [pc, #196]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80041ee:	68fa      	ldr	r2, [r7, #12]
 80041f0:	621a      	str	r2, [r3, #32]
      
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	2201      	movs	r2, #1
 80041f6:	4013      	ands	r3, r2
 80041f8:	d013      	beq.n	8004222 <HAL_RCCEx_PeriphCLKConfig+0x112>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80041fa:	f7fe fd0f 	bl	8002c1c <HAL_GetTick>
 80041fe:	0003      	movs	r3, r0
 8004200:	613b      	str	r3, [r7, #16]
        
        /* Wait till LSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004202:	e009      	b.n	8004218 <HAL_RCCEx_PeriphCLKConfig+0x108>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004204:	f7fe fd0a 	bl	8002c1c <HAL_GetTick>
 8004208:	0002      	movs	r2, r0
 800420a:	693b      	ldr	r3, [r7, #16]
 800420c:	1ad3      	subs	r3, r2, r3
 800420e:	4a2d      	ldr	r2, [pc, #180]	; (80042c4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8004210:	4293      	cmp	r3, r2
 8004212:	d901      	bls.n	8004218 <HAL_RCCEx_PeriphCLKConfig+0x108>
          {
            return HAL_TIMEOUT;
 8004214:	2303      	movs	r3, #3
 8004216:	e048      	b.n	80042aa <HAL_RCCEx_PeriphCLKConfig+0x19a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004218:	4b26      	ldr	r3, [pc, #152]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 800421a:	6a1b      	ldr	r3, [r3, #32]
 800421c:	2202      	movs	r2, #2
 800421e:	4013      	ands	r3, r2
 8004220:	d0f0      	beq.n	8004204 <HAL_RCCEx_PeriphCLKConfig+0xf4>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004222:	4b24      	ldr	r3, [pc, #144]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004224:	6a1b      	ldr	r3, [r3, #32]
 8004226:	4a25      	ldr	r2, [pc, #148]	; (80042bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8004228:	4013      	ands	r3, r2
 800422a:	0019      	movs	r1, r3
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	685a      	ldr	r2, [r3, #4]
 8004230:	4b20      	ldr	r3, [pc, #128]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004232:	430a      	orrs	r2, r1
 8004234:	621a      	str	r2, [r3, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004236:	2317      	movs	r3, #23
 8004238:	18fb      	adds	r3, r7, r3
 800423a:	781b      	ldrb	r3, [r3, #0]
 800423c:	2b01      	cmp	r3, #1
 800423e:	d105      	bne.n	800424c <HAL_RCCEx_PeriphCLKConfig+0x13c>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004240:	4b1c      	ldr	r3, [pc, #112]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004242:	69da      	ldr	r2, [r3, #28]
 8004244:	4b1b      	ldr	r3, [pc, #108]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004246:	4920      	ldr	r1, [pc, #128]	; (80042c8 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8004248:	400a      	ands	r2, r1
 800424a:	61da      	str	r2, [r3, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	2201      	movs	r2, #1
 8004252:	4013      	ands	r3, r2
 8004254:	d009      	beq.n	800426a <HAL_RCCEx_PeriphCLKConfig+0x15a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8004256:	4b17      	ldr	r3, [pc, #92]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800425a:	2203      	movs	r2, #3
 800425c:	4393      	bics	r3, r2
 800425e:	0019      	movs	r1, r3
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	689a      	ldr	r2, [r3, #8]
 8004264:	4b13      	ldr	r3, [pc, #76]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004266:	430a      	orrs	r2, r1
 8004268:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	2220      	movs	r2, #32
 8004270:	4013      	ands	r3, r2
 8004272:	d009      	beq.n	8004288 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8004274:	4b0f      	ldr	r3, [pc, #60]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004278:	2210      	movs	r2, #16
 800427a:	4393      	bics	r3, r2
 800427c:	0019      	movs	r1, r3
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	68da      	ldr	r2, [r3, #12]
 8004282:	4b0c      	ldr	r3, [pc, #48]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004284:	430a      	orrs	r2, r1
 8004286:	631a      	str	r2, [r3, #48]	; 0x30
#if defined(STM32F042x6) || defined(STM32F048xx)\
 || defined(STM32F051x8) || defined(STM32F058xx)\
 || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 || defined(STM32F091xC) || defined(STM32F098xx)
  /*------------------------------ CEC clock Configuration -------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	681a      	ldr	r2, [r3, #0]
 800428c:	2380      	movs	r3, #128	; 0x80
 800428e:	00db      	lsls	r3, r3, #3
 8004290:	4013      	ands	r3, r2
 8004292:	d009      	beq.n	80042a8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8004294:	4b07      	ldr	r3, [pc, #28]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8004296:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004298:	2240      	movs	r2, #64	; 0x40
 800429a:	4393      	bics	r3, r2
 800429c:	0019      	movs	r1, r3
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	691a      	ldr	r2, [r3, #16]
 80042a2:	4b04      	ldr	r3, [pc, #16]	; (80042b4 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 80042a4:	430a      	orrs	r2, r1
 80042a6:	631a      	str	r2, [r3, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 80042a8:	2300      	movs	r3, #0
}
 80042aa:	0018      	movs	r0, r3
 80042ac:	46bd      	mov	sp, r7
 80042ae:	b006      	add	sp, #24
 80042b0:	bd80      	pop	{r7, pc}
 80042b2:	46c0      	nop			; (mov r8, r8)
 80042b4:	40021000 	.word	0x40021000
 80042b8:	40007000 	.word	0x40007000
 80042bc:	fffffcff 	.word	0xfffffcff
 80042c0:	fffeffff 	.word	0xfffeffff
 80042c4:	00001388 	.word	0x00001388
 80042c8:	efffffff 	.word	0xefffffff

080042cc <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80042cc:	b580      	push	{r7, lr}
 80042ce:	b082      	sub	sp, #8
 80042d0:	af00      	add	r7, sp, #0
 80042d2:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	d101      	bne.n	80042de <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80042da:	2301      	movs	r3, #1
 80042dc:	e044      	b.n	8004368 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d107      	bne.n	80042f6 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	2278      	movs	r2, #120	; 0x78
 80042ea:	2100      	movs	r1, #0
 80042ec:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	0018      	movs	r0, r3
 80042f2:	f7fe fae7 	bl	80028c4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	2224      	movs	r2, #36	; 0x24
 80042fa:	67da      	str	r2, [r3, #124]	; 0x7c

  __HAL_UART_DISABLE(huart);
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	681a      	ldr	r2, [r3, #0]
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	2101      	movs	r1, #1
 8004308:	438a      	bics	r2, r1
 800430a:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	0018      	movs	r0, r3
 8004310:	f000 f8d0 	bl	80044b4 <UART_SetConfig>
 8004314:	0003      	movs	r3, r0
 8004316:	2b01      	cmp	r3, #1
 8004318:	d101      	bne.n	800431e <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 800431a:	2301      	movs	r3, #1
 800431c:	e024      	b.n	8004368 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004322:	2b00      	cmp	r3, #0
 8004324:	d003      	beq.n	800432e <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	0018      	movs	r0, r3
 800432a:	f000 fa03 	bl	8004734 <UART_AdvFeatureConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	685a      	ldr	r2, [r3, #4]
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	490d      	ldr	r1, [pc, #52]	; (8004370 <HAL_UART_Init+0xa4>)
 800433a:	400a      	ands	r2, r1
 800433c:	605a      	str	r2, [r3, #4]
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
#endif /* USART_CR2_LINEN */
#if defined (USART_CR3_SCEN)
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	689a      	ldr	r2, [r3, #8]
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	212a      	movs	r1, #42	; 0x2a
 800434a:	438a      	bics	r2, r1
 800434c:	609a      	str	r2, [r3, #8]
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	681a      	ldr	r2, [r3, #0]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	2101      	movs	r1, #1
 800435a:	430a      	orrs	r2, r1
 800435c:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	0018      	movs	r0, r3
 8004362:	f000 fa9b 	bl	800489c <UART_CheckIdleState>
 8004366:	0003      	movs	r3, r0
}
 8004368:	0018      	movs	r0, r3
 800436a:	46bd      	mov	sp, r7
 800436c:	b002      	add	sp, #8
 800436e:	bd80      	pop	{r7, pc}
 8004370:	ffffb7ff 	.word	0xffffb7ff

08004374 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004374:	b580      	push	{r7, lr}
 8004376:	b08a      	sub	sp, #40	; 0x28
 8004378:	af02      	add	r7, sp, #8
 800437a:	60f8      	str	r0, [r7, #12]
 800437c:	60b9      	str	r1, [r7, #8]
 800437e:	603b      	str	r3, [r7, #0]
 8004380:	1dbb      	adds	r3, r7, #6
 8004382:	801a      	strh	r2, [r3, #0]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004388:	2b20      	cmp	r3, #32
 800438a:	d000      	beq.n	800438e <HAL_UART_Transmit+0x1a>
 800438c:	e08d      	b.n	80044aa <HAL_UART_Transmit+0x136>
  {
    if ((pData == NULL) || (Size == 0U))
 800438e:	68bb      	ldr	r3, [r7, #8]
 8004390:	2b00      	cmp	r3, #0
 8004392:	d003      	beq.n	800439c <HAL_UART_Transmit+0x28>
 8004394:	1dbb      	adds	r3, r7, #6
 8004396:	881b      	ldrh	r3, [r3, #0]
 8004398:	2b00      	cmp	r3, #0
 800439a:	d101      	bne.n	80043a0 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 800439c:	2301      	movs	r3, #1
 800439e:	e085      	b.n	80044ac <HAL_UART_Transmit+0x138>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	689a      	ldr	r2, [r3, #8]
 80043a4:	2380      	movs	r3, #128	; 0x80
 80043a6:	015b      	lsls	r3, r3, #5
 80043a8:	429a      	cmp	r2, r3
 80043aa:	d109      	bne.n	80043c0 <HAL_UART_Transmit+0x4c>
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	691b      	ldr	r3, [r3, #16]
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d105      	bne.n	80043c0 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 80043b4:	68bb      	ldr	r3, [r7, #8]
 80043b6:	2201      	movs	r2, #1
 80043b8:	4013      	ands	r3, r2
 80043ba:	d001      	beq.n	80043c0 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 80043bc:	2301      	movs	r3, #1
 80043be:	e075      	b.n	80044ac <HAL_UART_Transmit+0x138>
      }
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	2284      	movs	r2, #132	; 0x84
 80043c4:	2100      	movs	r1, #0
 80043c6:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	2221      	movs	r2, #33	; 0x21
 80043cc:	67da      	str	r2, [r3, #124]	; 0x7c

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80043ce:	f7fe fc25 	bl	8002c1c <HAL_GetTick>
 80043d2:	0003      	movs	r3, r0
 80043d4:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	1dba      	adds	r2, r7, #6
 80043da:	2150      	movs	r1, #80	; 0x50
 80043dc:	8812      	ldrh	r2, [r2, #0]
 80043de:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	1dba      	adds	r2, r7, #6
 80043e4:	2152      	movs	r1, #82	; 0x52
 80043e6:	8812      	ldrh	r2, [r2, #0]
 80043e8:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	689a      	ldr	r2, [r3, #8]
 80043ee:	2380      	movs	r3, #128	; 0x80
 80043f0:	015b      	lsls	r3, r3, #5
 80043f2:	429a      	cmp	r2, r3
 80043f4:	d108      	bne.n	8004408 <HAL_UART_Transmit+0x94>
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	691b      	ldr	r3, [r3, #16]
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d104      	bne.n	8004408 <HAL_UART_Transmit+0x94>
    {
      pdata8bits  = NULL;
 80043fe:	2300      	movs	r3, #0
 8004400:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8004402:	68bb      	ldr	r3, [r7, #8]
 8004404:	61bb      	str	r3, [r7, #24]
 8004406:	e003      	b.n	8004410 <HAL_UART_Transmit+0x9c>
    }
    else
    {
      pdata8bits  = pData;
 8004408:	68bb      	ldr	r3, [r7, #8]
 800440a:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800440c:	2300      	movs	r3, #0
 800440e:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8004410:	e030      	b.n	8004474 <HAL_UART_Transmit+0x100>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8004412:	697a      	ldr	r2, [r7, #20]
 8004414:	68f8      	ldr	r0, [r7, #12]
 8004416:	683b      	ldr	r3, [r7, #0]
 8004418:	9300      	str	r3, [sp, #0]
 800441a:	0013      	movs	r3, r2
 800441c:	2200      	movs	r2, #0
 800441e:	2180      	movs	r1, #128	; 0x80
 8004420:	f000 fae4 	bl	80049ec <UART_WaitOnFlagUntilTimeout>
 8004424:	1e03      	subs	r3, r0, #0
 8004426:	d004      	beq.n	8004432 <HAL_UART_Transmit+0xbe>
      {

        huart->gState = HAL_UART_STATE_READY;
 8004428:	68fb      	ldr	r3, [r7, #12]
 800442a:	2220      	movs	r2, #32
 800442c:	67da      	str	r2, [r3, #124]	; 0x7c

        return HAL_TIMEOUT;
 800442e:	2303      	movs	r3, #3
 8004430:	e03c      	b.n	80044ac <HAL_UART_Transmit+0x138>
      }
      if (pdata8bits == NULL)
 8004432:	69fb      	ldr	r3, [r7, #28]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d10b      	bne.n	8004450 <HAL_UART_Transmit+0xdc>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004438:	69bb      	ldr	r3, [r7, #24]
 800443a:	881a      	ldrh	r2, [r3, #0]
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	05d2      	lsls	r2, r2, #23
 8004442:	0dd2      	lsrs	r2, r2, #23
 8004444:	b292      	uxth	r2, r2
 8004446:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8004448:	69bb      	ldr	r3, [r7, #24]
 800444a:	3302      	adds	r3, #2
 800444c:	61bb      	str	r3, [r7, #24]
 800444e:	e008      	b.n	8004462 <HAL_UART_Transmit+0xee>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004450:	69fb      	ldr	r3, [r7, #28]
 8004452:	781a      	ldrb	r2, [r3, #0]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	b292      	uxth	r2, r2
 800445a:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 800445c:	69fb      	ldr	r3, [r7, #28]
 800445e:	3301      	adds	r3, #1
 8004460:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8004462:	68fb      	ldr	r3, [r7, #12]
 8004464:	2252      	movs	r2, #82	; 0x52
 8004466:	5a9b      	ldrh	r3, [r3, r2]
 8004468:	b29b      	uxth	r3, r3
 800446a:	3b01      	subs	r3, #1
 800446c:	b299      	uxth	r1, r3
 800446e:	68fb      	ldr	r3, [r7, #12]
 8004470:	2252      	movs	r2, #82	; 0x52
 8004472:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8004474:	68fb      	ldr	r3, [r7, #12]
 8004476:	2252      	movs	r2, #82	; 0x52
 8004478:	5a9b      	ldrh	r3, [r3, r2]
 800447a:	b29b      	uxth	r3, r3
 800447c:	2b00      	cmp	r3, #0
 800447e:	d1c8      	bne.n	8004412 <HAL_UART_Transmit+0x9e>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8004480:	697a      	ldr	r2, [r7, #20]
 8004482:	68f8      	ldr	r0, [r7, #12]
 8004484:	683b      	ldr	r3, [r7, #0]
 8004486:	9300      	str	r3, [sp, #0]
 8004488:	0013      	movs	r3, r2
 800448a:	2200      	movs	r2, #0
 800448c:	2140      	movs	r1, #64	; 0x40
 800448e:	f000 faad 	bl	80049ec <UART_WaitOnFlagUntilTimeout>
 8004492:	1e03      	subs	r3, r0, #0
 8004494:	d004      	beq.n	80044a0 <HAL_UART_Transmit+0x12c>
    {
      huart->gState = HAL_UART_STATE_READY;
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	2220      	movs	r2, #32
 800449a:	67da      	str	r2, [r3, #124]	; 0x7c

      return HAL_TIMEOUT;
 800449c:	2303      	movs	r3, #3
 800449e:	e005      	b.n	80044ac <HAL_UART_Transmit+0x138>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	2220      	movs	r2, #32
 80044a4:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 80044a6:	2300      	movs	r3, #0
 80044a8:	e000      	b.n	80044ac <HAL_UART_Transmit+0x138>
  }
  else
  {
    return HAL_BUSY;
 80044aa:	2302      	movs	r3, #2
  }
}
 80044ac:	0018      	movs	r0, r3
 80044ae:	46bd      	mov	sp, r7
 80044b0:	b008      	add	sp, #32
 80044b2:	bd80      	pop	{r7, pc}

080044b4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80044b4:	b580      	push	{r7, lr}
 80044b6:	b088      	sub	sp, #32
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80044bc:	231e      	movs	r3, #30
 80044be:	18fb      	adds	r3, r7, r3
 80044c0:	2200      	movs	r2, #0
 80044c2:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	689a      	ldr	r2, [r3, #8]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	691b      	ldr	r3, [r3, #16]
 80044cc:	431a      	orrs	r2, r3
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	695b      	ldr	r3, [r3, #20]
 80044d2:	431a      	orrs	r2, r3
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	69db      	ldr	r3, [r3, #28]
 80044d8:	4313      	orrs	r3, r2
 80044da:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	4a8d      	ldr	r2, [pc, #564]	; (8004718 <UART_SetConfig+0x264>)
 80044e4:	4013      	ands	r3, r2
 80044e6:	0019      	movs	r1, r3
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	697a      	ldr	r2, [r7, #20]
 80044ee:	430a      	orrs	r2, r1
 80044f0:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	685b      	ldr	r3, [r3, #4]
 80044f8:	4a88      	ldr	r2, [pc, #544]	; (800471c <UART_SetConfig+0x268>)
 80044fa:	4013      	ands	r3, r2
 80044fc:	0019      	movs	r1, r3
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	68da      	ldr	r2, [r3, #12]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	430a      	orrs	r2, r1
 8004508:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	699b      	ldr	r3, [r3, #24]
 800450e:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	6a1b      	ldr	r3, [r3, #32]
 8004514:	697a      	ldr	r2, [r7, #20]
 8004516:	4313      	orrs	r3, r2
 8004518:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	689b      	ldr	r3, [r3, #8]
 8004520:	4a7f      	ldr	r2, [pc, #508]	; (8004720 <UART_SetConfig+0x26c>)
 8004522:	4013      	ands	r3, r2
 8004524:	0019      	movs	r1, r3
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	697a      	ldr	r2, [r7, #20]
 800452c:	430a      	orrs	r2, r1
 800452e:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4a7b      	ldr	r2, [pc, #492]	; (8004724 <UART_SetConfig+0x270>)
 8004536:	4293      	cmp	r3, r2
 8004538:	d127      	bne.n	800458a <UART_SetConfig+0xd6>
 800453a:	4b7b      	ldr	r3, [pc, #492]	; (8004728 <UART_SetConfig+0x274>)
 800453c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800453e:	2203      	movs	r2, #3
 8004540:	4013      	ands	r3, r2
 8004542:	2b03      	cmp	r3, #3
 8004544:	d00d      	beq.n	8004562 <UART_SetConfig+0xae>
 8004546:	d81b      	bhi.n	8004580 <UART_SetConfig+0xcc>
 8004548:	2b02      	cmp	r3, #2
 800454a:	d014      	beq.n	8004576 <UART_SetConfig+0xc2>
 800454c:	d818      	bhi.n	8004580 <UART_SetConfig+0xcc>
 800454e:	2b00      	cmp	r3, #0
 8004550:	d002      	beq.n	8004558 <UART_SetConfig+0xa4>
 8004552:	2b01      	cmp	r3, #1
 8004554:	d00a      	beq.n	800456c <UART_SetConfig+0xb8>
 8004556:	e013      	b.n	8004580 <UART_SetConfig+0xcc>
 8004558:	231f      	movs	r3, #31
 800455a:	18fb      	adds	r3, r7, r3
 800455c:	2200      	movs	r2, #0
 800455e:	701a      	strb	r2, [r3, #0]
 8004560:	e021      	b.n	80045a6 <UART_SetConfig+0xf2>
 8004562:	231f      	movs	r3, #31
 8004564:	18fb      	adds	r3, r7, r3
 8004566:	2202      	movs	r2, #2
 8004568:	701a      	strb	r2, [r3, #0]
 800456a:	e01c      	b.n	80045a6 <UART_SetConfig+0xf2>
 800456c:	231f      	movs	r3, #31
 800456e:	18fb      	adds	r3, r7, r3
 8004570:	2204      	movs	r2, #4
 8004572:	701a      	strb	r2, [r3, #0]
 8004574:	e017      	b.n	80045a6 <UART_SetConfig+0xf2>
 8004576:	231f      	movs	r3, #31
 8004578:	18fb      	adds	r3, r7, r3
 800457a:	2208      	movs	r2, #8
 800457c:	701a      	strb	r2, [r3, #0]
 800457e:	e012      	b.n	80045a6 <UART_SetConfig+0xf2>
 8004580:	231f      	movs	r3, #31
 8004582:	18fb      	adds	r3, r7, r3
 8004584:	2210      	movs	r2, #16
 8004586:	701a      	strb	r2, [r3, #0]
 8004588:	e00d      	b.n	80045a6 <UART_SetConfig+0xf2>
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	4a67      	ldr	r2, [pc, #412]	; (800472c <UART_SetConfig+0x278>)
 8004590:	4293      	cmp	r3, r2
 8004592:	d104      	bne.n	800459e <UART_SetConfig+0xea>
 8004594:	231f      	movs	r3, #31
 8004596:	18fb      	adds	r3, r7, r3
 8004598:	2200      	movs	r2, #0
 800459a:	701a      	strb	r2, [r3, #0]
 800459c:	e003      	b.n	80045a6 <UART_SetConfig+0xf2>
 800459e:	231f      	movs	r3, #31
 80045a0:	18fb      	adds	r3, r7, r3
 80045a2:	2210      	movs	r2, #16
 80045a4:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	69da      	ldr	r2, [r3, #28]
 80045aa:	2380      	movs	r3, #128	; 0x80
 80045ac:	021b      	lsls	r3, r3, #8
 80045ae:	429a      	cmp	r2, r3
 80045b0:	d15c      	bne.n	800466c <UART_SetConfig+0x1b8>
  {
    switch (clocksource)
 80045b2:	231f      	movs	r3, #31
 80045b4:	18fb      	adds	r3, r7, r3
 80045b6:	781b      	ldrb	r3, [r3, #0]
 80045b8:	2b08      	cmp	r3, #8
 80045ba:	d015      	beq.n	80045e8 <UART_SetConfig+0x134>
 80045bc:	dc18      	bgt.n	80045f0 <UART_SetConfig+0x13c>
 80045be:	2b04      	cmp	r3, #4
 80045c0:	d00d      	beq.n	80045de <UART_SetConfig+0x12a>
 80045c2:	dc15      	bgt.n	80045f0 <UART_SetConfig+0x13c>
 80045c4:	2b00      	cmp	r3, #0
 80045c6:	d002      	beq.n	80045ce <UART_SetConfig+0x11a>
 80045c8:	2b02      	cmp	r3, #2
 80045ca:	d005      	beq.n	80045d8 <UART_SetConfig+0x124>
 80045cc:	e010      	b.n	80045f0 <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80045ce:	f7ff fd89 	bl	80040e4 <HAL_RCC_GetPCLK1Freq>
 80045d2:	0003      	movs	r3, r0
 80045d4:	61bb      	str	r3, [r7, #24]
        break;
 80045d6:	e012      	b.n	80045fe <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80045d8:	4b55      	ldr	r3, [pc, #340]	; (8004730 <UART_SetConfig+0x27c>)
 80045da:	61bb      	str	r3, [r7, #24]
        break;
 80045dc:	e00f      	b.n	80045fe <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80045de:	f7ff fd21 	bl	8004024 <HAL_RCC_GetSysClockFreq>
 80045e2:	0003      	movs	r3, r0
 80045e4:	61bb      	str	r3, [r7, #24]
        break;
 80045e6:	e00a      	b.n	80045fe <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80045e8:	2380      	movs	r3, #128	; 0x80
 80045ea:	021b      	lsls	r3, r3, #8
 80045ec:	61bb      	str	r3, [r7, #24]
        break;
 80045ee:	e006      	b.n	80045fe <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 80045f0:	2300      	movs	r3, #0
 80045f2:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80045f4:	231e      	movs	r3, #30
 80045f6:	18fb      	adds	r3, r7, r3
 80045f8:	2201      	movs	r2, #1
 80045fa:	701a      	strb	r2, [r3, #0]
        break;
 80045fc:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 80045fe:	69bb      	ldr	r3, [r7, #24]
 8004600:	2b00      	cmp	r3, #0
 8004602:	d100      	bne.n	8004606 <UART_SetConfig+0x152>
 8004604:	e07a      	b.n	80046fc <UART_SetConfig+0x248>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004606:	69bb      	ldr	r3, [r7, #24]
 8004608:	005a      	lsls	r2, r3, #1
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	685b      	ldr	r3, [r3, #4]
 800460e:	085b      	lsrs	r3, r3, #1
 8004610:	18d2      	adds	r2, r2, r3
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	685b      	ldr	r3, [r3, #4]
 8004616:	0019      	movs	r1, r3
 8004618:	0010      	movs	r0, r2
 800461a:	f7fb fd91 	bl	8000140 <__udivsi3>
 800461e:	0003      	movs	r3, r0
 8004620:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004622:	693b      	ldr	r3, [r7, #16]
 8004624:	2b0f      	cmp	r3, #15
 8004626:	d91c      	bls.n	8004662 <UART_SetConfig+0x1ae>
 8004628:	693a      	ldr	r2, [r7, #16]
 800462a:	2380      	movs	r3, #128	; 0x80
 800462c:	025b      	lsls	r3, r3, #9
 800462e:	429a      	cmp	r2, r3
 8004630:	d217      	bcs.n	8004662 <UART_SetConfig+0x1ae>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004632:	693b      	ldr	r3, [r7, #16]
 8004634:	b29a      	uxth	r2, r3
 8004636:	200e      	movs	r0, #14
 8004638:	183b      	adds	r3, r7, r0
 800463a:	210f      	movs	r1, #15
 800463c:	438a      	bics	r2, r1
 800463e:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004640:	693b      	ldr	r3, [r7, #16]
 8004642:	085b      	lsrs	r3, r3, #1
 8004644:	b29b      	uxth	r3, r3
 8004646:	2207      	movs	r2, #7
 8004648:	4013      	ands	r3, r2
 800464a:	b299      	uxth	r1, r3
 800464c:	183b      	adds	r3, r7, r0
 800464e:	183a      	adds	r2, r7, r0
 8004650:	8812      	ldrh	r2, [r2, #0]
 8004652:	430a      	orrs	r2, r1
 8004654:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	183a      	adds	r2, r7, r0
 800465c:	8812      	ldrh	r2, [r2, #0]
 800465e:	60da      	str	r2, [r3, #12]
 8004660:	e04c      	b.n	80046fc <UART_SetConfig+0x248>
      }
      else
      {
        ret = HAL_ERROR;
 8004662:	231e      	movs	r3, #30
 8004664:	18fb      	adds	r3, r7, r3
 8004666:	2201      	movs	r2, #1
 8004668:	701a      	strb	r2, [r3, #0]
 800466a:	e047      	b.n	80046fc <UART_SetConfig+0x248>
      }
    }
  }
  else
  {
    switch (clocksource)
 800466c:	231f      	movs	r3, #31
 800466e:	18fb      	adds	r3, r7, r3
 8004670:	781b      	ldrb	r3, [r3, #0]
 8004672:	2b08      	cmp	r3, #8
 8004674:	d015      	beq.n	80046a2 <UART_SetConfig+0x1ee>
 8004676:	dc18      	bgt.n	80046aa <UART_SetConfig+0x1f6>
 8004678:	2b04      	cmp	r3, #4
 800467a:	d00d      	beq.n	8004698 <UART_SetConfig+0x1e4>
 800467c:	dc15      	bgt.n	80046aa <UART_SetConfig+0x1f6>
 800467e:	2b00      	cmp	r3, #0
 8004680:	d002      	beq.n	8004688 <UART_SetConfig+0x1d4>
 8004682:	2b02      	cmp	r3, #2
 8004684:	d005      	beq.n	8004692 <UART_SetConfig+0x1de>
 8004686:	e010      	b.n	80046aa <UART_SetConfig+0x1f6>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8004688:	f7ff fd2c 	bl	80040e4 <HAL_RCC_GetPCLK1Freq>
 800468c:	0003      	movs	r3, r0
 800468e:	61bb      	str	r3, [r7, #24]
        break;
 8004690:	e012      	b.n	80046b8 <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8004692:	4b27      	ldr	r3, [pc, #156]	; (8004730 <UART_SetConfig+0x27c>)
 8004694:	61bb      	str	r3, [r7, #24]
        break;
 8004696:	e00f      	b.n	80046b8 <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8004698:	f7ff fcc4 	bl	8004024 <HAL_RCC_GetSysClockFreq>
 800469c:	0003      	movs	r3, r0
 800469e:	61bb      	str	r3, [r7, #24]
        break;
 80046a0:	e00a      	b.n	80046b8 <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80046a2:	2380      	movs	r3, #128	; 0x80
 80046a4:	021b      	lsls	r3, r3, #8
 80046a6:	61bb      	str	r3, [r7, #24]
        break;
 80046a8:	e006      	b.n	80046b8 <UART_SetConfig+0x204>
      default:
        pclk = 0U;
 80046aa:	2300      	movs	r3, #0
 80046ac:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80046ae:	231e      	movs	r3, #30
 80046b0:	18fb      	adds	r3, r7, r3
 80046b2:	2201      	movs	r2, #1
 80046b4:	701a      	strb	r2, [r3, #0]
        break;
 80046b6:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 80046b8:	69bb      	ldr	r3, [r7, #24]
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d01e      	beq.n	80046fc <UART_SetConfig+0x248>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	685b      	ldr	r3, [r3, #4]
 80046c2:	085a      	lsrs	r2, r3, #1
 80046c4:	69bb      	ldr	r3, [r7, #24]
 80046c6:	18d2      	adds	r2, r2, r3
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	685b      	ldr	r3, [r3, #4]
 80046cc:	0019      	movs	r1, r3
 80046ce:	0010      	movs	r0, r2
 80046d0:	f7fb fd36 	bl	8000140 <__udivsi3>
 80046d4:	0003      	movs	r3, r0
 80046d6:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80046d8:	693b      	ldr	r3, [r7, #16]
 80046da:	2b0f      	cmp	r3, #15
 80046dc:	d90a      	bls.n	80046f4 <UART_SetConfig+0x240>
 80046de:	693a      	ldr	r2, [r7, #16]
 80046e0:	2380      	movs	r3, #128	; 0x80
 80046e2:	025b      	lsls	r3, r3, #9
 80046e4:	429a      	cmp	r2, r3
 80046e6:	d205      	bcs.n	80046f4 <UART_SetConfig+0x240>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 80046e8:	693b      	ldr	r3, [r7, #16]
 80046ea:	b29a      	uxth	r2, r3
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	60da      	str	r2, [r3, #12]
 80046f2:	e003      	b.n	80046fc <UART_SetConfig+0x248>
      }
      else
      {
        ret = HAL_ERROR;
 80046f4:	231e      	movs	r3, #30
 80046f6:	18fb      	adds	r3, r7, r3
 80046f8:	2201      	movs	r2, #1
 80046fa:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	2200      	movs	r2, #0
 8004700:	669a      	str	r2, [r3, #104]	; 0x68
  huart->TxISR = NULL;
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	2200      	movs	r2, #0
 8004706:	66da      	str	r2, [r3, #108]	; 0x6c

  return ret;
 8004708:	231e      	movs	r3, #30
 800470a:	18fb      	adds	r3, r7, r3
 800470c:	781b      	ldrb	r3, [r3, #0]
}
 800470e:	0018      	movs	r0, r3
 8004710:	46bd      	mov	sp, r7
 8004712:	b008      	add	sp, #32
 8004714:	bd80      	pop	{r7, pc}
 8004716:	46c0      	nop			; (mov r8, r8)
 8004718:	ffff69f3 	.word	0xffff69f3
 800471c:	ffffcfff 	.word	0xffffcfff
 8004720:	fffff4ff 	.word	0xfffff4ff
 8004724:	40013800 	.word	0x40013800
 8004728:	40021000 	.word	0x40021000
 800472c:	40004400 	.word	0x40004400
 8004730:	007a1200 	.word	0x007a1200

08004734 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8004734:	b580      	push	{r7, lr}
 8004736:	b082      	sub	sp, #8
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004740:	2201      	movs	r2, #1
 8004742:	4013      	ands	r3, r2
 8004744:	d00b      	beq.n	800475e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	685b      	ldr	r3, [r3, #4]
 800474c:	4a4a      	ldr	r2, [pc, #296]	; (8004878 <UART_AdvFeatureConfig+0x144>)
 800474e:	4013      	ands	r3, r2
 8004750:	0019      	movs	r1, r3
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	430a      	orrs	r2, r1
 800475c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004762:	2202      	movs	r2, #2
 8004764:	4013      	ands	r3, r2
 8004766:	d00b      	beq.n	8004780 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	685b      	ldr	r3, [r3, #4]
 800476e:	4a43      	ldr	r2, [pc, #268]	; (800487c <UART_AdvFeatureConfig+0x148>)
 8004770:	4013      	ands	r3, r2
 8004772:	0019      	movs	r1, r3
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	430a      	orrs	r2, r1
 800477e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004784:	2204      	movs	r2, #4
 8004786:	4013      	ands	r3, r2
 8004788:	d00b      	beq.n	80047a2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	685b      	ldr	r3, [r3, #4]
 8004790:	4a3b      	ldr	r2, [pc, #236]	; (8004880 <UART_AdvFeatureConfig+0x14c>)
 8004792:	4013      	ands	r3, r2
 8004794:	0019      	movs	r1, r3
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	430a      	orrs	r2, r1
 80047a0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a6:	2208      	movs	r2, #8
 80047a8:	4013      	ands	r3, r2
 80047aa:	d00b      	beq.n	80047c4 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	685b      	ldr	r3, [r3, #4]
 80047b2:	4a34      	ldr	r2, [pc, #208]	; (8004884 <UART_AdvFeatureConfig+0x150>)
 80047b4:	4013      	ands	r3, r2
 80047b6:	0019      	movs	r1, r3
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	430a      	orrs	r2, r1
 80047c2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047c8:	2210      	movs	r2, #16
 80047ca:	4013      	ands	r3, r2
 80047cc:	d00b      	beq.n	80047e6 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	689b      	ldr	r3, [r3, #8]
 80047d4:	4a2c      	ldr	r2, [pc, #176]	; (8004888 <UART_AdvFeatureConfig+0x154>)
 80047d6:	4013      	ands	r3, r2
 80047d8:	0019      	movs	r1, r3
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	430a      	orrs	r2, r1
 80047e4:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047ea:	2220      	movs	r2, #32
 80047ec:	4013      	ands	r3, r2
 80047ee:	d00b      	beq.n	8004808 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	689b      	ldr	r3, [r3, #8]
 80047f6:	4a25      	ldr	r2, [pc, #148]	; (800488c <UART_AdvFeatureConfig+0x158>)
 80047f8:	4013      	ands	r3, r2
 80047fa:	0019      	movs	r1, r3
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	430a      	orrs	r2, r1
 8004806:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800480c:	2240      	movs	r2, #64	; 0x40
 800480e:	4013      	ands	r3, r2
 8004810:	d01d      	beq.n	800484e <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	4a1d      	ldr	r2, [pc, #116]	; (8004890 <UART_AdvFeatureConfig+0x15c>)
 800481a:	4013      	ands	r3, r2
 800481c:	0019      	movs	r1, r3
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	430a      	orrs	r2, r1
 8004828:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800482e:	2380      	movs	r3, #128	; 0x80
 8004830:	035b      	lsls	r3, r3, #13
 8004832:	429a      	cmp	r2, r3
 8004834:	d10b      	bne.n	800484e <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	685b      	ldr	r3, [r3, #4]
 800483c:	4a15      	ldr	r2, [pc, #84]	; (8004894 <UART_AdvFeatureConfig+0x160>)
 800483e:	4013      	ands	r3, r2
 8004840:	0019      	movs	r1, r3
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	430a      	orrs	r2, r1
 800484c:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004852:	2280      	movs	r2, #128	; 0x80
 8004854:	4013      	ands	r3, r2
 8004856:	d00b      	beq.n	8004870 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	685b      	ldr	r3, [r3, #4]
 800485e:	4a0e      	ldr	r2, [pc, #56]	; (8004898 <UART_AdvFeatureConfig+0x164>)
 8004860:	4013      	ands	r3, r2
 8004862:	0019      	movs	r1, r3
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	430a      	orrs	r2, r1
 800486e:	605a      	str	r2, [r3, #4]
  }
}
 8004870:	46c0      	nop			; (mov r8, r8)
 8004872:	46bd      	mov	sp, r7
 8004874:	b002      	add	sp, #8
 8004876:	bd80      	pop	{r7, pc}
 8004878:	fffdffff 	.word	0xfffdffff
 800487c:	fffeffff 	.word	0xfffeffff
 8004880:	fffbffff 	.word	0xfffbffff
 8004884:	ffff7fff 	.word	0xffff7fff
 8004888:	ffffefff 	.word	0xffffefff
 800488c:	ffffdfff 	.word	0xffffdfff
 8004890:	ffefffff 	.word	0xffefffff
 8004894:	ff9fffff 	.word	0xff9fffff
 8004898:	fff7ffff 	.word	0xfff7ffff

0800489c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800489c:	b580      	push	{r7, lr}
 800489e:	b092      	sub	sp, #72	; 0x48
 80048a0:	af02      	add	r7, sp, #8
 80048a2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	2284      	movs	r2, #132	; 0x84
 80048a8:	2100      	movs	r1, #0
 80048aa:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 80048ac:	f7fe f9b6 	bl	8002c1c <HAL_GetTick>
 80048b0:	0003      	movs	r3, r0
 80048b2:	63fb      	str	r3, [r7, #60]	; 0x3c

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	2208      	movs	r2, #8
 80048bc:	4013      	ands	r3, r2
 80048be:	2b08      	cmp	r3, #8
 80048c0:	d12c      	bne.n	800491c <UART_CheckIdleState+0x80>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80048c2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80048c4:	2280      	movs	r2, #128	; 0x80
 80048c6:	0391      	lsls	r1, r2, #14
 80048c8:	6878      	ldr	r0, [r7, #4]
 80048ca:	4a46      	ldr	r2, [pc, #280]	; (80049e4 <UART_CheckIdleState+0x148>)
 80048cc:	9200      	str	r2, [sp, #0]
 80048ce:	2200      	movs	r2, #0
 80048d0:	f000 f88c 	bl	80049ec <UART_WaitOnFlagUntilTimeout>
 80048d4:	1e03      	subs	r3, r0, #0
 80048d6:	d021      	beq.n	800491c <UART_CheckIdleState+0x80>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80048d8:	f3ef 8310 	mrs	r3, PRIMASK
 80048dc:	627b      	str	r3, [r7, #36]	; 0x24
  return(result);
 80048de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 80048e0:	63bb      	str	r3, [r7, #56]	; 0x38
 80048e2:	2301      	movs	r3, #1
 80048e4:	62bb      	str	r3, [r7, #40]	; 0x28
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80048e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048e8:	f383 8810 	msr	PRIMASK, r3
}
 80048ec:	46c0      	nop			; (mov r8, r8)
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	681a      	ldr	r2, [r3, #0]
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	2180      	movs	r1, #128	; 0x80
 80048fa:	438a      	bics	r2, r1
 80048fc:	601a      	str	r2, [r3, #0]
 80048fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004900:	62fb      	str	r3, [r7, #44]	; 0x2c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004902:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004904:	f383 8810 	msr	PRIMASK, r3
}
 8004908:	46c0      	nop			; (mov r8, r8)

      huart->gState = HAL_UART_STATE_READY;
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	2220      	movs	r2, #32
 800490e:	67da      	str	r2, [r3, #124]	; 0x7c

      __HAL_UNLOCK(huart);
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	2278      	movs	r2, #120	; 0x78
 8004914:	2100      	movs	r1, #0
 8004916:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004918:	2303      	movs	r3, #3
 800491a:	e05f      	b.n	80049dc <UART_CheckIdleState+0x140>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	2204      	movs	r2, #4
 8004924:	4013      	ands	r3, r2
 8004926:	2b04      	cmp	r3, #4
 8004928:	d146      	bne.n	80049b8 <UART_CheckIdleState+0x11c>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800492a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800492c:	2280      	movs	r2, #128	; 0x80
 800492e:	03d1      	lsls	r1, r2, #15
 8004930:	6878      	ldr	r0, [r7, #4]
 8004932:	4a2c      	ldr	r2, [pc, #176]	; (80049e4 <UART_CheckIdleState+0x148>)
 8004934:	9200      	str	r2, [sp, #0]
 8004936:	2200      	movs	r2, #0
 8004938:	f000 f858 	bl	80049ec <UART_WaitOnFlagUntilTimeout>
 800493c:	1e03      	subs	r3, r0, #0
 800493e:	d03b      	beq.n	80049b8 <UART_CheckIdleState+0x11c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004940:	f3ef 8310 	mrs	r3, PRIMASK
 8004944:	60fb      	str	r3, [r7, #12]
  return(result);
 8004946:	68fb      	ldr	r3, [r7, #12]
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8004948:	637b      	str	r3, [r7, #52]	; 0x34
 800494a:	2301      	movs	r3, #1
 800494c:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800494e:	693b      	ldr	r3, [r7, #16]
 8004950:	f383 8810 	msr	PRIMASK, r3
}
 8004954:	46c0      	nop			; (mov r8, r8)
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	681a      	ldr	r2, [r3, #0]
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	4921      	ldr	r1, [pc, #132]	; (80049e8 <UART_CheckIdleState+0x14c>)
 8004962:	400a      	ands	r2, r1
 8004964:	601a      	str	r2, [r3, #0]
 8004966:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004968:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800496a:	697b      	ldr	r3, [r7, #20]
 800496c:	f383 8810 	msr	PRIMASK, r3
}
 8004970:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004972:	f3ef 8310 	mrs	r3, PRIMASK
 8004976:	61bb      	str	r3, [r7, #24]
  return(result);
 8004978:	69bb      	ldr	r3, [r7, #24]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800497a:	633b      	str	r3, [r7, #48]	; 0x30
 800497c:	2301      	movs	r3, #1
 800497e:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004980:	69fb      	ldr	r3, [r7, #28]
 8004982:	f383 8810 	msr	PRIMASK, r3
}
 8004986:	46c0      	nop			; (mov r8, r8)
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	689a      	ldr	r2, [r3, #8]
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	2101      	movs	r1, #1
 8004994:	438a      	bics	r2, r1
 8004996:	609a      	str	r2, [r3, #8]
 8004998:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800499a:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800499c:	6a3b      	ldr	r3, [r7, #32]
 800499e:	f383 8810 	msr	PRIMASK, r3
}
 80049a2:	46c0      	nop			; (mov r8, r8)

      huart->RxState = HAL_UART_STATE_READY;
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	2280      	movs	r2, #128	; 0x80
 80049a8:	2120      	movs	r1, #32
 80049aa:	5099      	str	r1, [r3, r2]

      __HAL_UNLOCK(huart);
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	2278      	movs	r2, #120	; 0x78
 80049b0:	2100      	movs	r1, #0
 80049b2:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
 80049b4:	2303      	movs	r3, #3
 80049b6:	e011      	b.n	80049dc <UART_CheckIdleState+0x140>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2220      	movs	r2, #32
 80049bc:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	2280      	movs	r2, #128	; 0x80
 80049c2:	2120      	movs	r1, #32
 80049c4:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	2200      	movs	r2, #0
 80049ca:	661a      	str	r2, [r3, #96]	; 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	2200      	movs	r2, #0
 80049d0:	665a      	str	r2, [r3, #100]	; 0x64

  __HAL_UNLOCK(huart);
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	2278      	movs	r2, #120	; 0x78
 80049d6:	2100      	movs	r1, #0
 80049d8:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80049da:	2300      	movs	r3, #0
}
 80049dc:	0018      	movs	r0, r3
 80049de:	46bd      	mov	sp, r7
 80049e0:	b010      	add	sp, #64	; 0x40
 80049e2:	bd80      	pop	{r7, pc}
 80049e4:	01ffffff 	.word	0x01ffffff
 80049e8:	fffffedf 	.word	0xfffffedf

080049ec <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80049ec:	b580      	push	{r7, lr}
 80049ee:	b084      	sub	sp, #16
 80049f0:	af00      	add	r7, sp, #0
 80049f2:	60f8      	str	r0, [r7, #12]
 80049f4:	60b9      	str	r1, [r7, #8]
 80049f6:	603b      	str	r3, [r7, #0]
 80049f8:	1dfb      	adds	r3, r7, #7
 80049fa:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80049fc:	e04b      	b.n	8004a96 <UART_WaitOnFlagUntilTimeout+0xaa>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80049fe:	69bb      	ldr	r3, [r7, #24]
 8004a00:	3301      	adds	r3, #1
 8004a02:	d048      	beq.n	8004a96 <UART_WaitOnFlagUntilTimeout+0xaa>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a04:	f7fe f90a 	bl	8002c1c <HAL_GetTick>
 8004a08:	0002      	movs	r2, r0
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	1ad3      	subs	r3, r2, r3
 8004a0e:	69ba      	ldr	r2, [r7, #24]
 8004a10:	429a      	cmp	r2, r3
 8004a12:	d302      	bcc.n	8004a1a <UART_WaitOnFlagUntilTimeout+0x2e>
 8004a14:	69bb      	ldr	r3, [r7, #24]
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d101      	bne.n	8004a1e <UART_WaitOnFlagUntilTimeout+0x32>
      {

        return HAL_TIMEOUT;
 8004a1a:	2303      	movs	r3, #3
 8004a1c:	e04b      	b.n	8004ab6 <UART_WaitOnFlagUntilTimeout+0xca>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	2204      	movs	r2, #4
 8004a26:	4013      	ands	r3, r2
 8004a28:	d035      	beq.n	8004a96 <UART_WaitOnFlagUntilTimeout+0xaa>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	69db      	ldr	r3, [r3, #28]
 8004a30:	2208      	movs	r2, #8
 8004a32:	4013      	ands	r3, r2
 8004a34:	2b08      	cmp	r3, #8
 8004a36:	d111      	bne.n	8004a5c <UART_WaitOnFlagUntilTimeout+0x70>
        {
           /* Clear Overrun Error flag*/
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	2208      	movs	r2, #8
 8004a3e:	621a      	str	r2, [r3, #32]

           /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts if ongoing */
           UART_EndRxTransfer(huart);
 8004a40:	68fb      	ldr	r3, [r7, #12]
 8004a42:	0018      	movs	r0, r3
 8004a44:	f000 f83c 	bl	8004ac0 <UART_EndRxTransfer>

           huart->ErrorCode = HAL_UART_ERROR_ORE;
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	2284      	movs	r2, #132	; 0x84
 8004a4c:	2108      	movs	r1, #8
 8004a4e:	5099      	str	r1, [r3, r2]

           /* Process Unlocked */
           __HAL_UNLOCK(huart);
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	2278      	movs	r2, #120	; 0x78
 8004a54:	2100      	movs	r1, #0
 8004a56:	5499      	strb	r1, [r3, r2]

           return HAL_ERROR;
 8004a58:	2301      	movs	r3, #1
 8004a5a:	e02c      	b.n	8004ab6 <UART_WaitOnFlagUntilTimeout+0xca>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	69da      	ldr	r2, [r3, #28]
 8004a62:	2380      	movs	r3, #128	; 0x80
 8004a64:	011b      	lsls	r3, r3, #4
 8004a66:	401a      	ands	r2, r3
 8004a68:	2380      	movs	r3, #128	; 0x80
 8004a6a:	011b      	lsls	r3, r3, #4
 8004a6c:	429a      	cmp	r2, r3
 8004a6e:	d112      	bne.n	8004a96 <UART_WaitOnFlagUntilTimeout+0xaa>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	2280      	movs	r2, #128	; 0x80
 8004a76:	0112      	lsls	r2, r2, #4
 8004a78:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	0018      	movs	r0, r3
 8004a7e:	f000 f81f 	bl	8004ac0 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	2284      	movs	r2, #132	; 0x84
 8004a86:	2120      	movs	r1, #32
 8004a88:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	2278      	movs	r2, #120	; 0x78
 8004a8e:	2100      	movs	r1, #0
 8004a90:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8004a92:	2303      	movs	r3, #3
 8004a94:	e00f      	b.n	8004ab6 <UART_WaitOnFlagUntilTimeout+0xca>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004a96:	68fb      	ldr	r3, [r7, #12]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	69db      	ldr	r3, [r3, #28]
 8004a9c:	68ba      	ldr	r2, [r7, #8]
 8004a9e:	4013      	ands	r3, r2
 8004aa0:	68ba      	ldr	r2, [r7, #8]
 8004aa2:	1ad3      	subs	r3, r2, r3
 8004aa4:	425a      	negs	r2, r3
 8004aa6:	4153      	adcs	r3, r2
 8004aa8:	b2db      	uxtb	r3, r3
 8004aaa:	001a      	movs	r2, r3
 8004aac:	1dfb      	adds	r3, r7, #7
 8004aae:	781b      	ldrb	r3, [r3, #0]
 8004ab0:	429a      	cmp	r2, r3
 8004ab2:	d0a4      	beq.n	80049fe <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004ab4:	2300      	movs	r3, #0
}
 8004ab6:	0018      	movs	r0, r3
 8004ab8:	46bd      	mov	sp, r7
 8004aba:	b004      	add	sp, #16
 8004abc:	bd80      	pop	{r7, pc}
	...

08004ac0 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b08e      	sub	sp, #56	; 0x38
 8004ac4:	af00      	add	r7, sp, #0
 8004ac6:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004ac8:	f3ef 8310 	mrs	r3, PRIMASK
 8004acc:	617b      	str	r3, [r7, #20]
  return(result);
 8004ace:	697b      	ldr	r3, [r7, #20]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8004ad0:	637b      	str	r3, [r7, #52]	; 0x34
 8004ad2:	2301      	movs	r3, #1
 8004ad4:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004ad6:	69bb      	ldr	r3, [r7, #24]
 8004ad8:	f383 8810 	msr	PRIMASK, r3
}
 8004adc:	46c0      	nop			; (mov r8, r8)
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	681b      	ldr	r3, [r3, #0]
 8004ae2:	681a      	ldr	r2, [r3, #0]
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	4926      	ldr	r1, [pc, #152]	; (8004b84 <UART_EndRxTransfer+0xc4>)
 8004aea:	400a      	ands	r2, r1
 8004aec:	601a      	str	r2, [r3, #0]
 8004aee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004af0:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004af2:	69fb      	ldr	r3, [r7, #28]
 8004af4:	f383 8810 	msr	PRIMASK, r3
}
 8004af8:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004afa:	f3ef 8310 	mrs	r3, PRIMASK
 8004afe:	623b      	str	r3, [r7, #32]
  return(result);
 8004b00:	6a3b      	ldr	r3, [r7, #32]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004b02:	633b      	str	r3, [r7, #48]	; 0x30
 8004b04:	2301      	movs	r3, #1
 8004b06:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004b08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b0a:	f383 8810 	msr	PRIMASK, r3
}
 8004b0e:	46c0      	nop			; (mov r8, r8)
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	689a      	ldr	r2, [r3, #8]
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	2101      	movs	r1, #1
 8004b1c:	438a      	bics	r2, r1
 8004b1e:	609a      	str	r2, [r3, #8]
 8004b20:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b22:	62bb      	str	r3, [r7, #40]	; 0x28
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004b24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b26:	f383 8810 	msr	PRIMASK, r3
}
 8004b2a:	46c0      	nop			; (mov r8, r8)

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004b30:	2b01      	cmp	r3, #1
 8004b32:	d118      	bne.n	8004b66 <UART_EndRxTransfer+0xa6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004b34:	f3ef 8310 	mrs	r3, PRIMASK
 8004b38:	60bb      	str	r3, [r7, #8]
  return(result);
 8004b3a:	68bb      	ldr	r3, [r7, #8]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8004b3c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b3e:	2301      	movs	r3, #1
 8004b40:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004b42:	68fb      	ldr	r3, [r7, #12]
 8004b44:	f383 8810 	msr	PRIMASK, r3
}
 8004b48:	46c0      	nop			; (mov r8, r8)
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	681a      	ldr	r2, [r3, #0]
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	2110      	movs	r1, #16
 8004b56:	438a      	bics	r2, r1
 8004b58:	601a      	str	r2, [r3, #0]
 8004b5a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b5c:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004b5e:	693b      	ldr	r3, [r7, #16]
 8004b60:	f383 8810 	msr	PRIMASK, r3
}
 8004b64:	46c0      	nop			; (mov r8, r8)
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	2280      	movs	r2, #128	; 0x80
 8004b6a:	2120      	movs	r1, #32
 8004b6c:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	2200      	movs	r2, #0
 8004b72:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2200      	movs	r2, #0
 8004b78:	669a      	str	r2, [r3, #104]	; 0x68
}
 8004b7a:	46c0      	nop			; (mov r8, r8)
 8004b7c:	46bd      	mov	sp, r7
 8004b7e:	b00e      	add	sp, #56	; 0x38
 8004b80:	bd80      	pop	{r7, pc}
 8004b82:	46c0      	nop			; (mov r8, r8)
 8004b84:	fffffedf 	.word	0xfffffedf

08004b88 <__cvt>:
 8004b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b8a:	001e      	movs	r6, r3
 8004b8c:	2300      	movs	r3, #0
 8004b8e:	0014      	movs	r4, r2
 8004b90:	b08b      	sub	sp, #44	; 0x2c
 8004b92:	429e      	cmp	r6, r3
 8004b94:	da04      	bge.n	8004ba0 <__cvt+0x18>
 8004b96:	2180      	movs	r1, #128	; 0x80
 8004b98:	0609      	lsls	r1, r1, #24
 8004b9a:	1873      	adds	r3, r6, r1
 8004b9c:	001e      	movs	r6, r3
 8004b9e:	232d      	movs	r3, #45	; 0x2d
 8004ba0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ba2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004ba4:	7013      	strb	r3, [r2, #0]
 8004ba6:	2320      	movs	r3, #32
 8004ba8:	2203      	movs	r2, #3
 8004baa:	439f      	bics	r7, r3
 8004bac:	2f46      	cmp	r7, #70	; 0x46
 8004bae:	d007      	beq.n	8004bc0 <__cvt+0x38>
 8004bb0:	003b      	movs	r3, r7
 8004bb2:	3b45      	subs	r3, #69	; 0x45
 8004bb4:	4259      	negs	r1, r3
 8004bb6:	414b      	adcs	r3, r1
 8004bb8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004bba:	3a01      	subs	r2, #1
 8004bbc:	18cb      	adds	r3, r1, r3
 8004bbe:	9310      	str	r3, [sp, #64]	; 0x40
 8004bc0:	ab09      	add	r3, sp, #36	; 0x24
 8004bc2:	9304      	str	r3, [sp, #16]
 8004bc4:	ab08      	add	r3, sp, #32
 8004bc6:	9303      	str	r3, [sp, #12]
 8004bc8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004bca:	9200      	str	r2, [sp, #0]
 8004bcc:	9302      	str	r3, [sp, #8]
 8004bce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004bd0:	0022      	movs	r2, r4
 8004bd2:	9301      	str	r3, [sp, #4]
 8004bd4:	0033      	movs	r3, r6
 8004bd6:	f001 ff0f 	bl	80069f8 <_dtoa_r>
 8004bda:	0005      	movs	r5, r0
 8004bdc:	2f47      	cmp	r7, #71	; 0x47
 8004bde:	d102      	bne.n	8004be6 <__cvt+0x5e>
 8004be0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004be2:	07db      	lsls	r3, r3, #31
 8004be4:	d528      	bpl.n	8004c38 <__cvt+0xb0>
 8004be6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004be8:	18eb      	adds	r3, r5, r3
 8004bea:	9307      	str	r3, [sp, #28]
 8004bec:	2f46      	cmp	r7, #70	; 0x46
 8004bee:	d114      	bne.n	8004c1a <__cvt+0x92>
 8004bf0:	782b      	ldrb	r3, [r5, #0]
 8004bf2:	2b30      	cmp	r3, #48	; 0x30
 8004bf4:	d10c      	bne.n	8004c10 <__cvt+0x88>
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	2300      	movs	r3, #0
 8004bfa:	0020      	movs	r0, r4
 8004bfc:	0031      	movs	r1, r6
 8004bfe:	f7fb fc25 	bl	800044c <__aeabi_dcmpeq>
 8004c02:	2800      	cmp	r0, #0
 8004c04:	d104      	bne.n	8004c10 <__cvt+0x88>
 8004c06:	2301      	movs	r3, #1
 8004c08:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004c0a:	1a9b      	subs	r3, r3, r2
 8004c0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004c0e:	6013      	str	r3, [r2, #0]
 8004c10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004c12:	9a07      	ldr	r2, [sp, #28]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	18d3      	adds	r3, r2, r3
 8004c18:	9307      	str	r3, [sp, #28]
 8004c1a:	2200      	movs	r2, #0
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	0020      	movs	r0, r4
 8004c20:	0031      	movs	r1, r6
 8004c22:	f7fb fc13 	bl	800044c <__aeabi_dcmpeq>
 8004c26:	2800      	cmp	r0, #0
 8004c28:	d001      	beq.n	8004c2e <__cvt+0xa6>
 8004c2a:	9b07      	ldr	r3, [sp, #28]
 8004c2c:	9309      	str	r3, [sp, #36]	; 0x24
 8004c2e:	2230      	movs	r2, #48	; 0x30
 8004c30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c32:	9907      	ldr	r1, [sp, #28]
 8004c34:	428b      	cmp	r3, r1
 8004c36:	d306      	bcc.n	8004c46 <__cvt+0xbe>
 8004c38:	0028      	movs	r0, r5
 8004c3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c3c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004c3e:	1b5b      	subs	r3, r3, r5
 8004c40:	6013      	str	r3, [r2, #0]
 8004c42:	b00b      	add	sp, #44	; 0x2c
 8004c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c46:	1c59      	adds	r1, r3, #1
 8004c48:	9109      	str	r1, [sp, #36]	; 0x24
 8004c4a:	701a      	strb	r2, [r3, #0]
 8004c4c:	e7f0      	b.n	8004c30 <__cvt+0xa8>

08004c4e <__exponent>:
 8004c4e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c50:	1c83      	adds	r3, r0, #2
 8004c52:	b087      	sub	sp, #28
 8004c54:	9303      	str	r3, [sp, #12]
 8004c56:	0005      	movs	r5, r0
 8004c58:	000c      	movs	r4, r1
 8004c5a:	232b      	movs	r3, #43	; 0x2b
 8004c5c:	7002      	strb	r2, [r0, #0]
 8004c5e:	2900      	cmp	r1, #0
 8004c60:	da01      	bge.n	8004c66 <__exponent+0x18>
 8004c62:	424c      	negs	r4, r1
 8004c64:	3302      	adds	r3, #2
 8004c66:	706b      	strb	r3, [r5, #1]
 8004c68:	2c09      	cmp	r4, #9
 8004c6a:	dd2f      	ble.n	8004ccc <__exponent+0x7e>
 8004c6c:	270a      	movs	r7, #10
 8004c6e:	ab04      	add	r3, sp, #16
 8004c70:	1dde      	adds	r6, r3, #7
 8004c72:	0020      	movs	r0, r4
 8004c74:	0039      	movs	r1, r7
 8004c76:	9601      	str	r6, [sp, #4]
 8004c78:	f7fb fbd2 	bl	8000420 <__aeabi_idivmod>
 8004c7c:	3e01      	subs	r6, #1
 8004c7e:	3130      	adds	r1, #48	; 0x30
 8004c80:	0020      	movs	r0, r4
 8004c82:	7031      	strb	r1, [r6, #0]
 8004c84:	0039      	movs	r1, r7
 8004c86:	9402      	str	r4, [sp, #8]
 8004c88:	f7fb fae4 	bl	8000254 <__divsi3>
 8004c8c:	9b02      	ldr	r3, [sp, #8]
 8004c8e:	0004      	movs	r4, r0
 8004c90:	2b63      	cmp	r3, #99	; 0x63
 8004c92:	dcee      	bgt.n	8004c72 <__exponent+0x24>
 8004c94:	9b01      	ldr	r3, [sp, #4]
 8004c96:	3430      	adds	r4, #48	; 0x30
 8004c98:	1e9a      	subs	r2, r3, #2
 8004c9a:	0013      	movs	r3, r2
 8004c9c:	9903      	ldr	r1, [sp, #12]
 8004c9e:	7014      	strb	r4, [r2, #0]
 8004ca0:	a804      	add	r0, sp, #16
 8004ca2:	3007      	adds	r0, #7
 8004ca4:	4298      	cmp	r0, r3
 8004ca6:	d80c      	bhi.n	8004cc2 <__exponent+0x74>
 8004ca8:	2300      	movs	r3, #0
 8004caa:	4282      	cmp	r2, r0
 8004cac:	d804      	bhi.n	8004cb8 <__exponent+0x6a>
 8004cae:	aa04      	add	r2, sp, #16
 8004cb0:	3309      	adds	r3, #9
 8004cb2:	189b      	adds	r3, r3, r2
 8004cb4:	9a01      	ldr	r2, [sp, #4]
 8004cb6:	1a9b      	subs	r3, r3, r2
 8004cb8:	9a03      	ldr	r2, [sp, #12]
 8004cba:	18d3      	adds	r3, r2, r3
 8004cbc:	1b58      	subs	r0, r3, r5
 8004cbe:	b007      	add	sp, #28
 8004cc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cc2:	7818      	ldrb	r0, [r3, #0]
 8004cc4:	3301      	adds	r3, #1
 8004cc6:	7008      	strb	r0, [r1, #0]
 8004cc8:	3101      	adds	r1, #1
 8004cca:	e7e9      	b.n	8004ca0 <__exponent+0x52>
 8004ccc:	2330      	movs	r3, #48	; 0x30
 8004cce:	3430      	adds	r4, #48	; 0x30
 8004cd0:	70ab      	strb	r3, [r5, #2]
 8004cd2:	70ec      	strb	r4, [r5, #3]
 8004cd4:	1d2b      	adds	r3, r5, #4
 8004cd6:	e7f1      	b.n	8004cbc <__exponent+0x6e>

08004cd8 <_printf_float>:
 8004cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004cda:	b095      	sub	sp, #84	; 0x54
 8004cdc:	000c      	movs	r4, r1
 8004cde:	9208      	str	r2, [sp, #32]
 8004ce0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004ce2:	9309      	str	r3, [sp, #36]	; 0x24
 8004ce4:	0007      	movs	r7, r0
 8004ce6:	f001 fda9 	bl	800683c <_localeconv_r>
 8004cea:	6803      	ldr	r3, [r0, #0]
 8004cec:	0018      	movs	r0, r3
 8004cee:	930c      	str	r3, [sp, #48]	; 0x30
 8004cf0:	f7fb fa0a 	bl	8000108 <strlen>
 8004cf4:	2300      	movs	r3, #0
 8004cf6:	9312      	str	r3, [sp, #72]	; 0x48
 8004cf8:	7e23      	ldrb	r3, [r4, #24]
 8004cfa:	2207      	movs	r2, #7
 8004cfc:	930a      	str	r3, [sp, #40]	; 0x28
 8004cfe:	6823      	ldr	r3, [r4, #0]
 8004d00:	900d      	str	r0, [sp, #52]	; 0x34
 8004d02:	930b      	str	r3, [sp, #44]	; 0x2c
 8004d04:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004d06:	682b      	ldr	r3, [r5, #0]
 8004d08:	05c9      	lsls	r1, r1, #23
 8004d0a:	d547      	bpl.n	8004d9c <_printf_float+0xc4>
 8004d0c:	189b      	adds	r3, r3, r2
 8004d0e:	4393      	bics	r3, r2
 8004d10:	001a      	movs	r2, r3
 8004d12:	3208      	adds	r2, #8
 8004d14:	602a      	str	r2, [r5, #0]
 8004d16:	681e      	ldr	r6, [r3, #0]
 8004d18:	685d      	ldr	r5, [r3, #4]
 8004d1a:	0032      	movs	r2, r6
 8004d1c:	002b      	movs	r3, r5
 8004d1e:	64a2      	str	r2, [r4, #72]	; 0x48
 8004d20:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004d22:	2201      	movs	r2, #1
 8004d24:	006b      	lsls	r3, r5, #1
 8004d26:	085b      	lsrs	r3, r3, #1
 8004d28:	930e      	str	r3, [sp, #56]	; 0x38
 8004d2a:	0030      	movs	r0, r6
 8004d2c:	4bab      	ldr	r3, [pc, #684]	; (8004fdc <_printf_float+0x304>)
 8004d2e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004d30:	4252      	negs	r2, r2
 8004d32:	f7fd fa0f 	bl	8002154 <__aeabi_dcmpun>
 8004d36:	2800      	cmp	r0, #0
 8004d38:	d132      	bne.n	8004da0 <_printf_float+0xc8>
 8004d3a:	2201      	movs	r2, #1
 8004d3c:	0030      	movs	r0, r6
 8004d3e:	4ba7      	ldr	r3, [pc, #668]	; (8004fdc <_printf_float+0x304>)
 8004d40:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004d42:	4252      	negs	r2, r2
 8004d44:	f7fb fb92 	bl	800046c <__aeabi_dcmple>
 8004d48:	2800      	cmp	r0, #0
 8004d4a:	d129      	bne.n	8004da0 <_printf_float+0xc8>
 8004d4c:	2200      	movs	r2, #0
 8004d4e:	2300      	movs	r3, #0
 8004d50:	0030      	movs	r0, r6
 8004d52:	0029      	movs	r1, r5
 8004d54:	f7fb fb80 	bl	8000458 <__aeabi_dcmplt>
 8004d58:	2800      	cmp	r0, #0
 8004d5a:	d003      	beq.n	8004d64 <_printf_float+0x8c>
 8004d5c:	0023      	movs	r3, r4
 8004d5e:	222d      	movs	r2, #45	; 0x2d
 8004d60:	3343      	adds	r3, #67	; 0x43
 8004d62:	701a      	strb	r2, [r3, #0]
 8004d64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d66:	4d9e      	ldr	r5, [pc, #632]	; (8004fe0 <_printf_float+0x308>)
 8004d68:	2b47      	cmp	r3, #71	; 0x47
 8004d6a:	d900      	bls.n	8004d6e <_printf_float+0x96>
 8004d6c:	4d9d      	ldr	r5, [pc, #628]	; (8004fe4 <_printf_float+0x30c>)
 8004d6e:	2303      	movs	r3, #3
 8004d70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004d72:	6123      	str	r3, [r4, #16]
 8004d74:	3301      	adds	r3, #1
 8004d76:	439a      	bics	r2, r3
 8004d78:	2300      	movs	r3, #0
 8004d7a:	6022      	str	r2, [r4, #0]
 8004d7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8004d7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d80:	0021      	movs	r1, r4
 8004d82:	9300      	str	r3, [sp, #0]
 8004d84:	0038      	movs	r0, r7
 8004d86:	9b08      	ldr	r3, [sp, #32]
 8004d88:	aa13      	add	r2, sp, #76	; 0x4c
 8004d8a:	f000 f9fb 	bl	8005184 <_printf_common>
 8004d8e:	3001      	adds	r0, #1
 8004d90:	d000      	beq.n	8004d94 <_printf_float+0xbc>
 8004d92:	e0a3      	b.n	8004edc <_printf_float+0x204>
 8004d94:	2001      	movs	r0, #1
 8004d96:	4240      	negs	r0, r0
 8004d98:	b015      	add	sp, #84	; 0x54
 8004d9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d9c:	3307      	adds	r3, #7
 8004d9e:	e7b6      	b.n	8004d0e <_printf_float+0x36>
 8004da0:	0032      	movs	r2, r6
 8004da2:	002b      	movs	r3, r5
 8004da4:	0030      	movs	r0, r6
 8004da6:	0029      	movs	r1, r5
 8004da8:	f7fd f9d4 	bl	8002154 <__aeabi_dcmpun>
 8004dac:	2800      	cmp	r0, #0
 8004dae:	d00b      	beq.n	8004dc8 <_printf_float+0xf0>
 8004db0:	2d00      	cmp	r5, #0
 8004db2:	da03      	bge.n	8004dbc <_printf_float+0xe4>
 8004db4:	0023      	movs	r3, r4
 8004db6:	222d      	movs	r2, #45	; 0x2d
 8004db8:	3343      	adds	r3, #67	; 0x43
 8004dba:	701a      	strb	r2, [r3, #0]
 8004dbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dbe:	4d8a      	ldr	r5, [pc, #552]	; (8004fe8 <_printf_float+0x310>)
 8004dc0:	2b47      	cmp	r3, #71	; 0x47
 8004dc2:	d9d4      	bls.n	8004d6e <_printf_float+0x96>
 8004dc4:	4d89      	ldr	r5, [pc, #548]	; (8004fec <_printf_float+0x314>)
 8004dc6:	e7d2      	b.n	8004d6e <_printf_float+0x96>
 8004dc8:	2220      	movs	r2, #32
 8004dca:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004dcc:	6863      	ldr	r3, [r4, #4]
 8004dce:	4391      	bics	r1, r2
 8004dd0:	910e      	str	r1, [sp, #56]	; 0x38
 8004dd2:	1c5a      	adds	r2, r3, #1
 8004dd4:	d14a      	bne.n	8004e6c <_printf_float+0x194>
 8004dd6:	3307      	adds	r3, #7
 8004dd8:	6063      	str	r3, [r4, #4]
 8004dda:	2380      	movs	r3, #128	; 0x80
 8004ddc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004dde:	00db      	lsls	r3, r3, #3
 8004de0:	4313      	orrs	r3, r2
 8004de2:	2200      	movs	r2, #0
 8004de4:	9206      	str	r2, [sp, #24]
 8004de6:	aa12      	add	r2, sp, #72	; 0x48
 8004de8:	9205      	str	r2, [sp, #20]
 8004dea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004dec:	6023      	str	r3, [r4, #0]
 8004dee:	9204      	str	r2, [sp, #16]
 8004df0:	aa11      	add	r2, sp, #68	; 0x44
 8004df2:	9203      	str	r2, [sp, #12]
 8004df4:	2223      	movs	r2, #35	; 0x23
 8004df6:	a908      	add	r1, sp, #32
 8004df8:	9301      	str	r3, [sp, #4]
 8004dfa:	6863      	ldr	r3, [r4, #4]
 8004dfc:	1852      	adds	r2, r2, r1
 8004dfe:	9202      	str	r2, [sp, #8]
 8004e00:	9300      	str	r3, [sp, #0]
 8004e02:	0032      	movs	r2, r6
 8004e04:	002b      	movs	r3, r5
 8004e06:	0038      	movs	r0, r7
 8004e08:	f7ff febe 	bl	8004b88 <__cvt>
 8004e0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004e0e:	0005      	movs	r5, r0
 8004e10:	2b47      	cmp	r3, #71	; 0x47
 8004e12:	d109      	bne.n	8004e28 <_printf_float+0x150>
 8004e14:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e16:	1cda      	adds	r2, r3, #3
 8004e18:	db02      	blt.n	8004e20 <_printf_float+0x148>
 8004e1a:	6862      	ldr	r2, [r4, #4]
 8004e1c:	4293      	cmp	r3, r2
 8004e1e:	dd49      	ble.n	8004eb4 <_printf_float+0x1dc>
 8004e20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e22:	3b02      	subs	r3, #2
 8004e24:	b2db      	uxtb	r3, r3
 8004e26:	930a      	str	r3, [sp, #40]	; 0x28
 8004e28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e2a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004e2c:	2b65      	cmp	r3, #101	; 0x65
 8004e2e:	d824      	bhi.n	8004e7a <_printf_float+0x1a2>
 8004e30:	0020      	movs	r0, r4
 8004e32:	001a      	movs	r2, r3
 8004e34:	3901      	subs	r1, #1
 8004e36:	3050      	adds	r0, #80	; 0x50
 8004e38:	9111      	str	r1, [sp, #68]	; 0x44
 8004e3a:	f7ff ff08 	bl	8004c4e <__exponent>
 8004e3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004e40:	900b      	str	r0, [sp, #44]	; 0x2c
 8004e42:	1813      	adds	r3, r2, r0
 8004e44:	6123      	str	r3, [r4, #16]
 8004e46:	2a01      	cmp	r2, #1
 8004e48:	dc02      	bgt.n	8004e50 <_printf_float+0x178>
 8004e4a:	6822      	ldr	r2, [r4, #0]
 8004e4c:	07d2      	lsls	r2, r2, #31
 8004e4e:	d501      	bpl.n	8004e54 <_printf_float+0x17c>
 8004e50:	3301      	adds	r3, #1
 8004e52:	6123      	str	r3, [r4, #16]
 8004e54:	2323      	movs	r3, #35	; 0x23
 8004e56:	aa08      	add	r2, sp, #32
 8004e58:	189b      	adds	r3, r3, r2
 8004e5a:	781b      	ldrb	r3, [r3, #0]
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d100      	bne.n	8004e62 <_printf_float+0x18a>
 8004e60:	e78d      	b.n	8004d7e <_printf_float+0xa6>
 8004e62:	0023      	movs	r3, r4
 8004e64:	222d      	movs	r2, #45	; 0x2d
 8004e66:	3343      	adds	r3, #67	; 0x43
 8004e68:	701a      	strb	r2, [r3, #0]
 8004e6a:	e788      	b.n	8004d7e <_printf_float+0xa6>
 8004e6c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004e6e:	2a47      	cmp	r2, #71	; 0x47
 8004e70:	d1b3      	bne.n	8004dda <_printf_float+0x102>
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d1b1      	bne.n	8004dda <_printf_float+0x102>
 8004e76:	3301      	adds	r3, #1
 8004e78:	e7ae      	b.n	8004dd8 <_printf_float+0x100>
 8004e7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e7c:	2b66      	cmp	r3, #102	; 0x66
 8004e7e:	d11b      	bne.n	8004eb8 <_printf_float+0x1e0>
 8004e80:	6863      	ldr	r3, [r4, #4]
 8004e82:	2900      	cmp	r1, #0
 8004e84:	dd09      	ble.n	8004e9a <_printf_float+0x1c2>
 8004e86:	6121      	str	r1, [r4, #16]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d102      	bne.n	8004e92 <_printf_float+0x1ba>
 8004e8c:	6822      	ldr	r2, [r4, #0]
 8004e8e:	07d2      	lsls	r2, r2, #31
 8004e90:	d50b      	bpl.n	8004eaa <_printf_float+0x1d2>
 8004e92:	3301      	adds	r3, #1
 8004e94:	185b      	adds	r3, r3, r1
 8004e96:	6123      	str	r3, [r4, #16]
 8004e98:	e007      	b.n	8004eaa <_printf_float+0x1d2>
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d103      	bne.n	8004ea6 <_printf_float+0x1ce>
 8004e9e:	2201      	movs	r2, #1
 8004ea0:	6821      	ldr	r1, [r4, #0]
 8004ea2:	4211      	tst	r1, r2
 8004ea4:	d000      	beq.n	8004ea8 <_printf_float+0x1d0>
 8004ea6:	1c9a      	adds	r2, r3, #2
 8004ea8:	6122      	str	r2, [r4, #16]
 8004eaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004eac:	65a3      	str	r3, [r4, #88]	; 0x58
 8004eae:	2300      	movs	r3, #0
 8004eb0:	930b      	str	r3, [sp, #44]	; 0x2c
 8004eb2:	e7cf      	b.n	8004e54 <_printf_float+0x17c>
 8004eb4:	2367      	movs	r3, #103	; 0x67
 8004eb6:	930a      	str	r3, [sp, #40]	; 0x28
 8004eb8:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004eba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004ebc:	4299      	cmp	r1, r3
 8004ebe:	db06      	blt.n	8004ece <_printf_float+0x1f6>
 8004ec0:	6823      	ldr	r3, [r4, #0]
 8004ec2:	6121      	str	r1, [r4, #16]
 8004ec4:	07db      	lsls	r3, r3, #31
 8004ec6:	d5f0      	bpl.n	8004eaa <_printf_float+0x1d2>
 8004ec8:	3101      	adds	r1, #1
 8004eca:	6121      	str	r1, [r4, #16]
 8004ecc:	e7ed      	b.n	8004eaa <_printf_float+0x1d2>
 8004ece:	2201      	movs	r2, #1
 8004ed0:	2900      	cmp	r1, #0
 8004ed2:	dc01      	bgt.n	8004ed8 <_printf_float+0x200>
 8004ed4:	1892      	adds	r2, r2, r2
 8004ed6:	1a52      	subs	r2, r2, r1
 8004ed8:	189b      	adds	r3, r3, r2
 8004eda:	e7dc      	b.n	8004e96 <_printf_float+0x1be>
 8004edc:	6822      	ldr	r2, [r4, #0]
 8004ede:	0553      	lsls	r3, r2, #21
 8004ee0:	d408      	bmi.n	8004ef4 <_printf_float+0x21c>
 8004ee2:	6923      	ldr	r3, [r4, #16]
 8004ee4:	002a      	movs	r2, r5
 8004ee6:	0038      	movs	r0, r7
 8004ee8:	9908      	ldr	r1, [sp, #32]
 8004eea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004eec:	47a8      	blx	r5
 8004eee:	3001      	adds	r0, #1
 8004ef0:	d12a      	bne.n	8004f48 <_printf_float+0x270>
 8004ef2:	e74f      	b.n	8004d94 <_printf_float+0xbc>
 8004ef4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ef6:	2b65      	cmp	r3, #101	; 0x65
 8004ef8:	d800      	bhi.n	8004efc <_printf_float+0x224>
 8004efa:	e0ec      	b.n	80050d6 <_printf_float+0x3fe>
 8004efc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004efe:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004f00:	2200      	movs	r2, #0
 8004f02:	2300      	movs	r3, #0
 8004f04:	f7fb faa2 	bl	800044c <__aeabi_dcmpeq>
 8004f08:	2800      	cmp	r0, #0
 8004f0a:	d034      	beq.n	8004f76 <_printf_float+0x29e>
 8004f0c:	2301      	movs	r3, #1
 8004f0e:	0038      	movs	r0, r7
 8004f10:	4a37      	ldr	r2, [pc, #220]	; (8004ff0 <_printf_float+0x318>)
 8004f12:	9908      	ldr	r1, [sp, #32]
 8004f14:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f16:	47a8      	blx	r5
 8004f18:	3001      	adds	r0, #1
 8004f1a:	d100      	bne.n	8004f1e <_printf_float+0x246>
 8004f1c:	e73a      	b.n	8004d94 <_printf_float+0xbc>
 8004f1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004f20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004f22:	429a      	cmp	r2, r3
 8004f24:	db02      	blt.n	8004f2c <_printf_float+0x254>
 8004f26:	6823      	ldr	r3, [r4, #0]
 8004f28:	07db      	lsls	r3, r3, #31
 8004f2a:	d50d      	bpl.n	8004f48 <_printf_float+0x270>
 8004f2c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004f2e:	0038      	movs	r0, r7
 8004f30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f32:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004f34:	9908      	ldr	r1, [sp, #32]
 8004f36:	47a8      	blx	r5
 8004f38:	2500      	movs	r5, #0
 8004f3a:	3001      	adds	r0, #1
 8004f3c:	d100      	bne.n	8004f40 <_printf_float+0x268>
 8004f3e:	e729      	b.n	8004d94 <_printf_float+0xbc>
 8004f40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004f42:	3b01      	subs	r3, #1
 8004f44:	42ab      	cmp	r3, r5
 8004f46:	dc0a      	bgt.n	8004f5e <_printf_float+0x286>
 8004f48:	6823      	ldr	r3, [r4, #0]
 8004f4a:	079b      	lsls	r3, r3, #30
 8004f4c:	d500      	bpl.n	8004f50 <_printf_float+0x278>
 8004f4e:	e116      	b.n	800517e <_printf_float+0x4a6>
 8004f50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004f52:	68e0      	ldr	r0, [r4, #12]
 8004f54:	4298      	cmp	r0, r3
 8004f56:	db00      	blt.n	8004f5a <_printf_float+0x282>
 8004f58:	e71e      	b.n	8004d98 <_printf_float+0xc0>
 8004f5a:	0018      	movs	r0, r3
 8004f5c:	e71c      	b.n	8004d98 <_printf_float+0xc0>
 8004f5e:	0022      	movs	r2, r4
 8004f60:	2301      	movs	r3, #1
 8004f62:	0038      	movs	r0, r7
 8004f64:	9908      	ldr	r1, [sp, #32]
 8004f66:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004f68:	321a      	adds	r2, #26
 8004f6a:	47b0      	blx	r6
 8004f6c:	3001      	adds	r0, #1
 8004f6e:	d100      	bne.n	8004f72 <_printf_float+0x29a>
 8004f70:	e710      	b.n	8004d94 <_printf_float+0xbc>
 8004f72:	3501      	adds	r5, #1
 8004f74:	e7e4      	b.n	8004f40 <_printf_float+0x268>
 8004f76:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	dc3b      	bgt.n	8004ff4 <_printf_float+0x31c>
 8004f7c:	2301      	movs	r3, #1
 8004f7e:	0038      	movs	r0, r7
 8004f80:	4a1b      	ldr	r2, [pc, #108]	; (8004ff0 <_printf_float+0x318>)
 8004f82:	9908      	ldr	r1, [sp, #32]
 8004f84:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004f86:	47b0      	blx	r6
 8004f88:	3001      	adds	r0, #1
 8004f8a:	d100      	bne.n	8004f8e <_printf_float+0x2b6>
 8004f8c:	e702      	b.n	8004d94 <_printf_float+0xbc>
 8004f8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004f90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004f92:	4313      	orrs	r3, r2
 8004f94:	d102      	bne.n	8004f9c <_printf_float+0x2c4>
 8004f96:	6823      	ldr	r3, [r4, #0]
 8004f98:	07db      	lsls	r3, r3, #31
 8004f9a:	d5d5      	bpl.n	8004f48 <_printf_float+0x270>
 8004f9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f9e:	0038      	movs	r0, r7
 8004fa0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004fa2:	9908      	ldr	r1, [sp, #32]
 8004fa4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004fa6:	47b0      	blx	r6
 8004fa8:	2300      	movs	r3, #0
 8004faa:	3001      	adds	r0, #1
 8004fac:	d100      	bne.n	8004fb0 <_printf_float+0x2d8>
 8004fae:	e6f1      	b.n	8004d94 <_printf_float+0xbc>
 8004fb0:	930a      	str	r3, [sp, #40]	; 0x28
 8004fb2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004fb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004fb6:	425b      	negs	r3, r3
 8004fb8:	4293      	cmp	r3, r2
 8004fba:	dc01      	bgt.n	8004fc0 <_printf_float+0x2e8>
 8004fbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004fbe:	e791      	b.n	8004ee4 <_printf_float+0x20c>
 8004fc0:	0022      	movs	r2, r4
 8004fc2:	2301      	movs	r3, #1
 8004fc4:	0038      	movs	r0, r7
 8004fc6:	9908      	ldr	r1, [sp, #32]
 8004fc8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004fca:	321a      	adds	r2, #26
 8004fcc:	47b0      	blx	r6
 8004fce:	3001      	adds	r0, #1
 8004fd0:	d100      	bne.n	8004fd4 <_printf_float+0x2fc>
 8004fd2:	e6df      	b.n	8004d94 <_printf_float+0xbc>
 8004fd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004fd6:	3301      	adds	r3, #1
 8004fd8:	e7ea      	b.n	8004fb0 <_printf_float+0x2d8>
 8004fda:	46c0      	nop			; (mov r8, r8)
 8004fdc:	7fefffff 	.word	0x7fefffff
 8004fe0:	0800958c 	.word	0x0800958c
 8004fe4:	08009590 	.word	0x08009590
 8004fe8:	08009594 	.word	0x08009594
 8004fec:	08009598 	.word	0x08009598
 8004ff0:	0800959c 	.word	0x0800959c
 8004ff4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ff6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004ff8:	920a      	str	r2, [sp, #40]	; 0x28
 8004ffa:	429a      	cmp	r2, r3
 8004ffc:	dd00      	ble.n	8005000 <_printf_float+0x328>
 8004ffe:	930a      	str	r3, [sp, #40]	; 0x28
 8005000:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005002:	2b00      	cmp	r3, #0
 8005004:	dc3d      	bgt.n	8005082 <_printf_float+0x3aa>
 8005006:	2300      	movs	r3, #0
 8005008:	930e      	str	r3, [sp, #56]	; 0x38
 800500a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800500c:	43db      	mvns	r3, r3
 800500e:	17db      	asrs	r3, r3, #31
 8005010:	930f      	str	r3, [sp, #60]	; 0x3c
 8005012:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005014:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005016:	930b      	str	r3, [sp, #44]	; 0x2c
 8005018:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800501a:	4013      	ands	r3, r2
 800501c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800501e:	1ad3      	subs	r3, r2, r3
 8005020:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005022:	4293      	cmp	r3, r2
 8005024:	dc36      	bgt.n	8005094 <_printf_float+0x3bc>
 8005026:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005028:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800502a:	429a      	cmp	r2, r3
 800502c:	db40      	blt.n	80050b0 <_printf_float+0x3d8>
 800502e:	6823      	ldr	r3, [r4, #0]
 8005030:	07db      	lsls	r3, r3, #31
 8005032:	d43d      	bmi.n	80050b0 <_printf_float+0x3d8>
 8005034:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8005036:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005038:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800503a:	1af3      	subs	r3, r6, r3
 800503c:	1ab6      	subs	r6, r6, r2
 800503e:	429e      	cmp	r6, r3
 8005040:	dd00      	ble.n	8005044 <_printf_float+0x36c>
 8005042:	001e      	movs	r6, r3
 8005044:	2e00      	cmp	r6, #0
 8005046:	dc3c      	bgt.n	80050c2 <_printf_float+0x3ea>
 8005048:	2300      	movs	r3, #0
 800504a:	930a      	str	r3, [sp, #40]	; 0x28
 800504c:	43f3      	mvns	r3, r6
 800504e:	17db      	asrs	r3, r3, #31
 8005050:	930b      	str	r3, [sp, #44]	; 0x2c
 8005052:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005054:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005056:	1a9b      	subs	r3, r3, r2
 8005058:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800505a:	4032      	ands	r2, r6
 800505c:	1a9b      	subs	r3, r3, r2
 800505e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005060:	4293      	cmp	r3, r2
 8005062:	dc00      	bgt.n	8005066 <_printf_float+0x38e>
 8005064:	e770      	b.n	8004f48 <_printf_float+0x270>
 8005066:	0022      	movs	r2, r4
 8005068:	2301      	movs	r3, #1
 800506a:	0038      	movs	r0, r7
 800506c:	9908      	ldr	r1, [sp, #32]
 800506e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005070:	321a      	adds	r2, #26
 8005072:	47a8      	blx	r5
 8005074:	3001      	adds	r0, #1
 8005076:	d100      	bne.n	800507a <_printf_float+0x3a2>
 8005078:	e68c      	b.n	8004d94 <_printf_float+0xbc>
 800507a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800507c:	3301      	adds	r3, #1
 800507e:	930a      	str	r3, [sp, #40]	; 0x28
 8005080:	e7e7      	b.n	8005052 <_printf_float+0x37a>
 8005082:	002a      	movs	r2, r5
 8005084:	0038      	movs	r0, r7
 8005086:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005088:	9908      	ldr	r1, [sp, #32]
 800508a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800508c:	47b0      	blx	r6
 800508e:	3001      	adds	r0, #1
 8005090:	d1b9      	bne.n	8005006 <_printf_float+0x32e>
 8005092:	e67f      	b.n	8004d94 <_printf_float+0xbc>
 8005094:	0022      	movs	r2, r4
 8005096:	2301      	movs	r3, #1
 8005098:	0038      	movs	r0, r7
 800509a:	9908      	ldr	r1, [sp, #32]
 800509c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800509e:	321a      	adds	r2, #26
 80050a0:	47b0      	blx	r6
 80050a2:	3001      	adds	r0, #1
 80050a4:	d100      	bne.n	80050a8 <_printf_float+0x3d0>
 80050a6:	e675      	b.n	8004d94 <_printf_float+0xbc>
 80050a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80050aa:	3301      	adds	r3, #1
 80050ac:	930e      	str	r3, [sp, #56]	; 0x38
 80050ae:	e7b0      	b.n	8005012 <_printf_float+0x33a>
 80050b0:	0038      	movs	r0, r7
 80050b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80050b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80050b6:	9908      	ldr	r1, [sp, #32]
 80050b8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80050ba:	47b0      	blx	r6
 80050bc:	3001      	adds	r0, #1
 80050be:	d1b9      	bne.n	8005034 <_printf_float+0x35c>
 80050c0:	e668      	b.n	8004d94 <_printf_float+0xbc>
 80050c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80050c4:	0038      	movs	r0, r7
 80050c6:	18ea      	adds	r2, r5, r3
 80050c8:	9908      	ldr	r1, [sp, #32]
 80050ca:	0033      	movs	r3, r6
 80050cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80050ce:	47a8      	blx	r5
 80050d0:	3001      	adds	r0, #1
 80050d2:	d1b9      	bne.n	8005048 <_printf_float+0x370>
 80050d4:	e65e      	b.n	8004d94 <_printf_float+0xbc>
 80050d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80050d8:	2b01      	cmp	r3, #1
 80050da:	dc02      	bgt.n	80050e2 <_printf_float+0x40a>
 80050dc:	2301      	movs	r3, #1
 80050de:	421a      	tst	r2, r3
 80050e0:	d03a      	beq.n	8005158 <_printf_float+0x480>
 80050e2:	2301      	movs	r3, #1
 80050e4:	002a      	movs	r2, r5
 80050e6:	0038      	movs	r0, r7
 80050e8:	9908      	ldr	r1, [sp, #32]
 80050ea:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80050ec:	47b0      	blx	r6
 80050ee:	3001      	adds	r0, #1
 80050f0:	d100      	bne.n	80050f4 <_printf_float+0x41c>
 80050f2:	e64f      	b.n	8004d94 <_printf_float+0xbc>
 80050f4:	0038      	movs	r0, r7
 80050f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80050f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80050fa:	9908      	ldr	r1, [sp, #32]
 80050fc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80050fe:	47b0      	blx	r6
 8005100:	3001      	adds	r0, #1
 8005102:	d100      	bne.n	8005106 <_printf_float+0x42e>
 8005104:	e646      	b.n	8004d94 <_printf_float+0xbc>
 8005106:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005108:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800510a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800510c:	2200      	movs	r2, #0
 800510e:	001e      	movs	r6, r3
 8005110:	2300      	movs	r3, #0
 8005112:	f7fb f99b 	bl	800044c <__aeabi_dcmpeq>
 8005116:	2800      	cmp	r0, #0
 8005118:	d11c      	bne.n	8005154 <_printf_float+0x47c>
 800511a:	0033      	movs	r3, r6
 800511c:	1c6a      	adds	r2, r5, #1
 800511e:	3b01      	subs	r3, #1
 8005120:	0038      	movs	r0, r7
 8005122:	9908      	ldr	r1, [sp, #32]
 8005124:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005126:	47a8      	blx	r5
 8005128:	3001      	adds	r0, #1
 800512a:	d10f      	bne.n	800514c <_printf_float+0x474>
 800512c:	e632      	b.n	8004d94 <_printf_float+0xbc>
 800512e:	0022      	movs	r2, r4
 8005130:	2301      	movs	r3, #1
 8005132:	0038      	movs	r0, r7
 8005134:	9908      	ldr	r1, [sp, #32]
 8005136:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005138:	321a      	adds	r2, #26
 800513a:	47b0      	blx	r6
 800513c:	3001      	adds	r0, #1
 800513e:	d100      	bne.n	8005142 <_printf_float+0x46a>
 8005140:	e628      	b.n	8004d94 <_printf_float+0xbc>
 8005142:	3501      	adds	r5, #1
 8005144:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005146:	3b01      	subs	r3, #1
 8005148:	42ab      	cmp	r3, r5
 800514a:	dcf0      	bgt.n	800512e <_printf_float+0x456>
 800514c:	0022      	movs	r2, r4
 800514e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005150:	3250      	adds	r2, #80	; 0x50
 8005152:	e6c8      	b.n	8004ee6 <_printf_float+0x20e>
 8005154:	2500      	movs	r5, #0
 8005156:	e7f5      	b.n	8005144 <_printf_float+0x46c>
 8005158:	002a      	movs	r2, r5
 800515a:	e7e1      	b.n	8005120 <_printf_float+0x448>
 800515c:	0022      	movs	r2, r4
 800515e:	2301      	movs	r3, #1
 8005160:	0038      	movs	r0, r7
 8005162:	9908      	ldr	r1, [sp, #32]
 8005164:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005166:	3219      	adds	r2, #25
 8005168:	47b0      	blx	r6
 800516a:	3001      	adds	r0, #1
 800516c:	d100      	bne.n	8005170 <_printf_float+0x498>
 800516e:	e611      	b.n	8004d94 <_printf_float+0xbc>
 8005170:	3501      	adds	r5, #1
 8005172:	68e3      	ldr	r3, [r4, #12]
 8005174:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005176:	1a9b      	subs	r3, r3, r2
 8005178:	42ab      	cmp	r3, r5
 800517a:	dcef      	bgt.n	800515c <_printf_float+0x484>
 800517c:	e6e8      	b.n	8004f50 <_printf_float+0x278>
 800517e:	2500      	movs	r5, #0
 8005180:	e7f7      	b.n	8005172 <_printf_float+0x49a>
 8005182:	46c0      	nop			; (mov r8, r8)

08005184 <_printf_common>:
 8005184:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005186:	0016      	movs	r6, r2
 8005188:	9301      	str	r3, [sp, #4]
 800518a:	688a      	ldr	r2, [r1, #8]
 800518c:	690b      	ldr	r3, [r1, #16]
 800518e:	000c      	movs	r4, r1
 8005190:	9000      	str	r0, [sp, #0]
 8005192:	4293      	cmp	r3, r2
 8005194:	da00      	bge.n	8005198 <_printf_common+0x14>
 8005196:	0013      	movs	r3, r2
 8005198:	0022      	movs	r2, r4
 800519a:	6033      	str	r3, [r6, #0]
 800519c:	3243      	adds	r2, #67	; 0x43
 800519e:	7812      	ldrb	r2, [r2, #0]
 80051a0:	2a00      	cmp	r2, #0
 80051a2:	d001      	beq.n	80051a8 <_printf_common+0x24>
 80051a4:	3301      	adds	r3, #1
 80051a6:	6033      	str	r3, [r6, #0]
 80051a8:	6823      	ldr	r3, [r4, #0]
 80051aa:	069b      	lsls	r3, r3, #26
 80051ac:	d502      	bpl.n	80051b4 <_printf_common+0x30>
 80051ae:	6833      	ldr	r3, [r6, #0]
 80051b0:	3302      	adds	r3, #2
 80051b2:	6033      	str	r3, [r6, #0]
 80051b4:	6822      	ldr	r2, [r4, #0]
 80051b6:	2306      	movs	r3, #6
 80051b8:	0015      	movs	r5, r2
 80051ba:	401d      	ands	r5, r3
 80051bc:	421a      	tst	r2, r3
 80051be:	d027      	beq.n	8005210 <_printf_common+0x8c>
 80051c0:	0023      	movs	r3, r4
 80051c2:	3343      	adds	r3, #67	; 0x43
 80051c4:	781b      	ldrb	r3, [r3, #0]
 80051c6:	1e5a      	subs	r2, r3, #1
 80051c8:	4193      	sbcs	r3, r2
 80051ca:	6822      	ldr	r2, [r4, #0]
 80051cc:	0692      	lsls	r2, r2, #26
 80051ce:	d430      	bmi.n	8005232 <_printf_common+0xae>
 80051d0:	0022      	movs	r2, r4
 80051d2:	9901      	ldr	r1, [sp, #4]
 80051d4:	9800      	ldr	r0, [sp, #0]
 80051d6:	9d08      	ldr	r5, [sp, #32]
 80051d8:	3243      	adds	r2, #67	; 0x43
 80051da:	47a8      	blx	r5
 80051dc:	3001      	adds	r0, #1
 80051de:	d025      	beq.n	800522c <_printf_common+0xa8>
 80051e0:	2206      	movs	r2, #6
 80051e2:	6823      	ldr	r3, [r4, #0]
 80051e4:	2500      	movs	r5, #0
 80051e6:	4013      	ands	r3, r2
 80051e8:	2b04      	cmp	r3, #4
 80051ea:	d105      	bne.n	80051f8 <_printf_common+0x74>
 80051ec:	6833      	ldr	r3, [r6, #0]
 80051ee:	68e5      	ldr	r5, [r4, #12]
 80051f0:	1aed      	subs	r5, r5, r3
 80051f2:	43eb      	mvns	r3, r5
 80051f4:	17db      	asrs	r3, r3, #31
 80051f6:	401d      	ands	r5, r3
 80051f8:	68a3      	ldr	r3, [r4, #8]
 80051fa:	6922      	ldr	r2, [r4, #16]
 80051fc:	4293      	cmp	r3, r2
 80051fe:	dd01      	ble.n	8005204 <_printf_common+0x80>
 8005200:	1a9b      	subs	r3, r3, r2
 8005202:	18ed      	adds	r5, r5, r3
 8005204:	2600      	movs	r6, #0
 8005206:	42b5      	cmp	r5, r6
 8005208:	d120      	bne.n	800524c <_printf_common+0xc8>
 800520a:	2000      	movs	r0, #0
 800520c:	e010      	b.n	8005230 <_printf_common+0xac>
 800520e:	3501      	adds	r5, #1
 8005210:	68e3      	ldr	r3, [r4, #12]
 8005212:	6832      	ldr	r2, [r6, #0]
 8005214:	1a9b      	subs	r3, r3, r2
 8005216:	42ab      	cmp	r3, r5
 8005218:	ddd2      	ble.n	80051c0 <_printf_common+0x3c>
 800521a:	0022      	movs	r2, r4
 800521c:	2301      	movs	r3, #1
 800521e:	9901      	ldr	r1, [sp, #4]
 8005220:	9800      	ldr	r0, [sp, #0]
 8005222:	9f08      	ldr	r7, [sp, #32]
 8005224:	3219      	adds	r2, #25
 8005226:	47b8      	blx	r7
 8005228:	3001      	adds	r0, #1
 800522a:	d1f0      	bne.n	800520e <_printf_common+0x8a>
 800522c:	2001      	movs	r0, #1
 800522e:	4240      	negs	r0, r0
 8005230:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005232:	2030      	movs	r0, #48	; 0x30
 8005234:	18e1      	adds	r1, r4, r3
 8005236:	3143      	adds	r1, #67	; 0x43
 8005238:	7008      	strb	r0, [r1, #0]
 800523a:	0021      	movs	r1, r4
 800523c:	1c5a      	adds	r2, r3, #1
 800523e:	3145      	adds	r1, #69	; 0x45
 8005240:	7809      	ldrb	r1, [r1, #0]
 8005242:	18a2      	adds	r2, r4, r2
 8005244:	3243      	adds	r2, #67	; 0x43
 8005246:	3302      	adds	r3, #2
 8005248:	7011      	strb	r1, [r2, #0]
 800524a:	e7c1      	b.n	80051d0 <_printf_common+0x4c>
 800524c:	0022      	movs	r2, r4
 800524e:	2301      	movs	r3, #1
 8005250:	9901      	ldr	r1, [sp, #4]
 8005252:	9800      	ldr	r0, [sp, #0]
 8005254:	9f08      	ldr	r7, [sp, #32]
 8005256:	321a      	adds	r2, #26
 8005258:	47b8      	blx	r7
 800525a:	3001      	adds	r0, #1
 800525c:	d0e6      	beq.n	800522c <_printf_common+0xa8>
 800525e:	3601      	adds	r6, #1
 8005260:	e7d1      	b.n	8005206 <_printf_common+0x82>
	...

08005264 <_printf_i>:
 8005264:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005266:	b08b      	sub	sp, #44	; 0x2c
 8005268:	9206      	str	r2, [sp, #24]
 800526a:	000a      	movs	r2, r1
 800526c:	3243      	adds	r2, #67	; 0x43
 800526e:	9307      	str	r3, [sp, #28]
 8005270:	9005      	str	r0, [sp, #20]
 8005272:	9204      	str	r2, [sp, #16]
 8005274:	7e0a      	ldrb	r2, [r1, #24]
 8005276:	000c      	movs	r4, r1
 8005278:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800527a:	2a78      	cmp	r2, #120	; 0x78
 800527c:	d809      	bhi.n	8005292 <_printf_i+0x2e>
 800527e:	2a62      	cmp	r2, #98	; 0x62
 8005280:	d80b      	bhi.n	800529a <_printf_i+0x36>
 8005282:	2a00      	cmp	r2, #0
 8005284:	d100      	bne.n	8005288 <_printf_i+0x24>
 8005286:	e0be      	b.n	8005406 <_printf_i+0x1a2>
 8005288:	497c      	ldr	r1, [pc, #496]	; (800547c <_printf_i+0x218>)
 800528a:	9103      	str	r1, [sp, #12]
 800528c:	2a58      	cmp	r2, #88	; 0x58
 800528e:	d100      	bne.n	8005292 <_printf_i+0x2e>
 8005290:	e093      	b.n	80053ba <_printf_i+0x156>
 8005292:	0026      	movs	r6, r4
 8005294:	3642      	adds	r6, #66	; 0x42
 8005296:	7032      	strb	r2, [r6, #0]
 8005298:	e022      	b.n	80052e0 <_printf_i+0x7c>
 800529a:	0010      	movs	r0, r2
 800529c:	3863      	subs	r0, #99	; 0x63
 800529e:	2815      	cmp	r0, #21
 80052a0:	d8f7      	bhi.n	8005292 <_printf_i+0x2e>
 80052a2:	f7fa ff43 	bl	800012c <__gnu_thumb1_case_shi>
 80052a6:	0016      	.short	0x0016
 80052a8:	fff6001f 	.word	0xfff6001f
 80052ac:	fff6fff6 	.word	0xfff6fff6
 80052b0:	001ffff6 	.word	0x001ffff6
 80052b4:	fff6fff6 	.word	0xfff6fff6
 80052b8:	fff6fff6 	.word	0xfff6fff6
 80052bc:	003600a3 	.word	0x003600a3
 80052c0:	fff60083 	.word	0xfff60083
 80052c4:	00b4fff6 	.word	0x00b4fff6
 80052c8:	0036fff6 	.word	0x0036fff6
 80052cc:	fff6fff6 	.word	0xfff6fff6
 80052d0:	0087      	.short	0x0087
 80052d2:	0026      	movs	r6, r4
 80052d4:	681a      	ldr	r2, [r3, #0]
 80052d6:	3642      	adds	r6, #66	; 0x42
 80052d8:	1d11      	adds	r1, r2, #4
 80052da:	6019      	str	r1, [r3, #0]
 80052dc:	6813      	ldr	r3, [r2, #0]
 80052de:	7033      	strb	r3, [r6, #0]
 80052e0:	2301      	movs	r3, #1
 80052e2:	e0a2      	b.n	800542a <_printf_i+0x1c6>
 80052e4:	6818      	ldr	r0, [r3, #0]
 80052e6:	6809      	ldr	r1, [r1, #0]
 80052e8:	1d02      	adds	r2, r0, #4
 80052ea:	060d      	lsls	r5, r1, #24
 80052ec:	d50b      	bpl.n	8005306 <_printf_i+0xa2>
 80052ee:	6805      	ldr	r5, [r0, #0]
 80052f0:	601a      	str	r2, [r3, #0]
 80052f2:	2d00      	cmp	r5, #0
 80052f4:	da03      	bge.n	80052fe <_printf_i+0x9a>
 80052f6:	232d      	movs	r3, #45	; 0x2d
 80052f8:	9a04      	ldr	r2, [sp, #16]
 80052fa:	426d      	negs	r5, r5
 80052fc:	7013      	strb	r3, [r2, #0]
 80052fe:	4b5f      	ldr	r3, [pc, #380]	; (800547c <_printf_i+0x218>)
 8005300:	270a      	movs	r7, #10
 8005302:	9303      	str	r3, [sp, #12]
 8005304:	e01b      	b.n	800533e <_printf_i+0xda>
 8005306:	6805      	ldr	r5, [r0, #0]
 8005308:	601a      	str	r2, [r3, #0]
 800530a:	0649      	lsls	r1, r1, #25
 800530c:	d5f1      	bpl.n	80052f2 <_printf_i+0x8e>
 800530e:	b22d      	sxth	r5, r5
 8005310:	e7ef      	b.n	80052f2 <_printf_i+0x8e>
 8005312:	680d      	ldr	r5, [r1, #0]
 8005314:	6819      	ldr	r1, [r3, #0]
 8005316:	1d08      	adds	r0, r1, #4
 8005318:	6018      	str	r0, [r3, #0]
 800531a:	062e      	lsls	r6, r5, #24
 800531c:	d501      	bpl.n	8005322 <_printf_i+0xbe>
 800531e:	680d      	ldr	r5, [r1, #0]
 8005320:	e003      	b.n	800532a <_printf_i+0xc6>
 8005322:	066d      	lsls	r5, r5, #25
 8005324:	d5fb      	bpl.n	800531e <_printf_i+0xba>
 8005326:	680d      	ldr	r5, [r1, #0]
 8005328:	b2ad      	uxth	r5, r5
 800532a:	4b54      	ldr	r3, [pc, #336]	; (800547c <_printf_i+0x218>)
 800532c:	2708      	movs	r7, #8
 800532e:	9303      	str	r3, [sp, #12]
 8005330:	2a6f      	cmp	r2, #111	; 0x6f
 8005332:	d000      	beq.n	8005336 <_printf_i+0xd2>
 8005334:	3702      	adds	r7, #2
 8005336:	0023      	movs	r3, r4
 8005338:	2200      	movs	r2, #0
 800533a:	3343      	adds	r3, #67	; 0x43
 800533c:	701a      	strb	r2, [r3, #0]
 800533e:	6863      	ldr	r3, [r4, #4]
 8005340:	60a3      	str	r3, [r4, #8]
 8005342:	2b00      	cmp	r3, #0
 8005344:	db03      	blt.n	800534e <_printf_i+0xea>
 8005346:	2104      	movs	r1, #4
 8005348:	6822      	ldr	r2, [r4, #0]
 800534a:	438a      	bics	r2, r1
 800534c:	6022      	str	r2, [r4, #0]
 800534e:	2d00      	cmp	r5, #0
 8005350:	d102      	bne.n	8005358 <_printf_i+0xf4>
 8005352:	9e04      	ldr	r6, [sp, #16]
 8005354:	2b00      	cmp	r3, #0
 8005356:	d00c      	beq.n	8005372 <_printf_i+0x10e>
 8005358:	9e04      	ldr	r6, [sp, #16]
 800535a:	0028      	movs	r0, r5
 800535c:	0039      	movs	r1, r7
 800535e:	f7fa ff75 	bl	800024c <__aeabi_uidivmod>
 8005362:	9b03      	ldr	r3, [sp, #12]
 8005364:	3e01      	subs	r6, #1
 8005366:	5c5b      	ldrb	r3, [r3, r1]
 8005368:	7033      	strb	r3, [r6, #0]
 800536a:	002b      	movs	r3, r5
 800536c:	0005      	movs	r5, r0
 800536e:	429f      	cmp	r7, r3
 8005370:	d9f3      	bls.n	800535a <_printf_i+0xf6>
 8005372:	2f08      	cmp	r7, #8
 8005374:	d109      	bne.n	800538a <_printf_i+0x126>
 8005376:	6823      	ldr	r3, [r4, #0]
 8005378:	07db      	lsls	r3, r3, #31
 800537a:	d506      	bpl.n	800538a <_printf_i+0x126>
 800537c:	6862      	ldr	r2, [r4, #4]
 800537e:	6923      	ldr	r3, [r4, #16]
 8005380:	429a      	cmp	r2, r3
 8005382:	dc02      	bgt.n	800538a <_printf_i+0x126>
 8005384:	2330      	movs	r3, #48	; 0x30
 8005386:	3e01      	subs	r6, #1
 8005388:	7033      	strb	r3, [r6, #0]
 800538a:	9b04      	ldr	r3, [sp, #16]
 800538c:	1b9b      	subs	r3, r3, r6
 800538e:	6123      	str	r3, [r4, #16]
 8005390:	9b07      	ldr	r3, [sp, #28]
 8005392:	0021      	movs	r1, r4
 8005394:	9300      	str	r3, [sp, #0]
 8005396:	9805      	ldr	r0, [sp, #20]
 8005398:	9b06      	ldr	r3, [sp, #24]
 800539a:	aa09      	add	r2, sp, #36	; 0x24
 800539c:	f7ff fef2 	bl	8005184 <_printf_common>
 80053a0:	3001      	adds	r0, #1
 80053a2:	d147      	bne.n	8005434 <_printf_i+0x1d0>
 80053a4:	2001      	movs	r0, #1
 80053a6:	4240      	negs	r0, r0
 80053a8:	b00b      	add	sp, #44	; 0x2c
 80053aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80053ac:	2220      	movs	r2, #32
 80053ae:	6809      	ldr	r1, [r1, #0]
 80053b0:	430a      	orrs	r2, r1
 80053b2:	6022      	str	r2, [r4, #0]
 80053b4:	2278      	movs	r2, #120	; 0x78
 80053b6:	4932      	ldr	r1, [pc, #200]	; (8005480 <_printf_i+0x21c>)
 80053b8:	9103      	str	r1, [sp, #12]
 80053ba:	0021      	movs	r1, r4
 80053bc:	3145      	adds	r1, #69	; 0x45
 80053be:	700a      	strb	r2, [r1, #0]
 80053c0:	6819      	ldr	r1, [r3, #0]
 80053c2:	6822      	ldr	r2, [r4, #0]
 80053c4:	c920      	ldmia	r1!, {r5}
 80053c6:	0610      	lsls	r0, r2, #24
 80053c8:	d402      	bmi.n	80053d0 <_printf_i+0x16c>
 80053ca:	0650      	lsls	r0, r2, #25
 80053cc:	d500      	bpl.n	80053d0 <_printf_i+0x16c>
 80053ce:	b2ad      	uxth	r5, r5
 80053d0:	6019      	str	r1, [r3, #0]
 80053d2:	07d3      	lsls	r3, r2, #31
 80053d4:	d502      	bpl.n	80053dc <_printf_i+0x178>
 80053d6:	2320      	movs	r3, #32
 80053d8:	4313      	orrs	r3, r2
 80053da:	6023      	str	r3, [r4, #0]
 80053dc:	2710      	movs	r7, #16
 80053de:	2d00      	cmp	r5, #0
 80053e0:	d1a9      	bne.n	8005336 <_printf_i+0xd2>
 80053e2:	2220      	movs	r2, #32
 80053e4:	6823      	ldr	r3, [r4, #0]
 80053e6:	4393      	bics	r3, r2
 80053e8:	6023      	str	r3, [r4, #0]
 80053ea:	e7a4      	b.n	8005336 <_printf_i+0xd2>
 80053ec:	681a      	ldr	r2, [r3, #0]
 80053ee:	680d      	ldr	r5, [r1, #0]
 80053f0:	1d10      	adds	r0, r2, #4
 80053f2:	6949      	ldr	r1, [r1, #20]
 80053f4:	6018      	str	r0, [r3, #0]
 80053f6:	6813      	ldr	r3, [r2, #0]
 80053f8:	062e      	lsls	r6, r5, #24
 80053fa:	d501      	bpl.n	8005400 <_printf_i+0x19c>
 80053fc:	6019      	str	r1, [r3, #0]
 80053fe:	e002      	b.n	8005406 <_printf_i+0x1a2>
 8005400:	066d      	lsls	r5, r5, #25
 8005402:	d5fb      	bpl.n	80053fc <_printf_i+0x198>
 8005404:	8019      	strh	r1, [r3, #0]
 8005406:	2300      	movs	r3, #0
 8005408:	9e04      	ldr	r6, [sp, #16]
 800540a:	6123      	str	r3, [r4, #16]
 800540c:	e7c0      	b.n	8005390 <_printf_i+0x12c>
 800540e:	681a      	ldr	r2, [r3, #0]
 8005410:	1d11      	adds	r1, r2, #4
 8005412:	6019      	str	r1, [r3, #0]
 8005414:	6816      	ldr	r6, [r2, #0]
 8005416:	2100      	movs	r1, #0
 8005418:	0030      	movs	r0, r6
 800541a:	6862      	ldr	r2, [r4, #4]
 800541c:	f001 fa3e 	bl	800689c <memchr>
 8005420:	2800      	cmp	r0, #0
 8005422:	d001      	beq.n	8005428 <_printf_i+0x1c4>
 8005424:	1b80      	subs	r0, r0, r6
 8005426:	6060      	str	r0, [r4, #4]
 8005428:	6863      	ldr	r3, [r4, #4]
 800542a:	6123      	str	r3, [r4, #16]
 800542c:	2300      	movs	r3, #0
 800542e:	9a04      	ldr	r2, [sp, #16]
 8005430:	7013      	strb	r3, [r2, #0]
 8005432:	e7ad      	b.n	8005390 <_printf_i+0x12c>
 8005434:	0032      	movs	r2, r6
 8005436:	6923      	ldr	r3, [r4, #16]
 8005438:	9906      	ldr	r1, [sp, #24]
 800543a:	9805      	ldr	r0, [sp, #20]
 800543c:	9d07      	ldr	r5, [sp, #28]
 800543e:	47a8      	blx	r5
 8005440:	3001      	adds	r0, #1
 8005442:	d0af      	beq.n	80053a4 <_printf_i+0x140>
 8005444:	6823      	ldr	r3, [r4, #0]
 8005446:	079b      	lsls	r3, r3, #30
 8005448:	d415      	bmi.n	8005476 <_printf_i+0x212>
 800544a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800544c:	68e0      	ldr	r0, [r4, #12]
 800544e:	4298      	cmp	r0, r3
 8005450:	daaa      	bge.n	80053a8 <_printf_i+0x144>
 8005452:	0018      	movs	r0, r3
 8005454:	e7a8      	b.n	80053a8 <_printf_i+0x144>
 8005456:	0022      	movs	r2, r4
 8005458:	2301      	movs	r3, #1
 800545a:	9906      	ldr	r1, [sp, #24]
 800545c:	9805      	ldr	r0, [sp, #20]
 800545e:	9e07      	ldr	r6, [sp, #28]
 8005460:	3219      	adds	r2, #25
 8005462:	47b0      	blx	r6
 8005464:	3001      	adds	r0, #1
 8005466:	d09d      	beq.n	80053a4 <_printf_i+0x140>
 8005468:	3501      	adds	r5, #1
 800546a:	68e3      	ldr	r3, [r4, #12]
 800546c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800546e:	1a9b      	subs	r3, r3, r2
 8005470:	42ab      	cmp	r3, r5
 8005472:	dcf0      	bgt.n	8005456 <_printf_i+0x1f2>
 8005474:	e7e9      	b.n	800544a <_printf_i+0x1e6>
 8005476:	2500      	movs	r5, #0
 8005478:	e7f7      	b.n	800546a <_printf_i+0x206>
 800547a:	46c0      	nop			; (mov r8, r8)
 800547c:	0800959e 	.word	0x0800959e
 8005480:	080095af 	.word	0x080095af

08005484 <_scanf_float>:
 8005484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005486:	b08b      	sub	sp, #44	; 0x2c
 8005488:	0016      	movs	r6, r2
 800548a:	9002      	str	r0, [sp, #8]
 800548c:	22ae      	movs	r2, #174	; 0xae
 800548e:	2000      	movs	r0, #0
 8005490:	9307      	str	r3, [sp, #28]
 8005492:	688b      	ldr	r3, [r1, #8]
 8005494:	000f      	movs	r7, r1
 8005496:	1e59      	subs	r1, r3, #1
 8005498:	0052      	lsls	r2, r2, #1
 800549a:	9006      	str	r0, [sp, #24]
 800549c:	4291      	cmp	r1, r2
 800549e:	d905      	bls.n	80054ac <_scanf_float+0x28>
 80054a0:	3b5e      	subs	r3, #94	; 0x5e
 80054a2:	3bff      	subs	r3, #255	; 0xff
 80054a4:	9306      	str	r3, [sp, #24]
 80054a6:	235e      	movs	r3, #94	; 0x5e
 80054a8:	33ff      	adds	r3, #255	; 0xff
 80054aa:	60bb      	str	r3, [r7, #8]
 80054ac:	23f0      	movs	r3, #240	; 0xf0
 80054ae:	683a      	ldr	r2, [r7, #0]
 80054b0:	00db      	lsls	r3, r3, #3
 80054b2:	4313      	orrs	r3, r2
 80054b4:	603b      	str	r3, [r7, #0]
 80054b6:	003b      	movs	r3, r7
 80054b8:	2400      	movs	r4, #0
 80054ba:	331c      	adds	r3, #28
 80054bc:	001d      	movs	r5, r3
 80054be:	9304      	str	r3, [sp, #16]
 80054c0:	9403      	str	r4, [sp, #12]
 80054c2:	9409      	str	r4, [sp, #36]	; 0x24
 80054c4:	9408      	str	r4, [sp, #32]
 80054c6:	9401      	str	r4, [sp, #4]
 80054c8:	9405      	str	r4, [sp, #20]
 80054ca:	68ba      	ldr	r2, [r7, #8]
 80054cc:	2a00      	cmp	r2, #0
 80054ce:	d00a      	beq.n	80054e6 <_scanf_float+0x62>
 80054d0:	6833      	ldr	r3, [r6, #0]
 80054d2:	781b      	ldrb	r3, [r3, #0]
 80054d4:	2b4e      	cmp	r3, #78	; 0x4e
 80054d6:	d844      	bhi.n	8005562 <_scanf_float+0xde>
 80054d8:	0018      	movs	r0, r3
 80054da:	2b40      	cmp	r3, #64	; 0x40
 80054dc:	d82c      	bhi.n	8005538 <_scanf_float+0xb4>
 80054de:	382b      	subs	r0, #43	; 0x2b
 80054e0:	b2c1      	uxtb	r1, r0
 80054e2:	290e      	cmp	r1, #14
 80054e4:	d92a      	bls.n	800553c <_scanf_float+0xb8>
 80054e6:	9b01      	ldr	r3, [sp, #4]
 80054e8:	2b00      	cmp	r3, #0
 80054ea:	d003      	beq.n	80054f4 <_scanf_float+0x70>
 80054ec:	683b      	ldr	r3, [r7, #0]
 80054ee:	4aa3      	ldr	r2, [pc, #652]	; (800577c <_scanf_float+0x2f8>)
 80054f0:	4013      	ands	r3, r2
 80054f2:	603b      	str	r3, [r7, #0]
 80054f4:	9b03      	ldr	r3, [sp, #12]
 80054f6:	3b01      	subs	r3, #1
 80054f8:	2b01      	cmp	r3, #1
 80054fa:	d900      	bls.n	80054fe <_scanf_float+0x7a>
 80054fc:	e0f9      	b.n	80056f2 <_scanf_float+0x26e>
 80054fe:	24be      	movs	r4, #190	; 0xbe
 8005500:	0064      	lsls	r4, r4, #1
 8005502:	9b04      	ldr	r3, [sp, #16]
 8005504:	429d      	cmp	r5, r3
 8005506:	d900      	bls.n	800550a <_scanf_float+0x86>
 8005508:	e0e9      	b.n	80056de <_scanf_float+0x25a>
 800550a:	2301      	movs	r3, #1
 800550c:	9303      	str	r3, [sp, #12]
 800550e:	e183      	b.n	8005818 <_scanf_float+0x394>
 8005510:	0018      	movs	r0, r3
 8005512:	3861      	subs	r0, #97	; 0x61
 8005514:	280d      	cmp	r0, #13
 8005516:	d8e6      	bhi.n	80054e6 <_scanf_float+0x62>
 8005518:	f7fa fe08 	bl	800012c <__gnu_thumb1_case_shi>
 800551c:	ffe50083 	.word	0xffe50083
 8005520:	ffe5ffe5 	.word	0xffe5ffe5
 8005524:	00a200b6 	.word	0x00a200b6
 8005528:	ffe5ffe5 	.word	0xffe5ffe5
 800552c:	ffe50089 	.word	0xffe50089
 8005530:	ffe5ffe5 	.word	0xffe5ffe5
 8005534:	0065ffe5 	.word	0x0065ffe5
 8005538:	3841      	subs	r0, #65	; 0x41
 800553a:	e7eb      	b.n	8005514 <_scanf_float+0x90>
 800553c:	280e      	cmp	r0, #14
 800553e:	d8d2      	bhi.n	80054e6 <_scanf_float+0x62>
 8005540:	f7fa fdf4 	bl	800012c <__gnu_thumb1_case_shi>
 8005544:	ffd1004b 	.word	0xffd1004b
 8005548:	0098004b 	.word	0x0098004b
 800554c:	0020ffd1 	.word	0x0020ffd1
 8005550:	00400040 	.word	0x00400040
 8005554:	00400040 	.word	0x00400040
 8005558:	00400040 	.word	0x00400040
 800555c:	00400040 	.word	0x00400040
 8005560:	0040      	.short	0x0040
 8005562:	2b6e      	cmp	r3, #110	; 0x6e
 8005564:	d809      	bhi.n	800557a <_scanf_float+0xf6>
 8005566:	2b60      	cmp	r3, #96	; 0x60
 8005568:	d8d2      	bhi.n	8005510 <_scanf_float+0x8c>
 800556a:	2b54      	cmp	r3, #84	; 0x54
 800556c:	d07d      	beq.n	800566a <_scanf_float+0x1e6>
 800556e:	2b59      	cmp	r3, #89	; 0x59
 8005570:	d1b9      	bne.n	80054e6 <_scanf_float+0x62>
 8005572:	2c07      	cmp	r4, #7
 8005574:	d1b7      	bne.n	80054e6 <_scanf_float+0x62>
 8005576:	2408      	movs	r4, #8
 8005578:	e02c      	b.n	80055d4 <_scanf_float+0x150>
 800557a:	2b74      	cmp	r3, #116	; 0x74
 800557c:	d075      	beq.n	800566a <_scanf_float+0x1e6>
 800557e:	2b79      	cmp	r3, #121	; 0x79
 8005580:	d0f7      	beq.n	8005572 <_scanf_float+0xee>
 8005582:	e7b0      	b.n	80054e6 <_scanf_float+0x62>
 8005584:	6839      	ldr	r1, [r7, #0]
 8005586:	05c8      	lsls	r0, r1, #23
 8005588:	d51c      	bpl.n	80055c4 <_scanf_float+0x140>
 800558a:	2380      	movs	r3, #128	; 0x80
 800558c:	4399      	bics	r1, r3
 800558e:	9b01      	ldr	r3, [sp, #4]
 8005590:	6039      	str	r1, [r7, #0]
 8005592:	3301      	adds	r3, #1
 8005594:	9301      	str	r3, [sp, #4]
 8005596:	9b06      	ldr	r3, [sp, #24]
 8005598:	2b00      	cmp	r3, #0
 800559a:	d003      	beq.n	80055a4 <_scanf_float+0x120>
 800559c:	3b01      	subs	r3, #1
 800559e:	3201      	adds	r2, #1
 80055a0:	9306      	str	r3, [sp, #24]
 80055a2:	60ba      	str	r2, [r7, #8]
 80055a4:	68bb      	ldr	r3, [r7, #8]
 80055a6:	3b01      	subs	r3, #1
 80055a8:	60bb      	str	r3, [r7, #8]
 80055aa:	693b      	ldr	r3, [r7, #16]
 80055ac:	3301      	adds	r3, #1
 80055ae:	613b      	str	r3, [r7, #16]
 80055b0:	6873      	ldr	r3, [r6, #4]
 80055b2:	3b01      	subs	r3, #1
 80055b4:	6073      	str	r3, [r6, #4]
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	dc00      	bgt.n	80055bc <_scanf_float+0x138>
 80055ba:	e086      	b.n	80056ca <_scanf_float+0x246>
 80055bc:	6833      	ldr	r3, [r6, #0]
 80055be:	3301      	adds	r3, #1
 80055c0:	6033      	str	r3, [r6, #0]
 80055c2:	e782      	b.n	80054ca <_scanf_float+0x46>
 80055c4:	9a03      	ldr	r2, [sp, #12]
 80055c6:	1912      	adds	r2, r2, r4
 80055c8:	2a00      	cmp	r2, #0
 80055ca:	d18c      	bne.n	80054e6 <_scanf_float+0x62>
 80055cc:	683a      	ldr	r2, [r7, #0]
 80055ce:	496c      	ldr	r1, [pc, #432]	; (8005780 <_scanf_float+0x2fc>)
 80055d0:	400a      	ands	r2, r1
 80055d2:	603a      	str	r2, [r7, #0]
 80055d4:	702b      	strb	r3, [r5, #0]
 80055d6:	3501      	adds	r5, #1
 80055d8:	e7e4      	b.n	80055a4 <_scanf_float+0x120>
 80055da:	2180      	movs	r1, #128	; 0x80
 80055dc:	683a      	ldr	r2, [r7, #0]
 80055de:	420a      	tst	r2, r1
 80055e0:	d081      	beq.n	80054e6 <_scanf_float+0x62>
 80055e2:	438a      	bics	r2, r1
 80055e4:	e7f5      	b.n	80055d2 <_scanf_float+0x14e>
 80055e6:	9a03      	ldr	r2, [sp, #12]
 80055e8:	2a00      	cmp	r2, #0
 80055ea:	d10f      	bne.n	800560c <_scanf_float+0x188>
 80055ec:	9a01      	ldr	r2, [sp, #4]
 80055ee:	2a00      	cmp	r2, #0
 80055f0:	d10f      	bne.n	8005612 <_scanf_float+0x18e>
 80055f2:	683a      	ldr	r2, [r7, #0]
 80055f4:	21e0      	movs	r1, #224	; 0xe0
 80055f6:	0010      	movs	r0, r2
 80055f8:	00c9      	lsls	r1, r1, #3
 80055fa:	4008      	ands	r0, r1
 80055fc:	4288      	cmp	r0, r1
 80055fe:	d108      	bne.n	8005612 <_scanf_float+0x18e>
 8005600:	4960      	ldr	r1, [pc, #384]	; (8005784 <_scanf_float+0x300>)
 8005602:	400a      	ands	r2, r1
 8005604:	603a      	str	r2, [r7, #0]
 8005606:	2201      	movs	r2, #1
 8005608:	9203      	str	r2, [sp, #12]
 800560a:	e7e3      	b.n	80055d4 <_scanf_float+0x150>
 800560c:	9a03      	ldr	r2, [sp, #12]
 800560e:	2a02      	cmp	r2, #2
 8005610:	d059      	beq.n	80056c6 <_scanf_float+0x242>
 8005612:	2c01      	cmp	r4, #1
 8005614:	d002      	beq.n	800561c <_scanf_float+0x198>
 8005616:	2c04      	cmp	r4, #4
 8005618:	d000      	beq.n	800561c <_scanf_float+0x198>
 800561a:	e764      	b.n	80054e6 <_scanf_float+0x62>
 800561c:	3401      	adds	r4, #1
 800561e:	b2e4      	uxtb	r4, r4
 8005620:	e7d8      	b.n	80055d4 <_scanf_float+0x150>
 8005622:	9a03      	ldr	r2, [sp, #12]
 8005624:	2a01      	cmp	r2, #1
 8005626:	d000      	beq.n	800562a <_scanf_float+0x1a6>
 8005628:	e75d      	b.n	80054e6 <_scanf_float+0x62>
 800562a:	2202      	movs	r2, #2
 800562c:	e7ec      	b.n	8005608 <_scanf_float+0x184>
 800562e:	2c00      	cmp	r4, #0
 8005630:	d110      	bne.n	8005654 <_scanf_float+0x1d0>
 8005632:	9a01      	ldr	r2, [sp, #4]
 8005634:	2a00      	cmp	r2, #0
 8005636:	d000      	beq.n	800563a <_scanf_float+0x1b6>
 8005638:	e758      	b.n	80054ec <_scanf_float+0x68>
 800563a:	683a      	ldr	r2, [r7, #0]
 800563c:	21e0      	movs	r1, #224	; 0xe0
 800563e:	0010      	movs	r0, r2
 8005640:	00c9      	lsls	r1, r1, #3
 8005642:	4008      	ands	r0, r1
 8005644:	4288      	cmp	r0, r1
 8005646:	d000      	beq.n	800564a <_scanf_float+0x1c6>
 8005648:	e754      	b.n	80054f4 <_scanf_float+0x70>
 800564a:	494e      	ldr	r1, [pc, #312]	; (8005784 <_scanf_float+0x300>)
 800564c:	3401      	adds	r4, #1
 800564e:	400a      	ands	r2, r1
 8005650:	603a      	str	r2, [r7, #0]
 8005652:	e7bf      	b.n	80055d4 <_scanf_float+0x150>
 8005654:	21fd      	movs	r1, #253	; 0xfd
 8005656:	1ee2      	subs	r2, r4, #3
 8005658:	420a      	tst	r2, r1
 800565a:	d000      	beq.n	800565e <_scanf_float+0x1da>
 800565c:	e743      	b.n	80054e6 <_scanf_float+0x62>
 800565e:	e7dd      	b.n	800561c <_scanf_float+0x198>
 8005660:	2c02      	cmp	r4, #2
 8005662:	d000      	beq.n	8005666 <_scanf_float+0x1e2>
 8005664:	e73f      	b.n	80054e6 <_scanf_float+0x62>
 8005666:	2403      	movs	r4, #3
 8005668:	e7b4      	b.n	80055d4 <_scanf_float+0x150>
 800566a:	2c06      	cmp	r4, #6
 800566c:	d000      	beq.n	8005670 <_scanf_float+0x1ec>
 800566e:	e73a      	b.n	80054e6 <_scanf_float+0x62>
 8005670:	2407      	movs	r4, #7
 8005672:	e7af      	b.n	80055d4 <_scanf_float+0x150>
 8005674:	683a      	ldr	r2, [r7, #0]
 8005676:	0591      	lsls	r1, r2, #22
 8005678:	d400      	bmi.n	800567c <_scanf_float+0x1f8>
 800567a:	e734      	b.n	80054e6 <_scanf_float+0x62>
 800567c:	4942      	ldr	r1, [pc, #264]	; (8005788 <_scanf_float+0x304>)
 800567e:	400a      	ands	r2, r1
 8005680:	603a      	str	r2, [r7, #0]
 8005682:	9a01      	ldr	r2, [sp, #4]
 8005684:	9205      	str	r2, [sp, #20]
 8005686:	e7a5      	b.n	80055d4 <_scanf_float+0x150>
 8005688:	21a0      	movs	r1, #160	; 0xa0
 800568a:	2080      	movs	r0, #128	; 0x80
 800568c:	683a      	ldr	r2, [r7, #0]
 800568e:	00c9      	lsls	r1, r1, #3
 8005690:	4011      	ands	r1, r2
 8005692:	00c0      	lsls	r0, r0, #3
 8005694:	4281      	cmp	r1, r0
 8005696:	d006      	beq.n	80056a6 <_scanf_float+0x222>
 8005698:	4202      	tst	r2, r0
 800569a:	d100      	bne.n	800569e <_scanf_float+0x21a>
 800569c:	e723      	b.n	80054e6 <_scanf_float+0x62>
 800569e:	9901      	ldr	r1, [sp, #4]
 80056a0:	2900      	cmp	r1, #0
 80056a2:	d100      	bne.n	80056a6 <_scanf_float+0x222>
 80056a4:	e726      	b.n	80054f4 <_scanf_float+0x70>
 80056a6:	0591      	lsls	r1, r2, #22
 80056a8:	d404      	bmi.n	80056b4 <_scanf_float+0x230>
 80056aa:	9901      	ldr	r1, [sp, #4]
 80056ac:	9805      	ldr	r0, [sp, #20]
 80056ae:	9509      	str	r5, [sp, #36]	; 0x24
 80056b0:	1a09      	subs	r1, r1, r0
 80056b2:	9108      	str	r1, [sp, #32]
 80056b4:	4933      	ldr	r1, [pc, #204]	; (8005784 <_scanf_float+0x300>)
 80056b6:	400a      	ands	r2, r1
 80056b8:	21c0      	movs	r1, #192	; 0xc0
 80056ba:	0049      	lsls	r1, r1, #1
 80056bc:	430a      	orrs	r2, r1
 80056be:	603a      	str	r2, [r7, #0]
 80056c0:	2200      	movs	r2, #0
 80056c2:	9201      	str	r2, [sp, #4]
 80056c4:	e786      	b.n	80055d4 <_scanf_float+0x150>
 80056c6:	2203      	movs	r2, #3
 80056c8:	e79e      	b.n	8005608 <_scanf_float+0x184>
 80056ca:	23c0      	movs	r3, #192	; 0xc0
 80056cc:	005b      	lsls	r3, r3, #1
 80056ce:	0031      	movs	r1, r6
 80056d0:	58fb      	ldr	r3, [r7, r3]
 80056d2:	9802      	ldr	r0, [sp, #8]
 80056d4:	4798      	blx	r3
 80056d6:	2800      	cmp	r0, #0
 80056d8:	d100      	bne.n	80056dc <_scanf_float+0x258>
 80056da:	e6f6      	b.n	80054ca <_scanf_float+0x46>
 80056dc:	e703      	b.n	80054e6 <_scanf_float+0x62>
 80056de:	3d01      	subs	r5, #1
 80056e0:	593b      	ldr	r3, [r7, r4]
 80056e2:	0032      	movs	r2, r6
 80056e4:	7829      	ldrb	r1, [r5, #0]
 80056e6:	9802      	ldr	r0, [sp, #8]
 80056e8:	4798      	blx	r3
 80056ea:	693b      	ldr	r3, [r7, #16]
 80056ec:	3b01      	subs	r3, #1
 80056ee:	613b      	str	r3, [r7, #16]
 80056f0:	e707      	b.n	8005502 <_scanf_float+0x7e>
 80056f2:	1e63      	subs	r3, r4, #1
 80056f4:	2b06      	cmp	r3, #6
 80056f6:	d80e      	bhi.n	8005716 <_scanf_float+0x292>
 80056f8:	9503      	str	r5, [sp, #12]
 80056fa:	2c02      	cmp	r4, #2
 80056fc:	d920      	bls.n	8005740 <_scanf_float+0x2bc>
 80056fe:	1b63      	subs	r3, r4, r5
 8005700:	b2db      	uxtb	r3, r3
 8005702:	9306      	str	r3, [sp, #24]
 8005704:	9b03      	ldr	r3, [sp, #12]
 8005706:	9a06      	ldr	r2, [sp, #24]
 8005708:	189b      	adds	r3, r3, r2
 800570a:	b2db      	uxtb	r3, r3
 800570c:	2b03      	cmp	r3, #3
 800570e:	d827      	bhi.n	8005760 <_scanf_float+0x2dc>
 8005710:	3c03      	subs	r4, #3
 8005712:	b2e4      	uxtb	r4, r4
 8005714:	1b2d      	subs	r5, r5, r4
 8005716:	683b      	ldr	r3, [r7, #0]
 8005718:	05da      	lsls	r2, r3, #23
 800571a:	d552      	bpl.n	80057c2 <_scanf_float+0x33e>
 800571c:	055b      	lsls	r3, r3, #21
 800571e:	d535      	bpl.n	800578c <_scanf_float+0x308>
 8005720:	24be      	movs	r4, #190	; 0xbe
 8005722:	0064      	lsls	r4, r4, #1
 8005724:	9b04      	ldr	r3, [sp, #16]
 8005726:	429d      	cmp	r5, r3
 8005728:	d800      	bhi.n	800572c <_scanf_float+0x2a8>
 800572a:	e6ee      	b.n	800550a <_scanf_float+0x86>
 800572c:	3d01      	subs	r5, #1
 800572e:	593b      	ldr	r3, [r7, r4]
 8005730:	0032      	movs	r2, r6
 8005732:	7829      	ldrb	r1, [r5, #0]
 8005734:	9802      	ldr	r0, [sp, #8]
 8005736:	4798      	blx	r3
 8005738:	693b      	ldr	r3, [r7, #16]
 800573a:	3b01      	subs	r3, #1
 800573c:	613b      	str	r3, [r7, #16]
 800573e:	e7f1      	b.n	8005724 <_scanf_float+0x2a0>
 8005740:	24be      	movs	r4, #190	; 0xbe
 8005742:	0064      	lsls	r4, r4, #1
 8005744:	9b04      	ldr	r3, [sp, #16]
 8005746:	429d      	cmp	r5, r3
 8005748:	d800      	bhi.n	800574c <_scanf_float+0x2c8>
 800574a:	e6de      	b.n	800550a <_scanf_float+0x86>
 800574c:	3d01      	subs	r5, #1
 800574e:	593b      	ldr	r3, [r7, r4]
 8005750:	0032      	movs	r2, r6
 8005752:	7829      	ldrb	r1, [r5, #0]
 8005754:	9802      	ldr	r0, [sp, #8]
 8005756:	4798      	blx	r3
 8005758:	693b      	ldr	r3, [r7, #16]
 800575a:	3b01      	subs	r3, #1
 800575c:	613b      	str	r3, [r7, #16]
 800575e:	e7f1      	b.n	8005744 <_scanf_float+0x2c0>
 8005760:	9b03      	ldr	r3, [sp, #12]
 8005762:	0032      	movs	r2, r6
 8005764:	3b01      	subs	r3, #1
 8005766:	7819      	ldrb	r1, [r3, #0]
 8005768:	9303      	str	r3, [sp, #12]
 800576a:	23be      	movs	r3, #190	; 0xbe
 800576c:	005b      	lsls	r3, r3, #1
 800576e:	58fb      	ldr	r3, [r7, r3]
 8005770:	9802      	ldr	r0, [sp, #8]
 8005772:	4798      	blx	r3
 8005774:	693b      	ldr	r3, [r7, #16]
 8005776:	3b01      	subs	r3, #1
 8005778:	613b      	str	r3, [r7, #16]
 800577a:	e7c3      	b.n	8005704 <_scanf_float+0x280>
 800577c:	fffffeff 	.word	0xfffffeff
 8005780:	fffffe7f 	.word	0xfffffe7f
 8005784:	fffff87f 	.word	0xfffff87f
 8005788:	fffffd7f 	.word	0xfffffd7f
 800578c:	693b      	ldr	r3, [r7, #16]
 800578e:	1e6c      	subs	r4, r5, #1
 8005790:	7821      	ldrb	r1, [r4, #0]
 8005792:	3b01      	subs	r3, #1
 8005794:	613b      	str	r3, [r7, #16]
 8005796:	2965      	cmp	r1, #101	; 0x65
 8005798:	d00c      	beq.n	80057b4 <_scanf_float+0x330>
 800579a:	2945      	cmp	r1, #69	; 0x45
 800579c:	d00a      	beq.n	80057b4 <_scanf_float+0x330>
 800579e:	23be      	movs	r3, #190	; 0xbe
 80057a0:	005b      	lsls	r3, r3, #1
 80057a2:	58fb      	ldr	r3, [r7, r3]
 80057a4:	0032      	movs	r2, r6
 80057a6:	9802      	ldr	r0, [sp, #8]
 80057a8:	4798      	blx	r3
 80057aa:	693b      	ldr	r3, [r7, #16]
 80057ac:	1eac      	subs	r4, r5, #2
 80057ae:	3b01      	subs	r3, #1
 80057b0:	7821      	ldrb	r1, [r4, #0]
 80057b2:	613b      	str	r3, [r7, #16]
 80057b4:	23be      	movs	r3, #190	; 0xbe
 80057b6:	005b      	lsls	r3, r3, #1
 80057b8:	0032      	movs	r2, r6
 80057ba:	58fb      	ldr	r3, [r7, r3]
 80057bc:	9802      	ldr	r0, [sp, #8]
 80057be:	4798      	blx	r3
 80057c0:	0025      	movs	r5, r4
 80057c2:	683a      	ldr	r2, [r7, #0]
 80057c4:	2310      	movs	r3, #16
 80057c6:	0011      	movs	r1, r2
 80057c8:	4019      	ands	r1, r3
 80057ca:	9103      	str	r1, [sp, #12]
 80057cc:	421a      	tst	r2, r3
 80057ce:	d15b      	bne.n	8005888 <_scanf_float+0x404>
 80057d0:	22c0      	movs	r2, #192	; 0xc0
 80057d2:	7029      	strb	r1, [r5, #0]
 80057d4:	683b      	ldr	r3, [r7, #0]
 80057d6:	00d2      	lsls	r2, r2, #3
 80057d8:	4013      	ands	r3, r2
 80057da:	2280      	movs	r2, #128	; 0x80
 80057dc:	00d2      	lsls	r2, r2, #3
 80057de:	4293      	cmp	r3, r2
 80057e0:	d11d      	bne.n	800581e <_scanf_float+0x39a>
 80057e2:	9b05      	ldr	r3, [sp, #20]
 80057e4:	9a01      	ldr	r2, [sp, #4]
 80057e6:	9901      	ldr	r1, [sp, #4]
 80057e8:	1a9a      	subs	r2, r3, r2
 80057ea:	428b      	cmp	r3, r1
 80057ec:	d124      	bne.n	8005838 <_scanf_float+0x3b4>
 80057ee:	2200      	movs	r2, #0
 80057f0:	9904      	ldr	r1, [sp, #16]
 80057f2:	9802      	ldr	r0, [sp, #8]
 80057f4:	f000 ff5a 	bl	80066ac <_strtod_r>
 80057f8:	9b07      	ldr	r3, [sp, #28]
 80057fa:	683a      	ldr	r2, [r7, #0]
 80057fc:	0004      	movs	r4, r0
 80057fe:	000d      	movs	r5, r1
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	0791      	lsls	r1, r2, #30
 8005804:	d525      	bpl.n	8005852 <_scanf_float+0x3ce>
 8005806:	9907      	ldr	r1, [sp, #28]
 8005808:	1d1a      	adds	r2, r3, #4
 800580a:	600a      	str	r2, [r1, #0]
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	601c      	str	r4, [r3, #0]
 8005810:	605d      	str	r5, [r3, #4]
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	3301      	adds	r3, #1
 8005816:	60fb      	str	r3, [r7, #12]
 8005818:	9803      	ldr	r0, [sp, #12]
 800581a:	b00b      	add	sp, #44	; 0x2c
 800581c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800581e:	9b08      	ldr	r3, [sp, #32]
 8005820:	2b00      	cmp	r3, #0
 8005822:	d0e4      	beq.n	80057ee <_scanf_float+0x36a>
 8005824:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005826:	9a03      	ldr	r2, [sp, #12]
 8005828:	1c59      	adds	r1, r3, #1
 800582a:	9802      	ldr	r0, [sp, #8]
 800582c:	230a      	movs	r3, #10
 800582e:	f000 ffcb 	bl	80067c8 <_strtol_r>
 8005832:	9b08      	ldr	r3, [sp, #32]
 8005834:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005836:	1ac2      	subs	r2, r0, r3
 8005838:	003b      	movs	r3, r7
 800583a:	3370      	adds	r3, #112	; 0x70
 800583c:	33ff      	adds	r3, #255	; 0xff
 800583e:	429d      	cmp	r5, r3
 8005840:	d302      	bcc.n	8005848 <_scanf_float+0x3c4>
 8005842:	003d      	movs	r5, r7
 8005844:	356f      	adds	r5, #111	; 0x6f
 8005846:	35ff      	adds	r5, #255	; 0xff
 8005848:	0028      	movs	r0, r5
 800584a:	4910      	ldr	r1, [pc, #64]	; (800588c <_scanf_float+0x408>)
 800584c:	f000 f856 	bl	80058fc <siprintf>
 8005850:	e7cd      	b.n	80057ee <_scanf_float+0x36a>
 8005852:	1d19      	adds	r1, r3, #4
 8005854:	0752      	lsls	r2, r2, #29
 8005856:	d502      	bpl.n	800585e <_scanf_float+0x3da>
 8005858:	9a07      	ldr	r2, [sp, #28]
 800585a:	6011      	str	r1, [r2, #0]
 800585c:	e7d6      	b.n	800580c <_scanf_float+0x388>
 800585e:	9a07      	ldr	r2, [sp, #28]
 8005860:	0020      	movs	r0, r4
 8005862:	6011      	str	r1, [r2, #0]
 8005864:	681e      	ldr	r6, [r3, #0]
 8005866:	0022      	movs	r2, r4
 8005868:	002b      	movs	r3, r5
 800586a:	0029      	movs	r1, r5
 800586c:	f7fc fc72 	bl	8002154 <__aeabi_dcmpun>
 8005870:	2800      	cmp	r0, #0
 8005872:	d004      	beq.n	800587e <_scanf_float+0x3fa>
 8005874:	4806      	ldr	r0, [pc, #24]	; (8005890 <_scanf_float+0x40c>)
 8005876:	f001 f82b 	bl	80068d0 <nanf>
 800587a:	6030      	str	r0, [r6, #0]
 800587c:	e7c9      	b.n	8005812 <_scanf_float+0x38e>
 800587e:	0020      	movs	r0, r4
 8005880:	0029      	movs	r1, r5
 8005882:	f7fc fd59 	bl	8002338 <__aeabi_d2f>
 8005886:	e7f8      	b.n	800587a <_scanf_float+0x3f6>
 8005888:	2300      	movs	r3, #0
 800588a:	e63f      	b.n	800550c <_scanf_float+0x88>
 800588c:	080095c0 	.word	0x080095c0
 8005890:	080099af 	.word	0x080099af

08005894 <sniprintf>:
 8005894:	b40c      	push	{r2, r3}
 8005896:	b530      	push	{r4, r5, lr}
 8005898:	4b17      	ldr	r3, [pc, #92]	; (80058f8 <sniprintf+0x64>)
 800589a:	000c      	movs	r4, r1
 800589c:	681d      	ldr	r5, [r3, #0]
 800589e:	b09d      	sub	sp, #116	; 0x74
 80058a0:	2900      	cmp	r1, #0
 80058a2:	da08      	bge.n	80058b6 <sniprintf+0x22>
 80058a4:	238b      	movs	r3, #139	; 0x8b
 80058a6:	2001      	movs	r0, #1
 80058a8:	602b      	str	r3, [r5, #0]
 80058aa:	4240      	negs	r0, r0
 80058ac:	b01d      	add	sp, #116	; 0x74
 80058ae:	bc30      	pop	{r4, r5}
 80058b0:	bc08      	pop	{r3}
 80058b2:	b002      	add	sp, #8
 80058b4:	4718      	bx	r3
 80058b6:	2382      	movs	r3, #130	; 0x82
 80058b8:	466a      	mov	r2, sp
 80058ba:	009b      	lsls	r3, r3, #2
 80058bc:	8293      	strh	r3, [r2, #20]
 80058be:	2300      	movs	r3, #0
 80058c0:	9002      	str	r0, [sp, #8]
 80058c2:	9006      	str	r0, [sp, #24]
 80058c4:	4299      	cmp	r1, r3
 80058c6:	d000      	beq.n	80058ca <sniprintf+0x36>
 80058c8:	1e4b      	subs	r3, r1, #1
 80058ca:	9304      	str	r3, [sp, #16]
 80058cc:	9307      	str	r3, [sp, #28]
 80058ce:	2301      	movs	r3, #1
 80058d0:	466a      	mov	r2, sp
 80058d2:	425b      	negs	r3, r3
 80058d4:	82d3      	strh	r3, [r2, #22]
 80058d6:	0028      	movs	r0, r5
 80058d8:	ab21      	add	r3, sp, #132	; 0x84
 80058da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80058dc:	a902      	add	r1, sp, #8
 80058de:	9301      	str	r3, [sp, #4]
 80058e0:	f002 fa56 	bl	8007d90 <_svfiprintf_r>
 80058e4:	1c43      	adds	r3, r0, #1
 80058e6:	da01      	bge.n	80058ec <sniprintf+0x58>
 80058e8:	238b      	movs	r3, #139	; 0x8b
 80058ea:	602b      	str	r3, [r5, #0]
 80058ec:	2c00      	cmp	r4, #0
 80058ee:	d0dd      	beq.n	80058ac <sniprintf+0x18>
 80058f0:	2200      	movs	r2, #0
 80058f2:	9b02      	ldr	r3, [sp, #8]
 80058f4:	701a      	strb	r2, [r3, #0]
 80058f6:	e7d9      	b.n	80058ac <sniprintf+0x18>
 80058f8:	200001d0 	.word	0x200001d0

080058fc <siprintf>:
 80058fc:	b40e      	push	{r1, r2, r3}
 80058fe:	b500      	push	{lr}
 8005900:	490b      	ldr	r1, [pc, #44]	; (8005930 <siprintf+0x34>)
 8005902:	b09c      	sub	sp, #112	; 0x70
 8005904:	ab1d      	add	r3, sp, #116	; 0x74
 8005906:	9002      	str	r0, [sp, #8]
 8005908:	9006      	str	r0, [sp, #24]
 800590a:	9107      	str	r1, [sp, #28]
 800590c:	9104      	str	r1, [sp, #16]
 800590e:	4809      	ldr	r0, [pc, #36]	; (8005934 <siprintf+0x38>)
 8005910:	4909      	ldr	r1, [pc, #36]	; (8005938 <siprintf+0x3c>)
 8005912:	cb04      	ldmia	r3!, {r2}
 8005914:	9105      	str	r1, [sp, #20]
 8005916:	6800      	ldr	r0, [r0, #0]
 8005918:	a902      	add	r1, sp, #8
 800591a:	9301      	str	r3, [sp, #4]
 800591c:	f002 fa38 	bl	8007d90 <_svfiprintf_r>
 8005920:	2200      	movs	r2, #0
 8005922:	9b02      	ldr	r3, [sp, #8]
 8005924:	701a      	strb	r2, [r3, #0]
 8005926:	b01c      	add	sp, #112	; 0x70
 8005928:	bc08      	pop	{r3}
 800592a:	b003      	add	sp, #12
 800592c:	4718      	bx	r3
 800592e:	46c0      	nop			; (mov r8, r8)
 8005930:	7fffffff 	.word	0x7fffffff
 8005934:	200001d0 	.word	0x200001d0
 8005938:	ffff0208 	.word	0xffff0208

0800593c <std>:
 800593c:	2300      	movs	r3, #0
 800593e:	b510      	push	{r4, lr}
 8005940:	0004      	movs	r4, r0
 8005942:	6003      	str	r3, [r0, #0]
 8005944:	6043      	str	r3, [r0, #4]
 8005946:	6083      	str	r3, [r0, #8]
 8005948:	8181      	strh	r1, [r0, #12]
 800594a:	6643      	str	r3, [r0, #100]	; 0x64
 800594c:	0019      	movs	r1, r3
 800594e:	81c2      	strh	r2, [r0, #14]
 8005950:	6103      	str	r3, [r0, #16]
 8005952:	6143      	str	r3, [r0, #20]
 8005954:	6183      	str	r3, [r0, #24]
 8005956:	2208      	movs	r2, #8
 8005958:	305c      	adds	r0, #92	; 0x5c
 800595a:	f000 ff66 	bl	800682a <memset>
 800595e:	4b05      	ldr	r3, [pc, #20]	; (8005974 <std+0x38>)
 8005960:	6224      	str	r4, [r4, #32]
 8005962:	6263      	str	r3, [r4, #36]	; 0x24
 8005964:	4b04      	ldr	r3, [pc, #16]	; (8005978 <std+0x3c>)
 8005966:	62a3      	str	r3, [r4, #40]	; 0x28
 8005968:	4b04      	ldr	r3, [pc, #16]	; (800597c <std+0x40>)
 800596a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800596c:	4b04      	ldr	r3, [pc, #16]	; (8005980 <std+0x44>)
 800596e:	6323      	str	r3, [r4, #48]	; 0x30
 8005970:	bd10      	pop	{r4, pc}
 8005972:	46c0      	nop			; (mov r8, r8)
 8005974:	08008c15 	.word	0x08008c15
 8005978:	08008c3d 	.word	0x08008c3d
 800597c:	08008c75 	.word	0x08008c75
 8005980:	08008ca1 	.word	0x08008ca1

08005984 <stdio_exit_handler>:
 8005984:	b510      	push	{r4, lr}
 8005986:	4a03      	ldr	r2, [pc, #12]	; (8005994 <stdio_exit_handler+0x10>)
 8005988:	4903      	ldr	r1, [pc, #12]	; (8005998 <stdio_exit_handler+0x14>)
 800598a:	4804      	ldr	r0, [pc, #16]	; (800599c <stdio_exit_handler+0x18>)
 800598c:	f000 ff20 	bl	80067d0 <_fwalk_sglue>
 8005990:	bd10      	pop	{r4, pc}
 8005992:	46c0      	nop			; (mov r8, r8)
 8005994:	2000000c 	.word	0x2000000c
 8005998:	08008225 	.word	0x08008225
 800599c:	20000184 	.word	0x20000184

080059a0 <cleanup_stdio>:
 80059a0:	6841      	ldr	r1, [r0, #4]
 80059a2:	4b0b      	ldr	r3, [pc, #44]	; (80059d0 <cleanup_stdio+0x30>)
 80059a4:	b510      	push	{r4, lr}
 80059a6:	0004      	movs	r4, r0
 80059a8:	4299      	cmp	r1, r3
 80059aa:	d001      	beq.n	80059b0 <cleanup_stdio+0x10>
 80059ac:	f002 fc3a 	bl	8008224 <_fflush_r>
 80059b0:	68a1      	ldr	r1, [r4, #8]
 80059b2:	4b08      	ldr	r3, [pc, #32]	; (80059d4 <cleanup_stdio+0x34>)
 80059b4:	4299      	cmp	r1, r3
 80059b6:	d002      	beq.n	80059be <cleanup_stdio+0x1e>
 80059b8:	0020      	movs	r0, r4
 80059ba:	f002 fc33 	bl	8008224 <_fflush_r>
 80059be:	68e1      	ldr	r1, [r4, #12]
 80059c0:	4b05      	ldr	r3, [pc, #20]	; (80059d8 <cleanup_stdio+0x38>)
 80059c2:	4299      	cmp	r1, r3
 80059c4:	d002      	beq.n	80059cc <cleanup_stdio+0x2c>
 80059c6:	0020      	movs	r0, r4
 80059c8:	f002 fc2c 	bl	8008224 <_fflush_r>
 80059cc:	bd10      	pop	{r4, pc}
 80059ce:	46c0      	nop			; (mov r8, r8)
 80059d0:	200002c4 	.word	0x200002c4
 80059d4:	2000032c 	.word	0x2000032c
 80059d8:	20000394 	.word	0x20000394

080059dc <global_stdio_init.part.0>:
 80059dc:	b510      	push	{r4, lr}
 80059de:	4b09      	ldr	r3, [pc, #36]	; (8005a04 <global_stdio_init.part.0+0x28>)
 80059e0:	4a09      	ldr	r2, [pc, #36]	; (8005a08 <global_stdio_init.part.0+0x2c>)
 80059e2:	2104      	movs	r1, #4
 80059e4:	601a      	str	r2, [r3, #0]
 80059e6:	4809      	ldr	r0, [pc, #36]	; (8005a0c <global_stdio_init.part.0+0x30>)
 80059e8:	2200      	movs	r2, #0
 80059ea:	f7ff ffa7 	bl	800593c <std>
 80059ee:	2201      	movs	r2, #1
 80059f0:	2109      	movs	r1, #9
 80059f2:	4807      	ldr	r0, [pc, #28]	; (8005a10 <global_stdio_init.part.0+0x34>)
 80059f4:	f7ff ffa2 	bl	800593c <std>
 80059f8:	2202      	movs	r2, #2
 80059fa:	2112      	movs	r1, #18
 80059fc:	4805      	ldr	r0, [pc, #20]	; (8005a14 <global_stdio_init.part.0+0x38>)
 80059fe:	f7ff ff9d 	bl	800593c <std>
 8005a02:	bd10      	pop	{r4, pc}
 8005a04:	200003fc 	.word	0x200003fc
 8005a08:	08005985 	.word	0x08005985
 8005a0c:	200002c4 	.word	0x200002c4
 8005a10:	2000032c 	.word	0x2000032c
 8005a14:	20000394 	.word	0x20000394

08005a18 <__sfp_lock_acquire>:
 8005a18:	b510      	push	{r4, lr}
 8005a1a:	4802      	ldr	r0, [pc, #8]	; (8005a24 <__sfp_lock_acquire+0xc>)
 8005a1c:	f000 ff3c 	bl	8006898 <__retarget_lock_acquire_recursive>
 8005a20:	bd10      	pop	{r4, pc}
 8005a22:	46c0      	nop			; (mov r8, r8)
 8005a24:	20000401 	.word	0x20000401

08005a28 <__sfp_lock_release>:
 8005a28:	b510      	push	{r4, lr}
 8005a2a:	4802      	ldr	r0, [pc, #8]	; (8005a34 <__sfp_lock_release+0xc>)
 8005a2c:	f000 ff35 	bl	800689a <__retarget_lock_release_recursive>
 8005a30:	bd10      	pop	{r4, pc}
 8005a32:	46c0      	nop			; (mov r8, r8)
 8005a34:	20000401 	.word	0x20000401

08005a38 <__sinit>:
 8005a38:	b510      	push	{r4, lr}
 8005a3a:	0004      	movs	r4, r0
 8005a3c:	f7ff ffec 	bl	8005a18 <__sfp_lock_acquire>
 8005a40:	6a23      	ldr	r3, [r4, #32]
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d002      	beq.n	8005a4c <__sinit+0x14>
 8005a46:	f7ff ffef 	bl	8005a28 <__sfp_lock_release>
 8005a4a:	bd10      	pop	{r4, pc}
 8005a4c:	4b04      	ldr	r3, [pc, #16]	; (8005a60 <__sinit+0x28>)
 8005a4e:	6223      	str	r3, [r4, #32]
 8005a50:	4b04      	ldr	r3, [pc, #16]	; (8005a64 <__sinit+0x2c>)
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	d1f6      	bne.n	8005a46 <__sinit+0xe>
 8005a58:	f7ff ffc0 	bl	80059dc <global_stdio_init.part.0>
 8005a5c:	e7f3      	b.n	8005a46 <__sinit+0xe>
 8005a5e:	46c0      	nop			; (mov r8, r8)
 8005a60:	080059a1 	.word	0x080059a1
 8005a64:	200003fc 	.word	0x200003fc

08005a68 <sulp>:
 8005a68:	b570      	push	{r4, r5, r6, lr}
 8005a6a:	0016      	movs	r6, r2
 8005a6c:	000d      	movs	r5, r1
 8005a6e:	f002 ff9b 	bl	80089a8 <__ulp>
 8005a72:	2e00      	cmp	r6, #0
 8005a74:	d00d      	beq.n	8005a92 <sulp+0x2a>
 8005a76:	236b      	movs	r3, #107	; 0x6b
 8005a78:	006a      	lsls	r2, r5, #1
 8005a7a:	0d52      	lsrs	r2, r2, #21
 8005a7c:	1a9b      	subs	r3, r3, r2
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	dd07      	ble.n	8005a92 <sulp+0x2a>
 8005a82:	2400      	movs	r4, #0
 8005a84:	4a03      	ldr	r2, [pc, #12]	; (8005a94 <sulp+0x2c>)
 8005a86:	051b      	lsls	r3, r3, #20
 8005a88:	189d      	adds	r5, r3, r2
 8005a8a:	002b      	movs	r3, r5
 8005a8c:	0022      	movs	r2, r4
 8005a8e:	f7fb fd1d 	bl	80014cc <__aeabi_dmul>
 8005a92:	bd70      	pop	{r4, r5, r6, pc}
 8005a94:	3ff00000 	.word	0x3ff00000

08005a98 <_strtod_l>:
 8005a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a9a:	b0a1      	sub	sp, #132	; 0x84
 8005a9c:	9219      	str	r2, [sp, #100]	; 0x64
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	2600      	movs	r6, #0
 8005aa2:	2700      	movs	r7, #0
 8005aa4:	9004      	str	r0, [sp, #16]
 8005aa6:	9107      	str	r1, [sp, #28]
 8005aa8:	921c      	str	r2, [sp, #112]	; 0x70
 8005aaa:	911b      	str	r1, [sp, #108]	; 0x6c
 8005aac:	780a      	ldrb	r2, [r1, #0]
 8005aae:	2a2b      	cmp	r2, #43	; 0x2b
 8005ab0:	d055      	beq.n	8005b5e <_strtod_l+0xc6>
 8005ab2:	d841      	bhi.n	8005b38 <_strtod_l+0xa0>
 8005ab4:	2a0d      	cmp	r2, #13
 8005ab6:	d83b      	bhi.n	8005b30 <_strtod_l+0x98>
 8005ab8:	2a08      	cmp	r2, #8
 8005aba:	d83b      	bhi.n	8005b34 <_strtod_l+0x9c>
 8005abc:	2a00      	cmp	r2, #0
 8005abe:	d044      	beq.n	8005b4a <_strtod_l+0xb2>
 8005ac0:	2200      	movs	r2, #0
 8005ac2:	920f      	str	r2, [sp, #60]	; 0x3c
 8005ac4:	2100      	movs	r1, #0
 8005ac6:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8005ac8:	9109      	str	r1, [sp, #36]	; 0x24
 8005aca:	782a      	ldrb	r2, [r5, #0]
 8005acc:	2a30      	cmp	r2, #48	; 0x30
 8005ace:	d000      	beq.n	8005ad2 <_strtod_l+0x3a>
 8005ad0:	e085      	b.n	8005bde <_strtod_l+0x146>
 8005ad2:	786a      	ldrb	r2, [r5, #1]
 8005ad4:	3120      	adds	r1, #32
 8005ad6:	438a      	bics	r2, r1
 8005ad8:	2a58      	cmp	r2, #88	; 0x58
 8005ada:	d000      	beq.n	8005ade <_strtod_l+0x46>
 8005adc:	e075      	b.n	8005bca <_strtod_l+0x132>
 8005ade:	9302      	str	r3, [sp, #8]
 8005ae0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005ae2:	4a97      	ldr	r2, [pc, #604]	; (8005d40 <_strtod_l+0x2a8>)
 8005ae4:	9301      	str	r3, [sp, #4]
 8005ae6:	ab1c      	add	r3, sp, #112	; 0x70
 8005ae8:	9300      	str	r3, [sp, #0]
 8005aea:	9804      	ldr	r0, [sp, #16]
 8005aec:	ab1d      	add	r3, sp, #116	; 0x74
 8005aee:	a91b      	add	r1, sp, #108	; 0x6c
 8005af0:	f001 fdfa 	bl	80076e8 <__gethex>
 8005af4:	230f      	movs	r3, #15
 8005af6:	0002      	movs	r2, r0
 8005af8:	401a      	ands	r2, r3
 8005afa:	0004      	movs	r4, r0
 8005afc:	9205      	str	r2, [sp, #20]
 8005afe:	4218      	tst	r0, r3
 8005b00:	d005      	beq.n	8005b0e <_strtod_l+0x76>
 8005b02:	2a06      	cmp	r2, #6
 8005b04:	d12d      	bne.n	8005b62 <_strtod_l+0xca>
 8005b06:	1c6b      	adds	r3, r5, #1
 8005b08:	931b      	str	r3, [sp, #108]	; 0x6c
 8005b0a:	2300      	movs	r3, #0
 8005b0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8005b0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b10:	2b00      	cmp	r3, #0
 8005b12:	d002      	beq.n	8005b1a <_strtod_l+0x82>
 8005b14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005b16:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005b18:	6013      	str	r3, [r2, #0]
 8005b1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005b1c:	2b00      	cmp	r3, #0
 8005b1e:	d01b      	beq.n	8005b58 <_strtod_l+0xc0>
 8005b20:	2380      	movs	r3, #128	; 0x80
 8005b22:	0032      	movs	r2, r6
 8005b24:	061b      	lsls	r3, r3, #24
 8005b26:	18fb      	adds	r3, r7, r3
 8005b28:	0010      	movs	r0, r2
 8005b2a:	0019      	movs	r1, r3
 8005b2c:	b021      	add	sp, #132	; 0x84
 8005b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005b30:	2a20      	cmp	r2, #32
 8005b32:	d1c5      	bne.n	8005ac0 <_strtod_l+0x28>
 8005b34:	3101      	adds	r1, #1
 8005b36:	e7b8      	b.n	8005aaa <_strtod_l+0x12>
 8005b38:	2a2d      	cmp	r2, #45	; 0x2d
 8005b3a:	d1c1      	bne.n	8005ac0 <_strtod_l+0x28>
 8005b3c:	3a2c      	subs	r2, #44	; 0x2c
 8005b3e:	920f      	str	r2, [sp, #60]	; 0x3c
 8005b40:	1c4a      	adds	r2, r1, #1
 8005b42:	921b      	str	r2, [sp, #108]	; 0x6c
 8005b44:	784a      	ldrb	r2, [r1, #1]
 8005b46:	2a00      	cmp	r2, #0
 8005b48:	d1bc      	bne.n	8005ac4 <_strtod_l+0x2c>
 8005b4a:	9b07      	ldr	r3, [sp, #28]
 8005b4c:	931b      	str	r3, [sp, #108]	; 0x6c
 8005b4e:	2300      	movs	r3, #0
 8005b50:	930f      	str	r3, [sp, #60]	; 0x3c
 8005b52:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b54:	2b00      	cmp	r3, #0
 8005b56:	d1dd      	bne.n	8005b14 <_strtod_l+0x7c>
 8005b58:	0032      	movs	r2, r6
 8005b5a:	003b      	movs	r3, r7
 8005b5c:	e7e4      	b.n	8005b28 <_strtod_l+0x90>
 8005b5e:	2200      	movs	r2, #0
 8005b60:	e7ed      	b.n	8005b3e <_strtod_l+0xa6>
 8005b62:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8005b64:	2a00      	cmp	r2, #0
 8005b66:	d007      	beq.n	8005b78 <_strtod_l+0xe0>
 8005b68:	2135      	movs	r1, #53	; 0x35
 8005b6a:	a81e      	add	r0, sp, #120	; 0x78
 8005b6c:	f003 f80d 	bl	8008b8a <__copybits>
 8005b70:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005b72:	9804      	ldr	r0, [sp, #16]
 8005b74:	f002 fbd6 	bl	8008324 <_Bfree>
 8005b78:	9805      	ldr	r0, [sp, #20]
 8005b7a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005b7c:	3801      	subs	r0, #1
 8005b7e:	2804      	cmp	r0, #4
 8005b80:	d806      	bhi.n	8005b90 <_strtod_l+0xf8>
 8005b82:	f7fa fac9 	bl	8000118 <__gnu_thumb1_case_uqi>
 8005b86:	0312      	.short	0x0312
 8005b88:	1e1c      	.short	0x1e1c
 8005b8a:	12          	.byte	0x12
 8005b8b:	00          	.byte	0x00
 8005b8c:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8005b8e:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8005b90:	05e4      	lsls	r4, r4, #23
 8005b92:	d502      	bpl.n	8005b9a <_strtod_l+0x102>
 8005b94:	2380      	movs	r3, #128	; 0x80
 8005b96:	061b      	lsls	r3, r3, #24
 8005b98:	431f      	orrs	r7, r3
 8005b9a:	4b6a      	ldr	r3, [pc, #424]	; (8005d44 <_strtod_l+0x2ac>)
 8005b9c:	423b      	tst	r3, r7
 8005b9e:	d1b6      	bne.n	8005b0e <_strtod_l+0x76>
 8005ba0:	f000 fe50 	bl	8006844 <__errno>
 8005ba4:	2322      	movs	r3, #34	; 0x22
 8005ba6:	6003      	str	r3, [r0, #0]
 8005ba8:	e7b1      	b.n	8005b0e <_strtod_l+0x76>
 8005baa:	4967      	ldr	r1, [pc, #412]	; (8005d48 <_strtod_l+0x2b0>)
 8005bac:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8005bae:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8005bb0:	400a      	ands	r2, r1
 8005bb2:	4966      	ldr	r1, [pc, #408]	; (8005d4c <_strtod_l+0x2b4>)
 8005bb4:	185b      	adds	r3, r3, r1
 8005bb6:	051b      	lsls	r3, r3, #20
 8005bb8:	431a      	orrs	r2, r3
 8005bba:	0017      	movs	r7, r2
 8005bbc:	e7e8      	b.n	8005b90 <_strtod_l+0xf8>
 8005bbe:	4f61      	ldr	r7, [pc, #388]	; (8005d44 <_strtod_l+0x2ac>)
 8005bc0:	e7e6      	b.n	8005b90 <_strtod_l+0xf8>
 8005bc2:	2601      	movs	r6, #1
 8005bc4:	4f62      	ldr	r7, [pc, #392]	; (8005d50 <_strtod_l+0x2b8>)
 8005bc6:	4276      	negs	r6, r6
 8005bc8:	e7e2      	b.n	8005b90 <_strtod_l+0xf8>
 8005bca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005bcc:	1c5a      	adds	r2, r3, #1
 8005bce:	921b      	str	r2, [sp, #108]	; 0x6c
 8005bd0:	785b      	ldrb	r3, [r3, #1]
 8005bd2:	2b30      	cmp	r3, #48	; 0x30
 8005bd4:	d0f9      	beq.n	8005bca <_strtod_l+0x132>
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d099      	beq.n	8005b0e <_strtod_l+0x76>
 8005bda:	2301      	movs	r3, #1
 8005bdc:	9309      	str	r3, [sp, #36]	; 0x24
 8005bde:	2500      	movs	r5, #0
 8005be0:	220a      	movs	r2, #10
 8005be2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005be4:	950d      	str	r5, [sp, #52]	; 0x34
 8005be6:	9310      	str	r3, [sp, #64]	; 0x40
 8005be8:	9508      	str	r5, [sp, #32]
 8005bea:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005bec:	7804      	ldrb	r4, [r0, #0]
 8005bee:	0023      	movs	r3, r4
 8005bf0:	3b30      	subs	r3, #48	; 0x30
 8005bf2:	b2d9      	uxtb	r1, r3
 8005bf4:	2909      	cmp	r1, #9
 8005bf6:	d927      	bls.n	8005c48 <_strtod_l+0x1b0>
 8005bf8:	2201      	movs	r2, #1
 8005bfa:	4956      	ldr	r1, [pc, #344]	; (8005d54 <_strtod_l+0x2bc>)
 8005bfc:	f000 fe04 	bl	8006808 <strncmp>
 8005c00:	2800      	cmp	r0, #0
 8005c02:	d031      	beq.n	8005c68 <_strtod_l+0x1d0>
 8005c04:	2000      	movs	r0, #0
 8005c06:	0023      	movs	r3, r4
 8005c08:	4684      	mov	ip, r0
 8005c0a:	9a08      	ldr	r2, [sp, #32]
 8005c0c:	900c      	str	r0, [sp, #48]	; 0x30
 8005c0e:	9205      	str	r2, [sp, #20]
 8005c10:	2220      	movs	r2, #32
 8005c12:	0019      	movs	r1, r3
 8005c14:	4391      	bics	r1, r2
 8005c16:	000a      	movs	r2, r1
 8005c18:	2100      	movs	r1, #0
 8005c1a:	9106      	str	r1, [sp, #24]
 8005c1c:	2a45      	cmp	r2, #69	; 0x45
 8005c1e:	d000      	beq.n	8005c22 <_strtod_l+0x18a>
 8005c20:	e0c2      	b.n	8005da8 <_strtod_l+0x310>
 8005c22:	9b05      	ldr	r3, [sp, #20]
 8005c24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c26:	4303      	orrs	r3, r0
 8005c28:	4313      	orrs	r3, r2
 8005c2a:	428b      	cmp	r3, r1
 8005c2c:	d08d      	beq.n	8005b4a <_strtod_l+0xb2>
 8005c2e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005c30:	9307      	str	r3, [sp, #28]
 8005c32:	3301      	adds	r3, #1
 8005c34:	931b      	str	r3, [sp, #108]	; 0x6c
 8005c36:	9b07      	ldr	r3, [sp, #28]
 8005c38:	785b      	ldrb	r3, [r3, #1]
 8005c3a:	2b2b      	cmp	r3, #43	; 0x2b
 8005c3c:	d071      	beq.n	8005d22 <_strtod_l+0x28a>
 8005c3e:	000c      	movs	r4, r1
 8005c40:	2b2d      	cmp	r3, #45	; 0x2d
 8005c42:	d174      	bne.n	8005d2e <_strtod_l+0x296>
 8005c44:	2401      	movs	r4, #1
 8005c46:	e06d      	b.n	8005d24 <_strtod_l+0x28c>
 8005c48:	9908      	ldr	r1, [sp, #32]
 8005c4a:	2908      	cmp	r1, #8
 8005c4c:	dc09      	bgt.n	8005c62 <_strtod_l+0x1ca>
 8005c4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005c50:	4351      	muls	r1, r2
 8005c52:	185b      	adds	r3, r3, r1
 8005c54:	930d      	str	r3, [sp, #52]	; 0x34
 8005c56:	9b08      	ldr	r3, [sp, #32]
 8005c58:	3001      	adds	r0, #1
 8005c5a:	3301      	adds	r3, #1
 8005c5c:	9308      	str	r3, [sp, #32]
 8005c5e:	901b      	str	r0, [sp, #108]	; 0x6c
 8005c60:	e7c3      	b.n	8005bea <_strtod_l+0x152>
 8005c62:	4355      	muls	r5, r2
 8005c64:	195d      	adds	r5, r3, r5
 8005c66:	e7f6      	b.n	8005c56 <_strtod_l+0x1be>
 8005c68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005c6a:	1c5a      	adds	r2, r3, #1
 8005c6c:	921b      	str	r2, [sp, #108]	; 0x6c
 8005c6e:	9a08      	ldr	r2, [sp, #32]
 8005c70:	785b      	ldrb	r3, [r3, #1]
 8005c72:	2a00      	cmp	r2, #0
 8005c74:	d03a      	beq.n	8005cec <_strtod_l+0x254>
 8005c76:	900c      	str	r0, [sp, #48]	; 0x30
 8005c78:	9205      	str	r2, [sp, #20]
 8005c7a:	001a      	movs	r2, r3
 8005c7c:	3a30      	subs	r2, #48	; 0x30
 8005c7e:	2a09      	cmp	r2, #9
 8005c80:	d912      	bls.n	8005ca8 <_strtod_l+0x210>
 8005c82:	2201      	movs	r2, #1
 8005c84:	4694      	mov	ip, r2
 8005c86:	e7c3      	b.n	8005c10 <_strtod_l+0x178>
 8005c88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005c8a:	3001      	adds	r0, #1
 8005c8c:	1c5a      	adds	r2, r3, #1
 8005c8e:	921b      	str	r2, [sp, #108]	; 0x6c
 8005c90:	785b      	ldrb	r3, [r3, #1]
 8005c92:	2b30      	cmp	r3, #48	; 0x30
 8005c94:	d0f8      	beq.n	8005c88 <_strtod_l+0x1f0>
 8005c96:	001a      	movs	r2, r3
 8005c98:	3a31      	subs	r2, #49	; 0x31
 8005c9a:	2a08      	cmp	r2, #8
 8005c9c:	d83c      	bhi.n	8005d18 <_strtod_l+0x280>
 8005c9e:	900c      	str	r0, [sp, #48]	; 0x30
 8005ca0:	2000      	movs	r0, #0
 8005ca2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005ca4:	9005      	str	r0, [sp, #20]
 8005ca6:	9210      	str	r2, [sp, #64]	; 0x40
 8005ca8:	001a      	movs	r2, r3
 8005caa:	1c41      	adds	r1, r0, #1
 8005cac:	3a30      	subs	r2, #48	; 0x30
 8005cae:	2b30      	cmp	r3, #48	; 0x30
 8005cb0:	d016      	beq.n	8005ce0 <_strtod_l+0x248>
 8005cb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005cb4:	185b      	adds	r3, r3, r1
 8005cb6:	930c      	str	r3, [sp, #48]	; 0x30
 8005cb8:	9b05      	ldr	r3, [sp, #20]
 8005cba:	210a      	movs	r1, #10
 8005cbc:	469c      	mov	ip, r3
 8005cbe:	4484      	add	ip, r0
 8005cc0:	4563      	cmp	r3, ip
 8005cc2:	d115      	bne.n	8005cf0 <_strtod_l+0x258>
 8005cc4:	9905      	ldr	r1, [sp, #20]
 8005cc6:	9b05      	ldr	r3, [sp, #20]
 8005cc8:	3101      	adds	r1, #1
 8005cca:	1809      	adds	r1, r1, r0
 8005ccc:	181b      	adds	r3, r3, r0
 8005cce:	9105      	str	r1, [sp, #20]
 8005cd0:	2b08      	cmp	r3, #8
 8005cd2:	dc19      	bgt.n	8005d08 <_strtod_l+0x270>
 8005cd4:	230a      	movs	r3, #10
 8005cd6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005cd8:	434b      	muls	r3, r1
 8005cda:	2100      	movs	r1, #0
 8005cdc:	18d3      	adds	r3, r2, r3
 8005cde:	930d      	str	r3, [sp, #52]	; 0x34
 8005ce0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005ce2:	0008      	movs	r0, r1
 8005ce4:	1c5a      	adds	r2, r3, #1
 8005ce6:	921b      	str	r2, [sp, #108]	; 0x6c
 8005ce8:	785b      	ldrb	r3, [r3, #1]
 8005cea:	e7c6      	b.n	8005c7a <_strtod_l+0x1e2>
 8005cec:	9808      	ldr	r0, [sp, #32]
 8005cee:	e7d0      	b.n	8005c92 <_strtod_l+0x1fa>
 8005cf0:	1c5c      	adds	r4, r3, #1
 8005cf2:	2b08      	cmp	r3, #8
 8005cf4:	dc04      	bgt.n	8005d00 <_strtod_l+0x268>
 8005cf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005cf8:	434b      	muls	r3, r1
 8005cfa:	930d      	str	r3, [sp, #52]	; 0x34
 8005cfc:	0023      	movs	r3, r4
 8005cfe:	e7df      	b.n	8005cc0 <_strtod_l+0x228>
 8005d00:	2c10      	cmp	r4, #16
 8005d02:	dcfb      	bgt.n	8005cfc <_strtod_l+0x264>
 8005d04:	434d      	muls	r5, r1
 8005d06:	e7f9      	b.n	8005cfc <_strtod_l+0x264>
 8005d08:	9b05      	ldr	r3, [sp, #20]
 8005d0a:	2100      	movs	r1, #0
 8005d0c:	2b10      	cmp	r3, #16
 8005d0e:	dce7      	bgt.n	8005ce0 <_strtod_l+0x248>
 8005d10:	230a      	movs	r3, #10
 8005d12:	435d      	muls	r5, r3
 8005d14:	1955      	adds	r5, r2, r5
 8005d16:	e7e3      	b.n	8005ce0 <_strtod_l+0x248>
 8005d18:	2200      	movs	r2, #0
 8005d1a:	920c      	str	r2, [sp, #48]	; 0x30
 8005d1c:	9205      	str	r2, [sp, #20]
 8005d1e:	3201      	adds	r2, #1
 8005d20:	e7b0      	b.n	8005c84 <_strtod_l+0x1ec>
 8005d22:	2400      	movs	r4, #0
 8005d24:	9b07      	ldr	r3, [sp, #28]
 8005d26:	3302      	adds	r3, #2
 8005d28:	931b      	str	r3, [sp, #108]	; 0x6c
 8005d2a:	9b07      	ldr	r3, [sp, #28]
 8005d2c:	789b      	ldrb	r3, [r3, #2]
 8005d2e:	001a      	movs	r2, r3
 8005d30:	3a30      	subs	r2, #48	; 0x30
 8005d32:	2a09      	cmp	r2, #9
 8005d34:	d914      	bls.n	8005d60 <_strtod_l+0x2c8>
 8005d36:	9a07      	ldr	r2, [sp, #28]
 8005d38:	921b      	str	r2, [sp, #108]	; 0x6c
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	e033      	b.n	8005da6 <_strtod_l+0x30e>
 8005d3e:	46c0      	nop			; (mov r8, r8)
 8005d40:	080095c8 	.word	0x080095c8
 8005d44:	7ff00000 	.word	0x7ff00000
 8005d48:	ffefffff 	.word	0xffefffff
 8005d4c:	00000433 	.word	0x00000433
 8005d50:	7fffffff 	.word	0x7fffffff
 8005d54:	080095c5 	.word	0x080095c5
 8005d58:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005d5a:	1c5a      	adds	r2, r3, #1
 8005d5c:	921b      	str	r2, [sp, #108]	; 0x6c
 8005d5e:	785b      	ldrb	r3, [r3, #1]
 8005d60:	2b30      	cmp	r3, #48	; 0x30
 8005d62:	d0f9      	beq.n	8005d58 <_strtod_l+0x2c0>
 8005d64:	2200      	movs	r2, #0
 8005d66:	9206      	str	r2, [sp, #24]
 8005d68:	001a      	movs	r2, r3
 8005d6a:	3a31      	subs	r2, #49	; 0x31
 8005d6c:	2a08      	cmp	r2, #8
 8005d6e:	d81b      	bhi.n	8005da8 <_strtod_l+0x310>
 8005d70:	3b30      	subs	r3, #48	; 0x30
 8005d72:	930e      	str	r3, [sp, #56]	; 0x38
 8005d74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005d76:	9306      	str	r3, [sp, #24]
 8005d78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005d7a:	1c59      	adds	r1, r3, #1
 8005d7c:	911b      	str	r1, [sp, #108]	; 0x6c
 8005d7e:	785b      	ldrb	r3, [r3, #1]
 8005d80:	001a      	movs	r2, r3
 8005d82:	3a30      	subs	r2, #48	; 0x30
 8005d84:	2a09      	cmp	r2, #9
 8005d86:	d93a      	bls.n	8005dfe <_strtod_l+0x366>
 8005d88:	9a06      	ldr	r2, [sp, #24]
 8005d8a:	1a8a      	subs	r2, r1, r2
 8005d8c:	49b2      	ldr	r1, [pc, #712]	; (8006058 <_strtod_l+0x5c0>)
 8005d8e:	9106      	str	r1, [sp, #24]
 8005d90:	2a08      	cmp	r2, #8
 8005d92:	dc04      	bgt.n	8005d9e <_strtod_l+0x306>
 8005d94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005d96:	9206      	str	r2, [sp, #24]
 8005d98:	428a      	cmp	r2, r1
 8005d9a:	dd00      	ble.n	8005d9e <_strtod_l+0x306>
 8005d9c:	9106      	str	r1, [sp, #24]
 8005d9e:	2c00      	cmp	r4, #0
 8005da0:	d002      	beq.n	8005da8 <_strtod_l+0x310>
 8005da2:	9a06      	ldr	r2, [sp, #24]
 8005da4:	4252      	negs	r2, r2
 8005da6:	9206      	str	r2, [sp, #24]
 8005da8:	9a05      	ldr	r2, [sp, #20]
 8005daa:	2a00      	cmp	r2, #0
 8005dac:	d14d      	bne.n	8005e4a <_strtod_l+0x3b2>
 8005dae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005db0:	4310      	orrs	r0, r2
 8005db2:	d000      	beq.n	8005db6 <_strtod_l+0x31e>
 8005db4:	e6ab      	b.n	8005b0e <_strtod_l+0x76>
 8005db6:	4662      	mov	r2, ip
 8005db8:	2a00      	cmp	r2, #0
 8005dba:	d000      	beq.n	8005dbe <_strtod_l+0x326>
 8005dbc:	e6c5      	b.n	8005b4a <_strtod_l+0xb2>
 8005dbe:	2b69      	cmp	r3, #105	; 0x69
 8005dc0:	d027      	beq.n	8005e12 <_strtod_l+0x37a>
 8005dc2:	dc23      	bgt.n	8005e0c <_strtod_l+0x374>
 8005dc4:	2b49      	cmp	r3, #73	; 0x49
 8005dc6:	d024      	beq.n	8005e12 <_strtod_l+0x37a>
 8005dc8:	2b4e      	cmp	r3, #78	; 0x4e
 8005dca:	d000      	beq.n	8005dce <_strtod_l+0x336>
 8005dcc:	e6bd      	b.n	8005b4a <_strtod_l+0xb2>
 8005dce:	49a3      	ldr	r1, [pc, #652]	; (800605c <_strtod_l+0x5c4>)
 8005dd0:	a81b      	add	r0, sp, #108	; 0x6c
 8005dd2:	f001 febf 	bl	8007b54 <__match>
 8005dd6:	2800      	cmp	r0, #0
 8005dd8:	d100      	bne.n	8005ddc <_strtod_l+0x344>
 8005dda:	e6b6      	b.n	8005b4a <_strtod_l+0xb2>
 8005ddc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005dde:	781b      	ldrb	r3, [r3, #0]
 8005de0:	2b28      	cmp	r3, #40	; 0x28
 8005de2:	d12c      	bne.n	8005e3e <_strtod_l+0x3a6>
 8005de4:	499e      	ldr	r1, [pc, #632]	; (8006060 <_strtod_l+0x5c8>)
 8005de6:	aa1e      	add	r2, sp, #120	; 0x78
 8005de8:	a81b      	add	r0, sp, #108	; 0x6c
 8005dea:	f001 fec7 	bl	8007b7c <__hexnan>
 8005dee:	2805      	cmp	r0, #5
 8005df0:	d125      	bne.n	8005e3e <_strtod_l+0x3a6>
 8005df2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005df4:	4a9b      	ldr	r2, [pc, #620]	; (8006064 <_strtod_l+0x5cc>)
 8005df6:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8005df8:	431a      	orrs	r2, r3
 8005dfa:	0017      	movs	r7, r2
 8005dfc:	e687      	b.n	8005b0e <_strtod_l+0x76>
 8005dfe:	220a      	movs	r2, #10
 8005e00:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005e02:	434a      	muls	r2, r1
 8005e04:	18d2      	adds	r2, r2, r3
 8005e06:	3a30      	subs	r2, #48	; 0x30
 8005e08:	920e      	str	r2, [sp, #56]	; 0x38
 8005e0a:	e7b5      	b.n	8005d78 <_strtod_l+0x2e0>
 8005e0c:	2b6e      	cmp	r3, #110	; 0x6e
 8005e0e:	d0de      	beq.n	8005dce <_strtod_l+0x336>
 8005e10:	e69b      	b.n	8005b4a <_strtod_l+0xb2>
 8005e12:	4995      	ldr	r1, [pc, #596]	; (8006068 <_strtod_l+0x5d0>)
 8005e14:	a81b      	add	r0, sp, #108	; 0x6c
 8005e16:	f001 fe9d 	bl	8007b54 <__match>
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	d100      	bne.n	8005e20 <_strtod_l+0x388>
 8005e1e:	e694      	b.n	8005b4a <_strtod_l+0xb2>
 8005e20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005e22:	4992      	ldr	r1, [pc, #584]	; (800606c <_strtod_l+0x5d4>)
 8005e24:	3b01      	subs	r3, #1
 8005e26:	a81b      	add	r0, sp, #108	; 0x6c
 8005e28:	931b      	str	r3, [sp, #108]	; 0x6c
 8005e2a:	f001 fe93 	bl	8007b54 <__match>
 8005e2e:	2800      	cmp	r0, #0
 8005e30:	d102      	bne.n	8005e38 <_strtod_l+0x3a0>
 8005e32:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005e34:	3301      	adds	r3, #1
 8005e36:	931b      	str	r3, [sp, #108]	; 0x6c
 8005e38:	2600      	movs	r6, #0
 8005e3a:	4f8a      	ldr	r7, [pc, #552]	; (8006064 <_strtod_l+0x5cc>)
 8005e3c:	e667      	b.n	8005b0e <_strtod_l+0x76>
 8005e3e:	488c      	ldr	r0, [pc, #560]	; (8006070 <_strtod_l+0x5d8>)
 8005e40:	f000 fd40 	bl	80068c4 <nan>
 8005e44:	0006      	movs	r6, r0
 8005e46:	000f      	movs	r7, r1
 8005e48:	e661      	b.n	8005b0e <_strtod_l+0x76>
 8005e4a:	9b06      	ldr	r3, [sp, #24]
 8005e4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005e4e:	1a9b      	subs	r3, r3, r2
 8005e50:	9309      	str	r3, [sp, #36]	; 0x24
 8005e52:	9b08      	ldr	r3, [sp, #32]
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d101      	bne.n	8005e5c <_strtod_l+0x3c4>
 8005e58:	9b05      	ldr	r3, [sp, #20]
 8005e5a:	9308      	str	r3, [sp, #32]
 8005e5c:	9c05      	ldr	r4, [sp, #20]
 8005e5e:	2c10      	cmp	r4, #16
 8005e60:	dd00      	ble.n	8005e64 <_strtod_l+0x3cc>
 8005e62:	2410      	movs	r4, #16
 8005e64:	980d      	ldr	r0, [sp, #52]	; 0x34
 8005e66:	f7fc f9f9 	bl	800225c <__aeabi_ui2d>
 8005e6a:	9b05      	ldr	r3, [sp, #20]
 8005e6c:	0006      	movs	r6, r0
 8005e6e:	000f      	movs	r7, r1
 8005e70:	2b09      	cmp	r3, #9
 8005e72:	dd15      	ble.n	8005ea0 <_strtod_l+0x408>
 8005e74:	0022      	movs	r2, r4
 8005e76:	4b7f      	ldr	r3, [pc, #508]	; (8006074 <_strtod_l+0x5dc>)
 8005e78:	3a09      	subs	r2, #9
 8005e7a:	00d2      	lsls	r2, r2, #3
 8005e7c:	189b      	adds	r3, r3, r2
 8005e7e:	681a      	ldr	r2, [r3, #0]
 8005e80:	685b      	ldr	r3, [r3, #4]
 8005e82:	f7fb fb23 	bl	80014cc <__aeabi_dmul>
 8005e86:	0006      	movs	r6, r0
 8005e88:	0028      	movs	r0, r5
 8005e8a:	000f      	movs	r7, r1
 8005e8c:	f7fc f9e6 	bl	800225c <__aeabi_ui2d>
 8005e90:	0002      	movs	r2, r0
 8005e92:	000b      	movs	r3, r1
 8005e94:	0030      	movs	r0, r6
 8005e96:	0039      	movs	r1, r7
 8005e98:	f7fa fbbe 	bl	8000618 <__aeabi_dadd>
 8005e9c:	0006      	movs	r6, r0
 8005e9e:	000f      	movs	r7, r1
 8005ea0:	9b05      	ldr	r3, [sp, #20]
 8005ea2:	2b0f      	cmp	r3, #15
 8005ea4:	dc39      	bgt.n	8005f1a <_strtod_l+0x482>
 8005ea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ea8:	2b00      	cmp	r3, #0
 8005eaa:	d100      	bne.n	8005eae <_strtod_l+0x416>
 8005eac:	e62f      	b.n	8005b0e <_strtod_l+0x76>
 8005eae:	dd24      	ble.n	8005efa <_strtod_l+0x462>
 8005eb0:	2b16      	cmp	r3, #22
 8005eb2:	dc09      	bgt.n	8005ec8 <_strtod_l+0x430>
 8005eb4:	496f      	ldr	r1, [pc, #444]	; (8006074 <_strtod_l+0x5dc>)
 8005eb6:	00db      	lsls	r3, r3, #3
 8005eb8:	18c9      	adds	r1, r1, r3
 8005eba:	0032      	movs	r2, r6
 8005ebc:	6808      	ldr	r0, [r1, #0]
 8005ebe:	6849      	ldr	r1, [r1, #4]
 8005ec0:	003b      	movs	r3, r7
 8005ec2:	f7fb fb03 	bl	80014cc <__aeabi_dmul>
 8005ec6:	e7bd      	b.n	8005e44 <_strtod_l+0x3ac>
 8005ec8:	2325      	movs	r3, #37	; 0x25
 8005eca:	9a05      	ldr	r2, [sp, #20]
 8005ecc:	1a9b      	subs	r3, r3, r2
 8005ece:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	db22      	blt.n	8005f1a <_strtod_l+0x482>
 8005ed4:	240f      	movs	r4, #15
 8005ed6:	9b05      	ldr	r3, [sp, #20]
 8005ed8:	4d66      	ldr	r5, [pc, #408]	; (8006074 <_strtod_l+0x5dc>)
 8005eda:	1ae4      	subs	r4, r4, r3
 8005edc:	00e1      	lsls	r1, r4, #3
 8005ede:	1869      	adds	r1, r5, r1
 8005ee0:	0032      	movs	r2, r6
 8005ee2:	6808      	ldr	r0, [r1, #0]
 8005ee4:	6849      	ldr	r1, [r1, #4]
 8005ee6:	003b      	movs	r3, r7
 8005ee8:	f7fb faf0 	bl	80014cc <__aeabi_dmul>
 8005eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005eee:	1b1c      	subs	r4, r3, r4
 8005ef0:	00e4      	lsls	r4, r4, #3
 8005ef2:	192d      	adds	r5, r5, r4
 8005ef4:	682a      	ldr	r2, [r5, #0]
 8005ef6:	686b      	ldr	r3, [r5, #4]
 8005ef8:	e7e3      	b.n	8005ec2 <_strtod_l+0x42a>
 8005efa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005efc:	3316      	adds	r3, #22
 8005efe:	db0c      	blt.n	8005f1a <_strtod_l+0x482>
 8005f00:	9906      	ldr	r1, [sp, #24]
 8005f02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f04:	4b5b      	ldr	r3, [pc, #364]	; (8006074 <_strtod_l+0x5dc>)
 8005f06:	1a52      	subs	r2, r2, r1
 8005f08:	00d2      	lsls	r2, r2, #3
 8005f0a:	189b      	adds	r3, r3, r2
 8005f0c:	0030      	movs	r0, r6
 8005f0e:	681a      	ldr	r2, [r3, #0]
 8005f10:	685b      	ldr	r3, [r3, #4]
 8005f12:	0039      	movs	r1, r7
 8005f14:	f7fa fee0 	bl	8000cd8 <__aeabi_ddiv>
 8005f18:	e794      	b.n	8005e44 <_strtod_l+0x3ac>
 8005f1a:	9b05      	ldr	r3, [sp, #20]
 8005f1c:	1b1c      	subs	r4, r3, r4
 8005f1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005f20:	18e4      	adds	r4, r4, r3
 8005f22:	2c00      	cmp	r4, #0
 8005f24:	dd72      	ble.n	800600c <_strtod_l+0x574>
 8005f26:	220f      	movs	r2, #15
 8005f28:	0023      	movs	r3, r4
 8005f2a:	4013      	ands	r3, r2
 8005f2c:	4214      	tst	r4, r2
 8005f2e:	d00a      	beq.n	8005f46 <_strtod_l+0x4ae>
 8005f30:	4950      	ldr	r1, [pc, #320]	; (8006074 <_strtod_l+0x5dc>)
 8005f32:	00db      	lsls	r3, r3, #3
 8005f34:	18c9      	adds	r1, r1, r3
 8005f36:	0032      	movs	r2, r6
 8005f38:	6808      	ldr	r0, [r1, #0]
 8005f3a:	6849      	ldr	r1, [r1, #4]
 8005f3c:	003b      	movs	r3, r7
 8005f3e:	f7fb fac5 	bl	80014cc <__aeabi_dmul>
 8005f42:	0006      	movs	r6, r0
 8005f44:	000f      	movs	r7, r1
 8005f46:	230f      	movs	r3, #15
 8005f48:	439c      	bics	r4, r3
 8005f4a:	d04a      	beq.n	8005fe2 <_strtod_l+0x54a>
 8005f4c:	3326      	adds	r3, #38	; 0x26
 8005f4e:	33ff      	adds	r3, #255	; 0xff
 8005f50:	429c      	cmp	r4, r3
 8005f52:	dd22      	ble.n	8005f9a <_strtod_l+0x502>
 8005f54:	2300      	movs	r3, #0
 8005f56:	9305      	str	r3, [sp, #20]
 8005f58:	9306      	str	r3, [sp, #24]
 8005f5a:	930d      	str	r3, [sp, #52]	; 0x34
 8005f5c:	9308      	str	r3, [sp, #32]
 8005f5e:	2322      	movs	r3, #34	; 0x22
 8005f60:	2600      	movs	r6, #0
 8005f62:	9a04      	ldr	r2, [sp, #16]
 8005f64:	4f3f      	ldr	r7, [pc, #252]	; (8006064 <_strtod_l+0x5cc>)
 8005f66:	6013      	str	r3, [r2, #0]
 8005f68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f6a:	42b3      	cmp	r3, r6
 8005f6c:	d100      	bne.n	8005f70 <_strtod_l+0x4d8>
 8005f6e:	e5ce      	b.n	8005b0e <_strtod_l+0x76>
 8005f70:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005f72:	9804      	ldr	r0, [sp, #16]
 8005f74:	f002 f9d6 	bl	8008324 <_Bfree>
 8005f78:	9908      	ldr	r1, [sp, #32]
 8005f7a:	9804      	ldr	r0, [sp, #16]
 8005f7c:	f002 f9d2 	bl	8008324 <_Bfree>
 8005f80:	9906      	ldr	r1, [sp, #24]
 8005f82:	9804      	ldr	r0, [sp, #16]
 8005f84:	f002 f9ce 	bl	8008324 <_Bfree>
 8005f88:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005f8a:	9804      	ldr	r0, [sp, #16]
 8005f8c:	f002 f9ca 	bl	8008324 <_Bfree>
 8005f90:	9905      	ldr	r1, [sp, #20]
 8005f92:	9804      	ldr	r0, [sp, #16]
 8005f94:	f002 f9c6 	bl	8008324 <_Bfree>
 8005f98:	e5b9      	b.n	8005b0e <_strtod_l+0x76>
 8005f9a:	2300      	movs	r3, #0
 8005f9c:	0030      	movs	r0, r6
 8005f9e:	0039      	movs	r1, r7
 8005fa0:	4d35      	ldr	r5, [pc, #212]	; (8006078 <_strtod_l+0x5e0>)
 8005fa2:	1124      	asrs	r4, r4, #4
 8005fa4:	9307      	str	r3, [sp, #28]
 8005fa6:	2c01      	cmp	r4, #1
 8005fa8:	dc1e      	bgt.n	8005fe8 <_strtod_l+0x550>
 8005faa:	2b00      	cmp	r3, #0
 8005fac:	d001      	beq.n	8005fb2 <_strtod_l+0x51a>
 8005fae:	0006      	movs	r6, r0
 8005fb0:	000f      	movs	r7, r1
 8005fb2:	4b32      	ldr	r3, [pc, #200]	; (800607c <_strtod_l+0x5e4>)
 8005fb4:	9a07      	ldr	r2, [sp, #28]
 8005fb6:	18ff      	adds	r7, r7, r3
 8005fb8:	4b2f      	ldr	r3, [pc, #188]	; (8006078 <_strtod_l+0x5e0>)
 8005fba:	00d2      	lsls	r2, r2, #3
 8005fbc:	189d      	adds	r5, r3, r2
 8005fbe:	6828      	ldr	r0, [r5, #0]
 8005fc0:	6869      	ldr	r1, [r5, #4]
 8005fc2:	0032      	movs	r2, r6
 8005fc4:	003b      	movs	r3, r7
 8005fc6:	f7fb fa81 	bl	80014cc <__aeabi_dmul>
 8005fca:	4b26      	ldr	r3, [pc, #152]	; (8006064 <_strtod_l+0x5cc>)
 8005fcc:	4a2c      	ldr	r2, [pc, #176]	; (8006080 <_strtod_l+0x5e8>)
 8005fce:	0006      	movs	r6, r0
 8005fd0:	400b      	ands	r3, r1
 8005fd2:	4293      	cmp	r3, r2
 8005fd4:	d8be      	bhi.n	8005f54 <_strtod_l+0x4bc>
 8005fd6:	4a2b      	ldr	r2, [pc, #172]	; (8006084 <_strtod_l+0x5ec>)
 8005fd8:	4293      	cmp	r3, r2
 8005fda:	d913      	bls.n	8006004 <_strtod_l+0x56c>
 8005fdc:	2601      	movs	r6, #1
 8005fde:	4f2a      	ldr	r7, [pc, #168]	; (8006088 <_strtod_l+0x5f0>)
 8005fe0:	4276      	negs	r6, r6
 8005fe2:	2300      	movs	r3, #0
 8005fe4:	9307      	str	r3, [sp, #28]
 8005fe6:	e088      	b.n	80060fa <_strtod_l+0x662>
 8005fe8:	2201      	movs	r2, #1
 8005fea:	4214      	tst	r4, r2
 8005fec:	d004      	beq.n	8005ff8 <_strtod_l+0x560>
 8005fee:	682a      	ldr	r2, [r5, #0]
 8005ff0:	686b      	ldr	r3, [r5, #4]
 8005ff2:	f7fb fa6b 	bl	80014cc <__aeabi_dmul>
 8005ff6:	2301      	movs	r3, #1
 8005ff8:	9a07      	ldr	r2, [sp, #28]
 8005ffa:	1064      	asrs	r4, r4, #1
 8005ffc:	3201      	adds	r2, #1
 8005ffe:	9207      	str	r2, [sp, #28]
 8006000:	3508      	adds	r5, #8
 8006002:	e7d0      	b.n	8005fa6 <_strtod_l+0x50e>
 8006004:	23d4      	movs	r3, #212	; 0xd4
 8006006:	049b      	lsls	r3, r3, #18
 8006008:	18cf      	adds	r7, r1, r3
 800600a:	e7ea      	b.n	8005fe2 <_strtod_l+0x54a>
 800600c:	2c00      	cmp	r4, #0
 800600e:	d0e8      	beq.n	8005fe2 <_strtod_l+0x54a>
 8006010:	4264      	negs	r4, r4
 8006012:	230f      	movs	r3, #15
 8006014:	0022      	movs	r2, r4
 8006016:	401a      	ands	r2, r3
 8006018:	421c      	tst	r4, r3
 800601a:	d00a      	beq.n	8006032 <_strtod_l+0x59a>
 800601c:	4b15      	ldr	r3, [pc, #84]	; (8006074 <_strtod_l+0x5dc>)
 800601e:	00d2      	lsls	r2, r2, #3
 8006020:	189b      	adds	r3, r3, r2
 8006022:	0030      	movs	r0, r6
 8006024:	681a      	ldr	r2, [r3, #0]
 8006026:	685b      	ldr	r3, [r3, #4]
 8006028:	0039      	movs	r1, r7
 800602a:	f7fa fe55 	bl	8000cd8 <__aeabi_ddiv>
 800602e:	0006      	movs	r6, r0
 8006030:	000f      	movs	r7, r1
 8006032:	1124      	asrs	r4, r4, #4
 8006034:	d0d5      	beq.n	8005fe2 <_strtod_l+0x54a>
 8006036:	2c1f      	cmp	r4, #31
 8006038:	dd28      	ble.n	800608c <_strtod_l+0x5f4>
 800603a:	2300      	movs	r3, #0
 800603c:	9305      	str	r3, [sp, #20]
 800603e:	9306      	str	r3, [sp, #24]
 8006040:	930d      	str	r3, [sp, #52]	; 0x34
 8006042:	9308      	str	r3, [sp, #32]
 8006044:	2322      	movs	r3, #34	; 0x22
 8006046:	9a04      	ldr	r2, [sp, #16]
 8006048:	2600      	movs	r6, #0
 800604a:	6013      	str	r3, [r2, #0]
 800604c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800604e:	2700      	movs	r7, #0
 8006050:	2b00      	cmp	r3, #0
 8006052:	d18d      	bne.n	8005f70 <_strtod_l+0x4d8>
 8006054:	e55b      	b.n	8005b0e <_strtod_l+0x76>
 8006056:	46c0      	nop			; (mov r8, r8)
 8006058:	00004e1f 	.word	0x00004e1f
 800605c:	08009599 	.word	0x08009599
 8006060:	080095dc 	.word	0x080095dc
 8006064:	7ff00000 	.word	0x7ff00000
 8006068:	08009591 	.word	0x08009591
 800606c:	08009724 	.word	0x08009724
 8006070:	080099af 	.word	0x080099af
 8006074:	080098a0 	.word	0x080098a0
 8006078:	08009878 	.word	0x08009878
 800607c:	fcb00000 	.word	0xfcb00000
 8006080:	7ca00000 	.word	0x7ca00000
 8006084:	7c900000 	.word	0x7c900000
 8006088:	7fefffff 	.word	0x7fefffff
 800608c:	2310      	movs	r3, #16
 800608e:	0022      	movs	r2, r4
 8006090:	401a      	ands	r2, r3
 8006092:	9207      	str	r2, [sp, #28]
 8006094:	421c      	tst	r4, r3
 8006096:	d001      	beq.n	800609c <_strtod_l+0x604>
 8006098:	335a      	adds	r3, #90	; 0x5a
 800609a:	9307      	str	r3, [sp, #28]
 800609c:	0030      	movs	r0, r6
 800609e:	0039      	movs	r1, r7
 80060a0:	2300      	movs	r3, #0
 80060a2:	4dc4      	ldr	r5, [pc, #784]	; (80063b4 <_strtod_l+0x91c>)
 80060a4:	2201      	movs	r2, #1
 80060a6:	4214      	tst	r4, r2
 80060a8:	d004      	beq.n	80060b4 <_strtod_l+0x61c>
 80060aa:	682a      	ldr	r2, [r5, #0]
 80060ac:	686b      	ldr	r3, [r5, #4]
 80060ae:	f7fb fa0d 	bl	80014cc <__aeabi_dmul>
 80060b2:	2301      	movs	r3, #1
 80060b4:	1064      	asrs	r4, r4, #1
 80060b6:	3508      	adds	r5, #8
 80060b8:	2c00      	cmp	r4, #0
 80060ba:	d1f3      	bne.n	80060a4 <_strtod_l+0x60c>
 80060bc:	2b00      	cmp	r3, #0
 80060be:	d001      	beq.n	80060c4 <_strtod_l+0x62c>
 80060c0:	0006      	movs	r6, r0
 80060c2:	000f      	movs	r7, r1
 80060c4:	9b07      	ldr	r3, [sp, #28]
 80060c6:	2b00      	cmp	r3, #0
 80060c8:	d00f      	beq.n	80060ea <_strtod_l+0x652>
 80060ca:	236b      	movs	r3, #107	; 0x6b
 80060cc:	007a      	lsls	r2, r7, #1
 80060ce:	0d52      	lsrs	r2, r2, #21
 80060d0:	0039      	movs	r1, r7
 80060d2:	1a9b      	subs	r3, r3, r2
 80060d4:	2b00      	cmp	r3, #0
 80060d6:	dd08      	ble.n	80060ea <_strtod_l+0x652>
 80060d8:	2b1f      	cmp	r3, #31
 80060da:	dc00      	bgt.n	80060de <_strtod_l+0x646>
 80060dc:	e121      	b.n	8006322 <_strtod_l+0x88a>
 80060de:	2600      	movs	r6, #0
 80060e0:	2b34      	cmp	r3, #52	; 0x34
 80060e2:	dc00      	bgt.n	80060e6 <_strtod_l+0x64e>
 80060e4:	e116      	b.n	8006314 <_strtod_l+0x87c>
 80060e6:	27dc      	movs	r7, #220	; 0xdc
 80060e8:	04bf      	lsls	r7, r7, #18
 80060ea:	2200      	movs	r2, #0
 80060ec:	2300      	movs	r3, #0
 80060ee:	0030      	movs	r0, r6
 80060f0:	0039      	movs	r1, r7
 80060f2:	f7fa f9ab 	bl	800044c <__aeabi_dcmpeq>
 80060f6:	2800      	cmp	r0, #0
 80060f8:	d19f      	bne.n	800603a <_strtod_l+0x5a2>
 80060fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80060fc:	9a08      	ldr	r2, [sp, #32]
 80060fe:	9300      	str	r3, [sp, #0]
 8006100:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006102:	9b05      	ldr	r3, [sp, #20]
 8006104:	9804      	ldr	r0, [sp, #16]
 8006106:	f002 f975 	bl	80083f4 <__s2b>
 800610a:	900d      	str	r0, [sp, #52]	; 0x34
 800610c:	2800      	cmp	r0, #0
 800610e:	d100      	bne.n	8006112 <_strtod_l+0x67a>
 8006110:	e720      	b.n	8005f54 <_strtod_l+0x4bc>
 8006112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006114:	9906      	ldr	r1, [sp, #24]
 8006116:	17da      	asrs	r2, r3, #31
 8006118:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800611a:	1a5b      	subs	r3, r3, r1
 800611c:	401a      	ands	r2, r3
 800611e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006120:	9215      	str	r2, [sp, #84]	; 0x54
 8006122:	43db      	mvns	r3, r3
 8006124:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006126:	17db      	asrs	r3, r3, #31
 8006128:	401a      	ands	r2, r3
 800612a:	2300      	movs	r3, #0
 800612c:	9218      	str	r2, [sp, #96]	; 0x60
 800612e:	9305      	str	r3, [sp, #20]
 8006130:	9306      	str	r3, [sp, #24]
 8006132:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006134:	9804      	ldr	r0, [sp, #16]
 8006136:	6859      	ldr	r1, [r3, #4]
 8006138:	f002 f8b0 	bl	800829c <_Balloc>
 800613c:	9008      	str	r0, [sp, #32]
 800613e:	2800      	cmp	r0, #0
 8006140:	d100      	bne.n	8006144 <_strtod_l+0x6ac>
 8006142:	e70c      	b.n	8005f5e <_strtod_l+0x4c6>
 8006144:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006146:	300c      	adds	r0, #12
 8006148:	0019      	movs	r1, r3
 800614a:	691a      	ldr	r2, [r3, #16]
 800614c:	310c      	adds	r1, #12
 800614e:	3202      	adds	r2, #2
 8006150:	0092      	lsls	r2, r2, #2
 8006152:	f000 fbae 	bl	80068b2 <memcpy>
 8006156:	ab1e      	add	r3, sp, #120	; 0x78
 8006158:	9301      	str	r3, [sp, #4]
 800615a:	ab1d      	add	r3, sp, #116	; 0x74
 800615c:	9300      	str	r3, [sp, #0]
 800615e:	0032      	movs	r2, r6
 8006160:	003b      	movs	r3, r7
 8006162:	9804      	ldr	r0, [sp, #16]
 8006164:	9610      	str	r6, [sp, #64]	; 0x40
 8006166:	9711      	str	r7, [sp, #68]	; 0x44
 8006168:	f002 fc86 	bl	8008a78 <__d2b>
 800616c:	901c      	str	r0, [sp, #112]	; 0x70
 800616e:	2800      	cmp	r0, #0
 8006170:	d100      	bne.n	8006174 <_strtod_l+0x6dc>
 8006172:	e6f4      	b.n	8005f5e <_strtod_l+0x4c6>
 8006174:	2101      	movs	r1, #1
 8006176:	9804      	ldr	r0, [sp, #16]
 8006178:	f002 f9d0 	bl	800851c <__i2b>
 800617c:	9006      	str	r0, [sp, #24]
 800617e:	2800      	cmp	r0, #0
 8006180:	d100      	bne.n	8006184 <_strtod_l+0x6ec>
 8006182:	e6ec      	b.n	8005f5e <_strtod_l+0x4c6>
 8006184:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8006186:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006188:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800618a:	1ad4      	subs	r4, r2, r3
 800618c:	2b00      	cmp	r3, #0
 800618e:	db01      	blt.n	8006194 <_strtod_l+0x6fc>
 8006190:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8006192:	195d      	adds	r5, r3, r5
 8006194:	9907      	ldr	r1, [sp, #28]
 8006196:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8006198:	1a5b      	subs	r3, r3, r1
 800619a:	2136      	movs	r1, #54	; 0x36
 800619c:	189b      	adds	r3, r3, r2
 800619e:	1a8a      	subs	r2, r1, r2
 80061a0:	4985      	ldr	r1, [pc, #532]	; (80063b8 <_strtod_l+0x920>)
 80061a2:	2001      	movs	r0, #1
 80061a4:	468c      	mov	ip, r1
 80061a6:	2100      	movs	r1, #0
 80061a8:	3b01      	subs	r3, #1
 80061aa:	9114      	str	r1, [sp, #80]	; 0x50
 80061ac:	9012      	str	r0, [sp, #72]	; 0x48
 80061ae:	4563      	cmp	r3, ip
 80061b0:	da07      	bge.n	80061c2 <_strtod_l+0x72a>
 80061b2:	4661      	mov	r1, ip
 80061b4:	1ac9      	subs	r1, r1, r3
 80061b6:	1a52      	subs	r2, r2, r1
 80061b8:	291f      	cmp	r1, #31
 80061ba:	dd00      	ble.n	80061be <_strtod_l+0x726>
 80061bc:	e0b6      	b.n	800632c <_strtod_l+0x894>
 80061be:	4088      	lsls	r0, r1
 80061c0:	9012      	str	r0, [sp, #72]	; 0x48
 80061c2:	18ab      	adds	r3, r5, r2
 80061c4:	930c      	str	r3, [sp, #48]	; 0x30
 80061c6:	18a4      	adds	r4, r4, r2
 80061c8:	9b07      	ldr	r3, [sp, #28]
 80061ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80061cc:	191c      	adds	r4, r3, r4
 80061ce:	002b      	movs	r3, r5
 80061d0:	4295      	cmp	r5, r2
 80061d2:	dd00      	ble.n	80061d6 <_strtod_l+0x73e>
 80061d4:	0013      	movs	r3, r2
 80061d6:	42a3      	cmp	r3, r4
 80061d8:	dd00      	ble.n	80061dc <_strtod_l+0x744>
 80061da:	0023      	movs	r3, r4
 80061dc:	2b00      	cmp	r3, #0
 80061de:	dd04      	ble.n	80061ea <_strtod_l+0x752>
 80061e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80061e2:	1ae4      	subs	r4, r4, r3
 80061e4:	1ad2      	subs	r2, r2, r3
 80061e6:	920c      	str	r2, [sp, #48]	; 0x30
 80061e8:	1aed      	subs	r5, r5, r3
 80061ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	dd17      	ble.n	8006220 <_strtod_l+0x788>
 80061f0:	001a      	movs	r2, r3
 80061f2:	9906      	ldr	r1, [sp, #24]
 80061f4:	9804      	ldr	r0, [sp, #16]
 80061f6:	f002 fa59 	bl	80086ac <__pow5mult>
 80061fa:	9006      	str	r0, [sp, #24]
 80061fc:	2800      	cmp	r0, #0
 80061fe:	d100      	bne.n	8006202 <_strtod_l+0x76a>
 8006200:	e6ad      	b.n	8005f5e <_strtod_l+0x4c6>
 8006202:	0001      	movs	r1, r0
 8006204:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006206:	9804      	ldr	r0, [sp, #16]
 8006208:	f002 f9a0 	bl	800854c <__multiply>
 800620c:	900e      	str	r0, [sp, #56]	; 0x38
 800620e:	2800      	cmp	r0, #0
 8006210:	d100      	bne.n	8006214 <_strtod_l+0x77c>
 8006212:	e6a4      	b.n	8005f5e <_strtod_l+0x4c6>
 8006214:	991c      	ldr	r1, [sp, #112]	; 0x70
 8006216:	9804      	ldr	r0, [sp, #16]
 8006218:	f002 f884 	bl	8008324 <_Bfree>
 800621c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800621e:	931c      	str	r3, [sp, #112]	; 0x70
 8006220:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006222:	2b00      	cmp	r3, #0
 8006224:	dd00      	ble.n	8006228 <_strtod_l+0x790>
 8006226:	e087      	b.n	8006338 <_strtod_l+0x8a0>
 8006228:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800622a:	2b00      	cmp	r3, #0
 800622c:	dd08      	ble.n	8006240 <_strtod_l+0x7a8>
 800622e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006230:	9908      	ldr	r1, [sp, #32]
 8006232:	9804      	ldr	r0, [sp, #16]
 8006234:	f002 fa3a 	bl	80086ac <__pow5mult>
 8006238:	9008      	str	r0, [sp, #32]
 800623a:	2800      	cmp	r0, #0
 800623c:	d100      	bne.n	8006240 <_strtod_l+0x7a8>
 800623e:	e68e      	b.n	8005f5e <_strtod_l+0x4c6>
 8006240:	2c00      	cmp	r4, #0
 8006242:	dd08      	ble.n	8006256 <_strtod_l+0x7be>
 8006244:	0022      	movs	r2, r4
 8006246:	9908      	ldr	r1, [sp, #32]
 8006248:	9804      	ldr	r0, [sp, #16]
 800624a:	f002 fa8b 	bl	8008764 <__lshift>
 800624e:	9008      	str	r0, [sp, #32]
 8006250:	2800      	cmp	r0, #0
 8006252:	d100      	bne.n	8006256 <_strtod_l+0x7be>
 8006254:	e683      	b.n	8005f5e <_strtod_l+0x4c6>
 8006256:	2d00      	cmp	r5, #0
 8006258:	dd08      	ble.n	800626c <_strtod_l+0x7d4>
 800625a:	002a      	movs	r2, r5
 800625c:	9906      	ldr	r1, [sp, #24]
 800625e:	9804      	ldr	r0, [sp, #16]
 8006260:	f002 fa80 	bl	8008764 <__lshift>
 8006264:	9006      	str	r0, [sp, #24]
 8006266:	2800      	cmp	r0, #0
 8006268:	d100      	bne.n	800626c <_strtod_l+0x7d4>
 800626a:	e678      	b.n	8005f5e <_strtod_l+0x4c6>
 800626c:	9a08      	ldr	r2, [sp, #32]
 800626e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8006270:	9804      	ldr	r0, [sp, #16]
 8006272:	f002 fb01 	bl	8008878 <__mdiff>
 8006276:	9005      	str	r0, [sp, #20]
 8006278:	2800      	cmp	r0, #0
 800627a:	d100      	bne.n	800627e <_strtod_l+0x7e6>
 800627c:	e66f      	b.n	8005f5e <_strtod_l+0x4c6>
 800627e:	2200      	movs	r2, #0
 8006280:	68c3      	ldr	r3, [r0, #12]
 8006282:	9906      	ldr	r1, [sp, #24]
 8006284:	60c2      	str	r2, [r0, #12]
 8006286:	930c      	str	r3, [sp, #48]	; 0x30
 8006288:	f002 fada 	bl	8008840 <__mcmp>
 800628c:	2800      	cmp	r0, #0
 800628e:	da5d      	bge.n	800634c <_strtod_l+0x8b4>
 8006290:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006292:	4333      	orrs	r3, r6
 8006294:	d000      	beq.n	8006298 <_strtod_l+0x800>
 8006296:	e088      	b.n	80063aa <_strtod_l+0x912>
 8006298:	033b      	lsls	r3, r7, #12
 800629a:	d000      	beq.n	800629e <_strtod_l+0x806>
 800629c:	e085      	b.n	80063aa <_strtod_l+0x912>
 800629e:	22d6      	movs	r2, #214	; 0xd6
 80062a0:	4b46      	ldr	r3, [pc, #280]	; (80063bc <_strtod_l+0x924>)
 80062a2:	04d2      	lsls	r2, r2, #19
 80062a4:	403b      	ands	r3, r7
 80062a6:	4293      	cmp	r3, r2
 80062a8:	d97f      	bls.n	80063aa <_strtod_l+0x912>
 80062aa:	9b05      	ldr	r3, [sp, #20]
 80062ac:	695b      	ldr	r3, [r3, #20]
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d103      	bne.n	80062ba <_strtod_l+0x822>
 80062b2:	9b05      	ldr	r3, [sp, #20]
 80062b4:	691b      	ldr	r3, [r3, #16]
 80062b6:	2b01      	cmp	r3, #1
 80062b8:	dd77      	ble.n	80063aa <_strtod_l+0x912>
 80062ba:	9905      	ldr	r1, [sp, #20]
 80062bc:	2201      	movs	r2, #1
 80062be:	9804      	ldr	r0, [sp, #16]
 80062c0:	f002 fa50 	bl	8008764 <__lshift>
 80062c4:	9906      	ldr	r1, [sp, #24]
 80062c6:	9005      	str	r0, [sp, #20]
 80062c8:	f002 faba 	bl	8008840 <__mcmp>
 80062cc:	2800      	cmp	r0, #0
 80062ce:	dd6c      	ble.n	80063aa <_strtod_l+0x912>
 80062d0:	9907      	ldr	r1, [sp, #28]
 80062d2:	003b      	movs	r3, r7
 80062d4:	4a39      	ldr	r2, [pc, #228]	; (80063bc <_strtod_l+0x924>)
 80062d6:	2900      	cmp	r1, #0
 80062d8:	d100      	bne.n	80062dc <_strtod_l+0x844>
 80062da:	e094      	b.n	8006406 <_strtod_l+0x96e>
 80062dc:	0011      	movs	r1, r2
 80062de:	20d6      	movs	r0, #214	; 0xd6
 80062e0:	4039      	ands	r1, r7
 80062e2:	04c0      	lsls	r0, r0, #19
 80062e4:	4281      	cmp	r1, r0
 80062e6:	dd00      	ble.n	80062ea <_strtod_l+0x852>
 80062e8:	e08d      	b.n	8006406 <_strtod_l+0x96e>
 80062ea:	23dc      	movs	r3, #220	; 0xdc
 80062ec:	049b      	lsls	r3, r3, #18
 80062ee:	4299      	cmp	r1, r3
 80062f0:	dc00      	bgt.n	80062f4 <_strtod_l+0x85c>
 80062f2:	e6a7      	b.n	8006044 <_strtod_l+0x5ac>
 80062f4:	0030      	movs	r0, r6
 80062f6:	0039      	movs	r1, r7
 80062f8:	4b31      	ldr	r3, [pc, #196]	; (80063c0 <_strtod_l+0x928>)
 80062fa:	2200      	movs	r2, #0
 80062fc:	f7fb f8e6 	bl	80014cc <__aeabi_dmul>
 8006300:	4b2e      	ldr	r3, [pc, #184]	; (80063bc <_strtod_l+0x924>)
 8006302:	0006      	movs	r6, r0
 8006304:	000f      	movs	r7, r1
 8006306:	420b      	tst	r3, r1
 8006308:	d000      	beq.n	800630c <_strtod_l+0x874>
 800630a:	e631      	b.n	8005f70 <_strtod_l+0x4d8>
 800630c:	2322      	movs	r3, #34	; 0x22
 800630e:	9a04      	ldr	r2, [sp, #16]
 8006310:	6013      	str	r3, [r2, #0]
 8006312:	e62d      	b.n	8005f70 <_strtod_l+0x4d8>
 8006314:	234b      	movs	r3, #75	; 0x4b
 8006316:	1a9a      	subs	r2, r3, r2
 8006318:	3b4c      	subs	r3, #76	; 0x4c
 800631a:	4093      	lsls	r3, r2
 800631c:	4019      	ands	r1, r3
 800631e:	000f      	movs	r7, r1
 8006320:	e6e3      	b.n	80060ea <_strtod_l+0x652>
 8006322:	2201      	movs	r2, #1
 8006324:	4252      	negs	r2, r2
 8006326:	409a      	lsls	r2, r3
 8006328:	4016      	ands	r6, r2
 800632a:	e6de      	b.n	80060ea <_strtod_l+0x652>
 800632c:	4925      	ldr	r1, [pc, #148]	; (80063c4 <_strtod_l+0x92c>)
 800632e:	1acb      	subs	r3, r1, r3
 8006330:	0001      	movs	r1, r0
 8006332:	4099      	lsls	r1, r3
 8006334:	9114      	str	r1, [sp, #80]	; 0x50
 8006336:	e743      	b.n	80061c0 <_strtod_l+0x728>
 8006338:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800633a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800633c:	9804      	ldr	r0, [sp, #16]
 800633e:	f002 fa11 	bl	8008764 <__lshift>
 8006342:	901c      	str	r0, [sp, #112]	; 0x70
 8006344:	2800      	cmp	r0, #0
 8006346:	d000      	beq.n	800634a <_strtod_l+0x8b2>
 8006348:	e76e      	b.n	8006228 <_strtod_l+0x790>
 800634a:	e608      	b.n	8005f5e <_strtod_l+0x4c6>
 800634c:	970e      	str	r7, [sp, #56]	; 0x38
 800634e:	2800      	cmp	r0, #0
 8006350:	d177      	bne.n	8006442 <_strtod_l+0x9aa>
 8006352:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006354:	033b      	lsls	r3, r7, #12
 8006356:	0b1b      	lsrs	r3, r3, #12
 8006358:	2a00      	cmp	r2, #0
 800635a:	d039      	beq.n	80063d0 <_strtod_l+0x938>
 800635c:	4a1a      	ldr	r2, [pc, #104]	; (80063c8 <_strtod_l+0x930>)
 800635e:	4293      	cmp	r3, r2
 8006360:	d139      	bne.n	80063d6 <_strtod_l+0x93e>
 8006362:	2101      	movs	r1, #1
 8006364:	9b07      	ldr	r3, [sp, #28]
 8006366:	4249      	negs	r1, r1
 8006368:	0032      	movs	r2, r6
 800636a:	0008      	movs	r0, r1
 800636c:	2b00      	cmp	r3, #0
 800636e:	d00b      	beq.n	8006388 <_strtod_l+0x8f0>
 8006370:	24d4      	movs	r4, #212	; 0xd4
 8006372:	4b12      	ldr	r3, [pc, #72]	; (80063bc <_strtod_l+0x924>)
 8006374:	0008      	movs	r0, r1
 8006376:	403b      	ands	r3, r7
 8006378:	04e4      	lsls	r4, r4, #19
 800637a:	42a3      	cmp	r3, r4
 800637c:	d804      	bhi.n	8006388 <_strtod_l+0x8f0>
 800637e:	306c      	adds	r0, #108	; 0x6c
 8006380:	0d1b      	lsrs	r3, r3, #20
 8006382:	1ac3      	subs	r3, r0, r3
 8006384:	4099      	lsls	r1, r3
 8006386:	0008      	movs	r0, r1
 8006388:	4282      	cmp	r2, r0
 800638a:	d124      	bne.n	80063d6 <_strtod_l+0x93e>
 800638c:	4b0f      	ldr	r3, [pc, #60]	; (80063cc <_strtod_l+0x934>)
 800638e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006390:	4299      	cmp	r1, r3
 8006392:	d102      	bne.n	800639a <_strtod_l+0x902>
 8006394:	3201      	adds	r2, #1
 8006396:	d100      	bne.n	800639a <_strtod_l+0x902>
 8006398:	e5e1      	b.n	8005f5e <_strtod_l+0x4c6>
 800639a:	4b08      	ldr	r3, [pc, #32]	; (80063bc <_strtod_l+0x924>)
 800639c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800639e:	2600      	movs	r6, #0
 80063a0:	401a      	ands	r2, r3
 80063a2:	0013      	movs	r3, r2
 80063a4:	2280      	movs	r2, #128	; 0x80
 80063a6:	0352      	lsls	r2, r2, #13
 80063a8:	189f      	adds	r7, r3, r2
 80063aa:	9b07      	ldr	r3, [sp, #28]
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d1a1      	bne.n	80062f4 <_strtod_l+0x85c>
 80063b0:	e5de      	b.n	8005f70 <_strtod_l+0x4d8>
 80063b2:	46c0      	nop			; (mov r8, r8)
 80063b4:	080095f0 	.word	0x080095f0
 80063b8:	fffffc02 	.word	0xfffffc02
 80063bc:	7ff00000 	.word	0x7ff00000
 80063c0:	39500000 	.word	0x39500000
 80063c4:	fffffbe2 	.word	0xfffffbe2
 80063c8:	000fffff 	.word	0x000fffff
 80063cc:	7fefffff 	.word	0x7fefffff
 80063d0:	4333      	orrs	r3, r6
 80063d2:	d100      	bne.n	80063d6 <_strtod_l+0x93e>
 80063d4:	e77c      	b.n	80062d0 <_strtod_l+0x838>
 80063d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80063d8:	2b00      	cmp	r3, #0
 80063da:	d01d      	beq.n	8006418 <_strtod_l+0x980>
 80063dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80063de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80063e0:	4213      	tst	r3, r2
 80063e2:	d0e2      	beq.n	80063aa <_strtod_l+0x912>
 80063e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80063e6:	0030      	movs	r0, r6
 80063e8:	0039      	movs	r1, r7
 80063ea:	9a07      	ldr	r2, [sp, #28]
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d017      	beq.n	8006420 <_strtod_l+0x988>
 80063f0:	f7ff fb3a 	bl	8005a68 <sulp>
 80063f4:	0002      	movs	r2, r0
 80063f6:	000b      	movs	r3, r1
 80063f8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80063fa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80063fc:	f7fa f90c 	bl	8000618 <__aeabi_dadd>
 8006400:	0006      	movs	r6, r0
 8006402:	000f      	movs	r7, r1
 8006404:	e7d1      	b.n	80063aa <_strtod_l+0x912>
 8006406:	2601      	movs	r6, #1
 8006408:	4013      	ands	r3, r2
 800640a:	4a98      	ldr	r2, [pc, #608]	; (800666c <_strtod_l+0xbd4>)
 800640c:	4276      	negs	r6, r6
 800640e:	189b      	adds	r3, r3, r2
 8006410:	4a97      	ldr	r2, [pc, #604]	; (8006670 <_strtod_l+0xbd8>)
 8006412:	431a      	orrs	r2, r3
 8006414:	0017      	movs	r7, r2
 8006416:	e7c8      	b.n	80063aa <_strtod_l+0x912>
 8006418:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800641a:	4233      	tst	r3, r6
 800641c:	d0c5      	beq.n	80063aa <_strtod_l+0x912>
 800641e:	e7e1      	b.n	80063e4 <_strtod_l+0x94c>
 8006420:	f7ff fb22 	bl	8005a68 <sulp>
 8006424:	0002      	movs	r2, r0
 8006426:	000b      	movs	r3, r1
 8006428:	9810      	ldr	r0, [sp, #64]	; 0x40
 800642a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800642c:	f7fb fb10 	bl	8001a50 <__aeabi_dsub>
 8006430:	2200      	movs	r2, #0
 8006432:	2300      	movs	r3, #0
 8006434:	0006      	movs	r6, r0
 8006436:	000f      	movs	r7, r1
 8006438:	f7fa f808 	bl	800044c <__aeabi_dcmpeq>
 800643c:	2800      	cmp	r0, #0
 800643e:	d0b4      	beq.n	80063aa <_strtod_l+0x912>
 8006440:	e600      	b.n	8006044 <_strtod_l+0x5ac>
 8006442:	9906      	ldr	r1, [sp, #24]
 8006444:	9805      	ldr	r0, [sp, #20]
 8006446:	f002 fb77 	bl	8008b38 <__ratio>
 800644a:	2380      	movs	r3, #128	; 0x80
 800644c:	2200      	movs	r2, #0
 800644e:	05db      	lsls	r3, r3, #23
 8006450:	0004      	movs	r4, r0
 8006452:	000d      	movs	r5, r1
 8006454:	f7fa f80a 	bl	800046c <__aeabi_dcmple>
 8006458:	2800      	cmp	r0, #0
 800645a:	d06d      	beq.n	8006538 <_strtod_l+0xaa0>
 800645c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800645e:	2b00      	cmp	r3, #0
 8006460:	d000      	beq.n	8006464 <_strtod_l+0x9cc>
 8006462:	e07e      	b.n	8006562 <_strtod_l+0xaca>
 8006464:	2e00      	cmp	r6, #0
 8006466:	d158      	bne.n	800651a <_strtod_l+0xa82>
 8006468:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800646a:	031b      	lsls	r3, r3, #12
 800646c:	d000      	beq.n	8006470 <_strtod_l+0x9d8>
 800646e:	e07f      	b.n	8006570 <_strtod_l+0xad8>
 8006470:	2200      	movs	r2, #0
 8006472:	0020      	movs	r0, r4
 8006474:	0029      	movs	r1, r5
 8006476:	4b7f      	ldr	r3, [pc, #508]	; (8006674 <_strtod_l+0xbdc>)
 8006478:	f7f9 ffee 	bl	8000458 <__aeabi_dcmplt>
 800647c:	2800      	cmp	r0, #0
 800647e:	d158      	bne.n	8006532 <_strtod_l+0xa9a>
 8006480:	0020      	movs	r0, r4
 8006482:	0029      	movs	r1, r5
 8006484:	2200      	movs	r2, #0
 8006486:	4b7c      	ldr	r3, [pc, #496]	; (8006678 <_strtod_l+0xbe0>)
 8006488:	f7fb f820 	bl	80014cc <__aeabi_dmul>
 800648c:	0004      	movs	r4, r0
 800648e:	000d      	movs	r5, r1
 8006490:	2380      	movs	r3, #128	; 0x80
 8006492:	061b      	lsls	r3, r3, #24
 8006494:	940a      	str	r4, [sp, #40]	; 0x28
 8006496:	18eb      	adds	r3, r5, r3
 8006498:	930b      	str	r3, [sp, #44]	; 0x2c
 800649a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800649c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800649e:	9212      	str	r2, [sp, #72]	; 0x48
 80064a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80064a2:	4a76      	ldr	r2, [pc, #472]	; (800667c <_strtod_l+0xbe4>)
 80064a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064a6:	4013      	ands	r3, r2
 80064a8:	9314      	str	r3, [sp, #80]	; 0x50
 80064aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80064ac:	4b74      	ldr	r3, [pc, #464]	; (8006680 <_strtod_l+0xbe8>)
 80064ae:	429a      	cmp	r2, r3
 80064b0:	d000      	beq.n	80064b4 <_strtod_l+0xa1c>
 80064b2:	e091      	b.n	80065d8 <_strtod_l+0xb40>
 80064b4:	4a73      	ldr	r2, [pc, #460]	; (8006684 <_strtod_l+0xbec>)
 80064b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064b8:	4694      	mov	ip, r2
 80064ba:	4463      	add	r3, ip
 80064bc:	001f      	movs	r7, r3
 80064be:	0030      	movs	r0, r6
 80064c0:	0019      	movs	r1, r3
 80064c2:	f002 fa71 	bl	80089a8 <__ulp>
 80064c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80064c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80064ca:	f7fa ffff 	bl	80014cc <__aeabi_dmul>
 80064ce:	0032      	movs	r2, r6
 80064d0:	003b      	movs	r3, r7
 80064d2:	f7fa f8a1 	bl	8000618 <__aeabi_dadd>
 80064d6:	4a69      	ldr	r2, [pc, #420]	; (800667c <_strtod_l+0xbe4>)
 80064d8:	4b6b      	ldr	r3, [pc, #428]	; (8006688 <_strtod_l+0xbf0>)
 80064da:	0006      	movs	r6, r0
 80064dc:	400a      	ands	r2, r1
 80064de:	429a      	cmp	r2, r3
 80064e0:	d949      	bls.n	8006576 <_strtod_l+0xade>
 80064e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80064e4:	4b69      	ldr	r3, [pc, #420]	; (800668c <_strtod_l+0xbf4>)
 80064e6:	429a      	cmp	r2, r3
 80064e8:	d103      	bne.n	80064f2 <_strtod_l+0xa5a>
 80064ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80064ec:	3301      	adds	r3, #1
 80064ee:	d100      	bne.n	80064f2 <_strtod_l+0xa5a>
 80064f0:	e535      	b.n	8005f5e <_strtod_l+0x4c6>
 80064f2:	2601      	movs	r6, #1
 80064f4:	4f65      	ldr	r7, [pc, #404]	; (800668c <_strtod_l+0xbf4>)
 80064f6:	4276      	negs	r6, r6
 80064f8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80064fa:	9804      	ldr	r0, [sp, #16]
 80064fc:	f001 ff12 	bl	8008324 <_Bfree>
 8006500:	9908      	ldr	r1, [sp, #32]
 8006502:	9804      	ldr	r0, [sp, #16]
 8006504:	f001 ff0e 	bl	8008324 <_Bfree>
 8006508:	9906      	ldr	r1, [sp, #24]
 800650a:	9804      	ldr	r0, [sp, #16]
 800650c:	f001 ff0a 	bl	8008324 <_Bfree>
 8006510:	9905      	ldr	r1, [sp, #20]
 8006512:	9804      	ldr	r0, [sp, #16]
 8006514:	f001 ff06 	bl	8008324 <_Bfree>
 8006518:	e60b      	b.n	8006132 <_strtod_l+0x69a>
 800651a:	2e01      	cmp	r6, #1
 800651c:	d103      	bne.n	8006526 <_strtod_l+0xa8e>
 800651e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006520:	2b00      	cmp	r3, #0
 8006522:	d100      	bne.n	8006526 <_strtod_l+0xa8e>
 8006524:	e58e      	b.n	8006044 <_strtod_l+0x5ac>
 8006526:	2300      	movs	r3, #0
 8006528:	4c59      	ldr	r4, [pc, #356]	; (8006690 <_strtod_l+0xbf8>)
 800652a:	930a      	str	r3, [sp, #40]	; 0x28
 800652c:	940b      	str	r4, [sp, #44]	; 0x2c
 800652e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8006530:	e01c      	b.n	800656c <_strtod_l+0xad4>
 8006532:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8006534:	4d50      	ldr	r5, [pc, #320]	; (8006678 <_strtod_l+0xbe0>)
 8006536:	e7ab      	b.n	8006490 <_strtod_l+0x9f8>
 8006538:	2200      	movs	r2, #0
 800653a:	0020      	movs	r0, r4
 800653c:	0029      	movs	r1, r5
 800653e:	4b4e      	ldr	r3, [pc, #312]	; (8006678 <_strtod_l+0xbe0>)
 8006540:	f7fa ffc4 	bl	80014cc <__aeabi_dmul>
 8006544:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006546:	0004      	movs	r4, r0
 8006548:	000b      	movs	r3, r1
 800654a:	000d      	movs	r5, r1
 800654c:	2a00      	cmp	r2, #0
 800654e:	d104      	bne.n	800655a <_strtod_l+0xac2>
 8006550:	2280      	movs	r2, #128	; 0x80
 8006552:	0612      	lsls	r2, r2, #24
 8006554:	900a      	str	r0, [sp, #40]	; 0x28
 8006556:	188b      	adds	r3, r1, r2
 8006558:	e79e      	b.n	8006498 <_strtod_l+0xa00>
 800655a:	0002      	movs	r2, r0
 800655c:	920a      	str	r2, [sp, #40]	; 0x28
 800655e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006560:	e79b      	b.n	800649a <_strtod_l+0xa02>
 8006562:	2300      	movs	r3, #0
 8006564:	4c43      	ldr	r4, [pc, #268]	; (8006674 <_strtod_l+0xbdc>)
 8006566:	930a      	str	r3, [sp, #40]	; 0x28
 8006568:	940b      	str	r4, [sp, #44]	; 0x2c
 800656a:	2400      	movs	r4, #0
 800656c:	4d41      	ldr	r5, [pc, #260]	; (8006674 <_strtod_l+0xbdc>)
 800656e:	e794      	b.n	800649a <_strtod_l+0xa02>
 8006570:	2300      	movs	r3, #0
 8006572:	4c47      	ldr	r4, [pc, #284]	; (8006690 <_strtod_l+0xbf8>)
 8006574:	e7f7      	b.n	8006566 <_strtod_l+0xace>
 8006576:	23d4      	movs	r3, #212	; 0xd4
 8006578:	049b      	lsls	r3, r3, #18
 800657a:	18cf      	adds	r7, r1, r3
 800657c:	9b07      	ldr	r3, [sp, #28]
 800657e:	970e      	str	r7, [sp, #56]	; 0x38
 8006580:	2b00      	cmp	r3, #0
 8006582:	d1b9      	bne.n	80064f8 <_strtod_l+0xa60>
 8006584:	4b3d      	ldr	r3, [pc, #244]	; (800667c <_strtod_l+0xbe4>)
 8006586:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006588:	403b      	ands	r3, r7
 800658a:	429a      	cmp	r2, r3
 800658c:	d1b4      	bne.n	80064f8 <_strtod_l+0xa60>
 800658e:	0020      	movs	r0, r4
 8006590:	0029      	movs	r1, r5
 8006592:	f7f9 ffa7 	bl	80004e4 <__aeabi_d2lz>
 8006596:	f7f9 ffe1 	bl	800055c <__aeabi_l2d>
 800659a:	0002      	movs	r2, r0
 800659c:	000b      	movs	r3, r1
 800659e:	0020      	movs	r0, r4
 80065a0:	0029      	movs	r1, r5
 80065a2:	f7fb fa55 	bl	8001a50 <__aeabi_dsub>
 80065a6:	033b      	lsls	r3, r7, #12
 80065a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80065aa:	0b1b      	lsrs	r3, r3, #12
 80065ac:	4333      	orrs	r3, r6
 80065ae:	4313      	orrs	r3, r2
 80065b0:	0004      	movs	r4, r0
 80065b2:	000d      	movs	r5, r1
 80065b4:	4a37      	ldr	r2, [pc, #220]	; (8006694 <_strtod_l+0xbfc>)
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d054      	beq.n	8006664 <_strtod_l+0xbcc>
 80065ba:	4b37      	ldr	r3, [pc, #220]	; (8006698 <_strtod_l+0xc00>)
 80065bc:	f7f9 ff4c 	bl	8000458 <__aeabi_dcmplt>
 80065c0:	2800      	cmp	r0, #0
 80065c2:	d000      	beq.n	80065c6 <_strtod_l+0xb2e>
 80065c4:	e4d4      	b.n	8005f70 <_strtod_l+0x4d8>
 80065c6:	0020      	movs	r0, r4
 80065c8:	0029      	movs	r1, r5
 80065ca:	4a34      	ldr	r2, [pc, #208]	; (800669c <_strtod_l+0xc04>)
 80065cc:	4b2a      	ldr	r3, [pc, #168]	; (8006678 <_strtod_l+0xbe0>)
 80065ce:	f7f9 ff57 	bl	8000480 <__aeabi_dcmpgt>
 80065d2:	2800      	cmp	r0, #0
 80065d4:	d090      	beq.n	80064f8 <_strtod_l+0xa60>
 80065d6:	e4cb      	b.n	8005f70 <_strtod_l+0x4d8>
 80065d8:	9b07      	ldr	r3, [sp, #28]
 80065da:	2b00      	cmp	r3, #0
 80065dc:	d02b      	beq.n	8006636 <_strtod_l+0xb9e>
 80065de:	23d4      	movs	r3, #212	; 0xd4
 80065e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80065e2:	04db      	lsls	r3, r3, #19
 80065e4:	429a      	cmp	r2, r3
 80065e6:	d826      	bhi.n	8006636 <_strtod_l+0xb9e>
 80065e8:	0020      	movs	r0, r4
 80065ea:	0029      	movs	r1, r5
 80065ec:	4a2c      	ldr	r2, [pc, #176]	; (80066a0 <_strtod_l+0xc08>)
 80065ee:	4b2d      	ldr	r3, [pc, #180]	; (80066a4 <_strtod_l+0xc0c>)
 80065f0:	f7f9 ff3c 	bl	800046c <__aeabi_dcmple>
 80065f4:	2800      	cmp	r0, #0
 80065f6:	d017      	beq.n	8006628 <_strtod_l+0xb90>
 80065f8:	0020      	movs	r0, r4
 80065fa:	0029      	movs	r1, r5
 80065fc:	f7f9 ff54 	bl	80004a8 <__aeabi_d2uiz>
 8006600:	2800      	cmp	r0, #0
 8006602:	d100      	bne.n	8006606 <_strtod_l+0xb6e>
 8006604:	3001      	adds	r0, #1
 8006606:	f7fb fe29 	bl	800225c <__aeabi_ui2d>
 800660a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800660c:	0004      	movs	r4, r0
 800660e:	000b      	movs	r3, r1
 8006610:	000d      	movs	r5, r1
 8006612:	2a00      	cmp	r2, #0
 8006614:	d122      	bne.n	800665c <_strtod_l+0xbc4>
 8006616:	2280      	movs	r2, #128	; 0x80
 8006618:	0612      	lsls	r2, r2, #24
 800661a:	188b      	adds	r3, r1, r2
 800661c:	9016      	str	r0, [sp, #88]	; 0x58
 800661e:	9317      	str	r3, [sp, #92]	; 0x5c
 8006620:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8006622:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006624:	9212      	str	r2, [sp, #72]	; 0x48
 8006626:	9313      	str	r3, [sp, #76]	; 0x4c
 8006628:	22d6      	movs	r2, #214	; 0xd6
 800662a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800662c:	04d2      	lsls	r2, r2, #19
 800662e:	189b      	adds	r3, r3, r2
 8006630:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006632:	1a9b      	subs	r3, r3, r2
 8006634:	9313      	str	r3, [sp, #76]	; 0x4c
 8006636:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006638:	9911      	ldr	r1, [sp, #68]	; 0x44
 800663a:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800663c:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800663e:	f002 f9b3 	bl	80089a8 <__ulp>
 8006642:	0002      	movs	r2, r0
 8006644:	000b      	movs	r3, r1
 8006646:	0030      	movs	r0, r6
 8006648:	0039      	movs	r1, r7
 800664a:	f7fa ff3f 	bl	80014cc <__aeabi_dmul>
 800664e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006650:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006652:	f7f9 ffe1 	bl	8000618 <__aeabi_dadd>
 8006656:	0006      	movs	r6, r0
 8006658:	000f      	movs	r7, r1
 800665a:	e78f      	b.n	800657c <_strtod_l+0xae4>
 800665c:	0002      	movs	r2, r0
 800665e:	9216      	str	r2, [sp, #88]	; 0x58
 8006660:	9317      	str	r3, [sp, #92]	; 0x5c
 8006662:	e7dd      	b.n	8006620 <_strtod_l+0xb88>
 8006664:	4b10      	ldr	r3, [pc, #64]	; (80066a8 <_strtod_l+0xc10>)
 8006666:	f7f9 fef7 	bl	8000458 <__aeabi_dcmplt>
 800666a:	e7b2      	b.n	80065d2 <_strtod_l+0xb3a>
 800666c:	fff00000 	.word	0xfff00000
 8006670:	000fffff 	.word	0x000fffff
 8006674:	3ff00000 	.word	0x3ff00000
 8006678:	3fe00000 	.word	0x3fe00000
 800667c:	7ff00000 	.word	0x7ff00000
 8006680:	7fe00000 	.word	0x7fe00000
 8006684:	fcb00000 	.word	0xfcb00000
 8006688:	7c9fffff 	.word	0x7c9fffff
 800668c:	7fefffff 	.word	0x7fefffff
 8006690:	bff00000 	.word	0xbff00000
 8006694:	94a03595 	.word	0x94a03595
 8006698:	3fdfffff 	.word	0x3fdfffff
 800669c:	35afe535 	.word	0x35afe535
 80066a0:	ffc00000 	.word	0xffc00000
 80066a4:	41dfffff 	.word	0x41dfffff
 80066a8:	3fcfffff 	.word	0x3fcfffff

080066ac <_strtod_r>:
 80066ac:	b510      	push	{r4, lr}
 80066ae:	4b02      	ldr	r3, [pc, #8]	; (80066b8 <_strtod_r+0xc>)
 80066b0:	f7ff f9f2 	bl	8005a98 <_strtod_l>
 80066b4:	bd10      	pop	{r4, pc}
 80066b6:	46c0      	nop			; (mov r8, r8)
 80066b8:	20000018 	.word	0x20000018

080066bc <_strtol_l.constprop.0>:
 80066bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80066be:	b087      	sub	sp, #28
 80066c0:	001e      	movs	r6, r3
 80066c2:	9005      	str	r0, [sp, #20]
 80066c4:	9101      	str	r1, [sp, #4]
 80066c6:	9202      	str	r2, [sp, #8]
 80066c8:	2b01      	cmp	r3, #1
 80066ca:	d048      	beq.n	800675e <_strtol_l.constprop.0+0xa2>
 80066cc:	000b      	movs	r3, r1
 80066ce:	2e24      	cmp	r6, #36	; 0x24
 80066d0:	d845      	bhi.n	800675e <_strtol_l.constprop.0+0xa2>
 80066d2:	4a3b      	ldr	r2, [pc, #236]	; (80067c0 <_strtol_l.constprop.0+0x104>)
 80066d4:	2108      	movs	r1, #8
 80066d6:	4694      	mov	ip, r2
 80066d8:	001a      	movs	r2, r3
 80066da:	4660      	mov	r0, ip
 80066dc:	7814      	ldrb	r4, [r2, #0]
 80066de:	3301      	adds	r3, #1
 80066e0:	5d00      	ldrb	r0, [r0, r4]
 80066e2:	001d      	movs	r5, r3
 80066e4:	0007      	movs	r7, r0
 80066e6:	400f      	ands	r7, r1
 80066e8:	4208      	tst	r0, r1
 80066ea:	d1f5      	bne.n	80066d8 <_strtol_l.constprop.0+0x1c>
 80066ec:	2c2d      	cmp	r4, #45	; 0x2d
 80066ee:	d13d      	bne.n	800676c <_strtol_l.constprop.0+0xb0>
 80066f0:	2701      	movs	r7, #1
 80066f2:	781c      	ldrb	r4, [r3, #0]
 80066f4:	1c95      	adds	r5, r2, #2
 80066f6:	2e00      	cmp	r6, #0
 80066f8:	d05e      	beq.n	80067b8 <_strtol_l.constprop.0+0xfc>
 80066fa:	2e10      	cmp	r6, #16
 80066fc:	d109      	bne.n	8006712 <_strtol_l.constprop.0+0x56>
 80066fe:	2c30      	cmp	r4, #48	; 0x30
 8006700:	d107      	bne.n	8006712 <_strtol_l.constprop.0+0x56>
 8006702:	2220      	movs	r2, #32
 8006704:	782b      	ldrb	r3, [r5, #0]
 8006706:	4393      	bics	r3, r2
 8006708:	2b58      	cmp	r3, #88	; 0x58
 800670a:	d150      	bne.n	80067ae <_strtol_l.constprop.0+0xf2>
 800670c:	2610      	movs	r6, #16
 800670e:	786c      	ldrb	r4, [r5, #1]
 8006710:	3502      	adds	r5, #2
 8006712:	4b2c      	ldr	r3, [pc, #176]	; (80067c4 <_strtol_l.constprop.0+0x108>)
 8006714:	0031      	movs	r1, r6
 8006716:	18fb      	adds	r3, r7, r3
 8006718:	0018      	movs	r0, r3
 800671a:	9303      	str	r3, [sp, #12]
 800671c:	f7f9 fd96 	bl	800024c <__aeabi_uidivmod>
 8006720:	2200      	movs	r2, #0
 8006722:	9104      	str	r1, [sp, #16]
 8006724:	2101      	movs	r1, #1
 8006726:	4684      	mov	ip, r0
 8006728:	0010      	movs	r0, r2
 800672a:	4249      	negs	r1, r1
 800672c:	0023      	movs	r3, r4
 800672e:	3b30      	subs	r3, #48	; 0x30
 8006730:	2b09      	cmp	r3, #9
 8006732:	d903      	bls.n	800673c <_strtol_l.constprop.0+0x80>
 8006734:	3b11      	subs	r3, #17
 8006736:	2b19      	cmp	r3, #25
 8006738:	d81d      	bhi.n	8006776 <_strtol_l.constprop.0+0xba>
 800673a:	330a      	adds	r3, #10
 800673c:	429e      	cmp	r6, r3
 800673e:	dd1e      	ble.n	800677e <_strtol_l.constprop.0+0xc2>
 8006740:	1c54      	adds	r4, r2, #1
 8006742:	d009      	beq.n	8006758 <_strtol_l.constprop.0+0x9c>
 8006744:	000a      	movs	r2, r1
 8006746:	4584      	cmp	ip, r0
 8006748:	d306      	bcc.n	8006758 <_strtol_l.constprop.0+0x9c>
 800674a:	d102      	bne.n	8006752 <_strtol_l.constprop.0+0x96>
 800674c:	9c04      	ldr	r4, [sp, #16]
 800674e:	429c      	cmp	r4, r3
 8006750:	db02      	blt.n	8006758 <_strtol_l.constprop.0+0x9c>
 8006752:	2201      	movs	r2, #1
 8006754:	4370      	muls	r0, r6
 8006756:	1818      	adds	r0, r3, r0
 8006758:	782c      	ldrb	r4, [r5, #0]
 800675a:	3501      	adds	r5, #1
 800675c:	e7e6      	b.n	800672c <_strtol_l.constprop.0+0x70>
 800675e:	f000 f871 	bl	8006844 <__errno>
 8006762:	2316      	movs	r3, #22
 8006764:	6003      	str	r3, [r0, #0]
 8006766:	2000      	movs	r0, #0
 8006768:	b007      	add	sp, #28
 800676a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800676c:	2c2b      	cmp	r4, #43	; 0x2b
 800676e:	d1c2      	bne.n	80066f6 <_strtol_l.constprop.0+0x3a>
 8006770:	781c      	ldrb	r4, [r3, #0]
 8006772:	1c95      	adds	r5, r2, #2
 8006774:	e7bf      	b.n	80066f6 <_strtol_l.constprop.0+0x3a>
 8006776:	0023      	movs	r3, r4
 8006778:	3b61      	subs	r3, #97	; 0x61
 800677a:	2b19      	cmp	r3, #25
 800677c:	d9dd      	bls.n	800673a <_strtol_l.constprop.0+0x7e>
 800677e:	1c53      	adds	r3, r2, #1
 8006780:	d109      	bne.n	8006796 <_strtol_l.constprop.0+0xda>
 8006782:	2322      	movs	r3, #34	; 0x22
 8006784:	9a05      	ldr	r2, [sp, #20]
 8006786:	9803      	ldr	r0, [sp, #12]
 8006788:	6013      	str	r3, [r2, #0]
 800678a:	9b02      	ldr	r3, [sp, #8]
 800678c:	2b00      	cmp	r3, #0
 800678e:	d0eb      	beq.n	8006768 <_strtol_l.constprop.0+0xac>
 8006790:	1e6b      	subs	r3, r5, #1
 8006792:	9301      	str	r3, [sp, #4]
 8006794:	e007      	b.n	80067a6 <_strtol_l.constprop.0+0xea>
 8006796:	2f00      	cmp	r7, #0
 8006798:	d000      	beq.n	800679c <_strtol_l.constprop.0+0xe0>
 800679a:	4240      	negs	r0, r0
 800679c:	9b02      	ldr	r3, [sp, #8]
 800679e:	2b00      	cmp	r3, #0
 80067a0:	d0e2      	beq.n	8006768 <_strtol_l.constprop.0+0xac>
 80067a2:	2a00      	cmp	r2, #0
 80067a4:	d1f4      	bne.n	8006790 <_strtol_l.constprop.0+0xd4>
 80067a6:	9b02      	ldr	r3, [sp, #8]
 80067a8:	9a01      	ldr	r2, [sp, #4]
 80067aa:	601a      	str	r2, [r3, #0]
 80067ac:	e7dc      	b.n	8006768 <_strtol_l.constprop.0+0xac>
 80067ae:	2430      	movs	r4, #48	; 0x30
 80067b0:	2e00      	cmp	r6, #0
 80067b2:	d1ae      	bne.n	8006712 <_strtol_l.constprop.0+0x56>
 80067b4:	3608      	adds	r6, #8
 80067b6:	e7ac      	b.n	8006712 <_strtol_l.constprop.0+0x56>
 80067b8:	2c30      	cmp	r4, #48	; 0x30
 80067ba:	d0a2      	beq.n	8006702 <_strtol_l.constprop.0+0x46>
 80067bc:	260a      	movs	r6, #10
 80067be:	e7a8      	b.n	8006712 <_strtol_l.constprop.0+0x56>
 80067c0:	08009621 	.word	0x08009621
 80067c4:	7fffffff 	.word	0x7fffffff

080067c8 <_strtol_r>:
 80067c8:	b510      	push	{r4, lr}
 80067ca:	f7ff ff77 	bl	80066bc <_strtol_l.constprop.0>
 80067ce:	bd10      	pop	{r4, pc}

080067d0 <_fwalk_sglue>:
 80067d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80067d2:	0014      	movs	r4, r2
 80067d4:	2600      	movs	r6, #0
 80067d6:	9000      	str	r0, [sp, #0]
 80067d8:	9101      	str	r1, [sp, #4]
 80067da:	68a5      	ldr	r5, [r4, #8]
 80067dc:	6867      	ldr	r7, [r4, #4]
 80067de:	3f01      	subs	r7, #1
 80067e0:	d504      	bpl.n	80067ec <_fwalk_sglue+0x1c>
 80067e2:	6824      	ldr	r4, [r4, #0]
 80067e4:	2c00      	cmp	r4, #0
 80067e6:	d1f8      	bne.n	80067da <_fwalk_sglue+0xa>
 80067e8:	0030      	movs	r0, r6
 80067ea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80067ec:	89ab      	ldrh	r3, [r5, #12]
 80067ee:	2b01      	cmp	r3, #1
 80067f0:	d908      	bls.n	8006804 <_fwalk_sglue+0x34>
 80067f2:	220e      	movs	r2, #14
 80067f4:	5eab      	ldrsh	r3, [r5, r2]
 80067f6:	3301      	adds	r3, #1
 80067f8:	d004      	beq.n	8006804 <_fwalk_sglue+0x34>
 80067fa:	0029      	movs	r1, r5
 80067fc:	9800      	ldr	r0, [sp, #0]
 80067fe:	9b01      	ldr	r3, [sp, #4]
 8006800:	4798      	blx	r3
 8006802:	4306      	orrs	r6, r0
 8006804:	3568      	adds	r5, #104	; 0x68
 8006806:	e7ea      	b.n	80067de <_fwalk_sglue+0xe>

08006808 <strncmp>:
 8006808:	b530      	push	{r4, r5, lr}
 800680a:	0005      	movs	r5, r0
 800680c:	1e10      	subs	r0, r2, #0
 800680e:	d00b      	beq.n	8006828 <strncmp+0x20>
 8006810:	2400      	movs	r4, #0
 8006812:	3a01      	subs	r2, #1
 8006814:	5d2b      	ldrb	r3, [r5, r4]
 8006816:	5d08      	ldrb	r0, [r1, r4]
 8006818:	4283      	cmp	r3, r0
 800681a:	d104      	bne.n	8006826 <strncmp+0x1e>
 800681c:	42a2      	cmp	r2, r4
 800681e:	d002      	beq.n	8006826 <strncmp+0x1e>
 8006820:	3401      	adds	r4, #1
 8006822:	2b00      	cmp	r3, #0
 8006824:	d1f6      	bne.n	8006814 <strncmp+0xc>
 8006826:	1a18      	subs	r0, r3, r0
 8006828:	bd30      	pop	{r4, r5, pc}

0800682a <memset>:
 800682a:	0003      	movs	r3, r0
 800682c:	1882      	adds	r2, r0, r2
 800682e:	4293      	cmp	r3, r2
 8006830:	d100      	bne.n	8006834 <memset+0xa>
 8006832:	4770      	bx	lr
 8006834:	7019      	strb	r1, [r3, #0]
 8006836:	3301      	adds	r3, #1
 8006838:	e7f9      	b.n	800682e <memset+0x4>
	...

0800683c <_localeconv_r>:
 800683c:	4800      	ldr	r0, [pc, #0]	; (8006840 <_localeconv_r+0x4>)
 800683e:	4770      	bx	lr
 8006840:	20000108 	.word	0x20000108

08006844 <__errno>:
 8006844:	4b01      	ldr	r3, [pc, #4]	; (800684c <__errno+0x8>)
 8006846:	6818      	ldr	r0, [r3, #0]
 8006848:	4770      	bx	lr
 800684a:	46c0      	nop			; (mov r8, r8)
 800684c:	200001d0 	.word	0x200001d0

08006850 <__libc_init_array>:
 8006850:	b570      	push	{r4, r5, r6, lr}
 8006852:	2600      	movs	r6, #0
 8006854:	4c0c      	ldr	r4, [pc, #48]	; (8006888 <__libc_init_array+0x38>)
 8006856:	4d0d      	ldr	r5, [pc, #52]	; (800688c <__libc_init_array+0x3c>)
 8006858:	1b64      	subs	r4, r4, r5
 800685a:	10a4      	asrs	r4, r4, #2
 800685c:	42a6      	cmp	r6, r4
 800685e:	d109      	bne.n	8006874 <__libc_init_array+0x24>
 8006860:	2600      	movs	r6, #0
 8006862:	f002 fe45 	bl	80094f0 <_init>
 8006866:	4c0a      	ldr	r4, [pc, #40]	; (8006890 <__libc_init_array+0x40>)
 8006868:	4d0a      	ldr	r5, [pc, #40]	; (8006894 <__libc_init_array+0x44>)
 800686a:	1b64      	subs	r4, r4, r5
 800686c:	10a4      	asrs	r4, r4, #2
 800686e:	42a6      	cmp	r6, r4
 8006870:	d105      	bne.n	800687e <__libc_init_array+0x2e>
 8006872:	bd70      	pop	{r4, r5, r6, pc}
 8006874:	00b3      	lsls	r3, r6, #2
 8006876:	58eb      	ldr	r3, [r5, r3]
 8006878:	4798      	blx	r3
 800687a:	3601      	adds	r6, #1
 800687c:	e7ee      	b.n	800685c <__libc_init_array+0xc>
 800687e:	00b3      	lsls	r3, r6, #2
 8006880:	58eb      	ldr	r3, [r5, r3]
 8006882:	4798      	blx	r3
 8006884:	3601      	adds	r6, #1
 8006886:	e7f2      	b.n	800686e <__libc_init_array+0x1e>
 8006888:	080099b0 	.word	0x080099b0
 800688c:	080099b0 	.word	0x080099b0
 8006890:	080099b4 	.word	0x080099b4
 8006894:	080099b0 	.word	0x080099b0

08006898 <__retarget_lock_acquire_recursive>:
 8006898:	4770      	bx	lr

0800689a <__retarget_lock_release_recursive>:
 800689a:	4770      	bx	lr

0800689c <memchr>:
 800689c:	b2c9      	uxtb	r1, r1
 800689e:	1882      	adds	r2, r0, r2
 80068a0:	4290      	cmp	r0, r2
 80068a2:	d101      	bne.n	80068a8 <memchr+0xc>
 80068a4:	2000      	movs	r0, #0
 80068a6:	4770      	bx	lr
 80068a8:	7803      	ldrb	r3, [r0, #0]
 80068aa:	428b      	cmp	r3, r1
 80068ac:	d0fb      	beq.n	80068a6 <memchr+0xa>
 80068ae:	3001      	adds	r0, #1
 80068b0:	e7f6      	b.n	80068a0 <memchr+0x4>

080068b2 <memcpy>:
 80068b2:	2300      	movs	r3, #0
 80068b4:	b510      	push	{r4, lr}
 80068b6:	429a      	cmp	r2, r3
 80068b8:	d100      	bne.n	80068bc <memcpy+0xa>
 80068ba:	bd10      	pop	{r4, pc}
 80068bc:	5ccc      	ldrb	r4, [r1, r3]
 80068be:	54c4      	strb	r4, [r0, r3]
 80068c0:	3301      	adds	r3, #1
 80068c2:	e7f8      	b.n	80068b6 <memcpy+0x4>

080068c4 <nan>:
 80068c4:	2000      	movs	r0, #0
 80068c6:	4901      	ldr	r1, [pc, #4]	; (80068cc <nan+0x8>)
 80068c8:	4770      	bx	lr
 80068ca:	46c0      	nop			; (mov r8, r8)
 80068cc:	7ff80000 	.word	0x7ff80000

080068d0 <nanf>:
 80068d0:	4800      	ldr	r0, [pc, #0]	; (80068d4 <nanf+0x4>)
 80068d2:	4770      	bx	lr
 80068d4:	7fc00000 	.word	0x7fc00000

080068d8 <quorem>:
 80068d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068da:	6902      	ldr	r2, [r0, #16]
 80068dc:	690b      	ldr	r3, [r1, #16]
 80068de:	b089      	sub	sp, #36	; 0x24
 80068e0:	0007      	movs	r7, r0
 80068e2:	9104      	str	r1, [sp, #16]
 80068e4:	2000      	movs	r0, #0
 80068e6:	429a      	cmp	r2, r3
 80068e8:	db69      	blt.n	80069be <quorem+0xe6>
 80068ea:	3b01      	subs	r3, #1
 80068ec:	009c      	lsls	r4, r3, #2
 80068ee:	9301      	str	r3, [sp, #4]
 80068f0:	000b      	movs	r3, r1
 80068f2:	3314      	adds	r3, #20
 80068f4:	9306      	str	r3, [sp, #24]
 80068f6:	191b      	adds	r3, r3, r4
 80068f8:	9305      	str	r3, [sp, #20]
 80068fa:	003b      	movs	r3, r7
 80068fc:	3314      	adds	r3, #20
 80068fe:	9303      	str	r3, [sp, #12]
 8006900:	191c      	adds	r4, r3, r4
 8006902:	9b05      	ldr	r3, [sp, #20]
 8006904:	6826      	ldr	r6, [r4, #0]
 8006906:	681d      	ldr	r5, [r3, #0]
 8006908:	0030      	movs	r0, r6
 800690a:	3501      	adds	r5, #1
 800690c:	0029      	movs	r1, r5
 800690e:	f7f9 fc17 	bl	8000140 <__udivsi3>
 8006912:	9002      	str	r0, [sp, #8]
 8006914:	42ae      	cmp	r6, r5
 8006916:	d329      	bcc.n	800696c <quorem+0x94>
 8006918:	9b06      	ldr	r3, [sp, #24]
 800691a:	2600      	movs	r6, #0
 800691c:	469c      	mov	ip, r3
 800691e:	9d03      	ldr	r5, [sp, #12]
 8006920:	9606      	str	r6, [sp, #24]
 8006922:	4662      	mov	r2, ip
 8006924:	ca08      	ldmia	r2!, {r3}
 8006926:	6828      	ldr	r0, [r5, #0]
 8006928:	4694      	mov	ip, r2
 800692a:	9a02      	ldr	r2, [sp, #8]
 800692c:	b299      	uxth	r1, r3
 800692e:	4351      	muls	r1, r2
 8006930:	0c1b      	lsrs	r3, r3, #16
 8006932:	4353      	muls	r3, r2
 8006934:	1989      	adds	r1, r1, r6
 8006936:	0c0a      	lsrs	r2, r1, #16
 8006938:	189b      	adds	r3, r3, r2
 800693a:	9307      	str	r3, [sp, #28]
 800693c:	0c1e      	lsrs	r6, r3, #16
 800693e:	9b06      	ldr	r3, [sp, #24]
 8006940:	b282      	uxth	r2, r0
 8006942:	18d2      	adds	r2, r2, r3
 8006944:	466b      	mov	r3, sp
 8006946:	b289      	uxth	r1, r1
 8006948:	8b9b      	ldrh	r3, [r3, #28]
 800694a:	1a52      	subs	r2, r2, r1
 800694c:	0c01      	lsrs	r1, r0, #16
 800694e:	1ac9      	subs	r1, r1, r3
 8006950:	1413      	asrs	r3, r2, #16
 8006952:	18cb      	adds	r3, r1, r3
 8006954:	1419      	asrs	r1, r3, #16
 8006956:	b292      	uxth	r2, r2
 8006958:	041b      	lsls	r3, r3, #16
 800695a:	4313      	orrs	r3, r2
 800695c:	c508      	stmia	r5!, {r3}
 800695e:	9b05      	ldr	r3, [sp, #20]
 8006960:	9106      	str	r1, [sp, #24]
 8006962:	4563      	cmp	r3, ip
 8006964:	d2dd      	bcs.n	8006922 <quorem+0x4a>
 8006966:	6823      	ldr	r3, [r4, #0]
 8006968:	2b00      	cmp	r3, #0
 800696a:	d030      	beq.n	80069ce <quorem+0xf6>
 800696c:	0038      	movs	r0, r7
 800696e:	9904      	ldr	r1, [sp, #16]
 8006970:	f001 ff66 	bl	8008840 <__mcmp>
 8006974:	2800      	cmp	r0, #0
 8006976:	db21      	blt.n	80069bc <quorem+0xe4>
 8006978:	0038      	movs	r0, r7
 800697a:	2600      	movs	r6, #0
 800697c:	9b02      	ldr	r3, [sp, #8]
 800697e:	9c04      	ldr	r4, [sp, #16]
 8006980:	3301      	adds	r3, #1
 8006982:	9302      	str	r3, [sp, #8]
 8006984:	3014      	adds	r0, #20
 8006986:	3414      	adds	r4, #20
 8006988:	6803      	ldr	r3, [r0, #0]
 800698a:	cc02      	ldmia	r4!, {r1}
 800698c:	b29d      	uxth	r5, r3
 800698e:	19ad      	adds	r5, r5, r6
 8006990:	b28a      	uxth	r2, r1
 8006992:	1aaa      	subs	r2, r5, r2
 8006994:	0c09      	lsrs	r1, r1, #16
 8006996:	0c1b      	lsrs	r3, r3, #16
 8006998:	1a5b      	subs	r3, r3, r1
 800699a:	1411      	asrs	r1, r2, #16
 800699c:	185b      	adds	r3, r3, r1
 800699e:	141e      	asrs	r6, r3, #16
 80069a0:	b292      	uxth	r2, r2
 80069a2:	041b      	lsls	r3, r3, #16
 80069a4:	4313      	orrs	r3, r2
 80069a6:	c008      	stmia	r0!, {r3}
 80069a8:	9b05      	ldr	r3, [sp, #20]
 80069aa:	42a3      	cmp	r3, r4
 80069ac:	d2ec      	bcs.n	8006988 <quorem+0xb0>
 80069ae:	9b01      	ldr	r3, [sp, #4]
 80069b0:	9a03      	ldr	r2, [sp, #12]
 80069b2:	009b      	lsls	r3, r3, #2
 80069b4:	18d3      	adds	r3, r2, r3
 80069b6:	681a      	ldr	r2, [r3, #0]
 80069b8:	2a00      	cmp	r2, #0
 80069ba:	d015      	beq.n	80069e8 <quorem+0x110>
 80069bc:	9802      	ldr	r0, [sp, #8]
 80069be:	b009      	add	sp, #36	; 0x24
 80069c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80069c2:	6823      	ldr	r3, [r4, #0]
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d106      	bne.n	80069d6 <quorem+0xfe>
 80069c8:	9b01      	ldr	r3, [sp, #4]
 80069ca:	3b01      	subs	r3, #1
 80069cc:	9301      	str	r3, [sp, #4]
 80069ce:	9b03      	ldr	r3, [sp, #12]
 80069d0:	3c04      	subs	r4, #4
 80069d2:	42a3      	cmp	r3, r4
 80069d4:	d3f5      	bcc.n	80069c2 <quorem+0xea>
 80069d6:	9b01      	ldr	r3, [sp, #4]
 80069d8:	613b      	str	r3, [r7, #16]
 80069da:	e7c7      	b.n	800696c <quorem+0x94>
 80069dc:	681a      	ldr	r2, [r3, #0]
 80069de:	2a00      	cmp	r2, #0
 80069e0:	d106      	bne.n	80069f0 <quorem+0x118>
 80069e2:	9a01      	ldr	r2, [sp, #4]
 80069e4:	3a01      	subs	r2, #1
 80069e6:	9201      	str	r2, [sp, #4]
 80069e8:	9a03      	ldr	r2, [sp, #12]
 80069ea:	3b04      	subs	r3, #4
 80069ec:	429a      	cmp	r2, r3
 80069ee:	d3f5      	bcc.n	80069dc <quorem+0x104>
 80069f0:	9b01      	ldr	r3, [sp, #4]
 80069f2:	613b      	str	r3, [r7, #16]
 80069f4:	e7e2      	b.n	80069bc <quorem+0xe4>
	...

080069f8 <_dtoa_r>:
 80069f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069fa:	0014      	movs	r4, r2
 80069fc:	001d      	movs	r5, r3
 80069fe:	69c6      	ldr	r6, [r0, #28]
 8006a00:	b09d      	sub	sp, #116	; 0x74
 8006a02:	9408      	str	r4, [sp, #32]
 8006a04:	9509      	str	r5, [sp, #36]	; 0x24
 8006a06:	9f25      	ldr	r7, [sp, #148]	; 0x94
 8006a08:	9004      	str	r0, [sp, #16]
 8006a0a:	2e00      	cmp	r6, #0
 8006a0c:	d10f      	bne.n	8006a2e <_dtoa_r+0x36>
 8006a0e:	2010      	movs	r0, #16
 8006a10:	f001 fabe 	bl	8007f90 <malloc>
 8006a14:	9b04      	ldr	r3, [sp, #16]
 8006a16:	1e02      	subs	r2, r0, #0
 8006a18:	61d8      	str	r0, [r3, #28]
 8006a1a:	d104      	bne.n	8006a26 <_dtoa_r+0x2e>
 8006a1c:	21ef      	movs	r1, #239	; 0xef
 8006a1e:	4bc6      	ldr	r3, [pc, #792]	; (8006d38 <_dtoa_r+0x340>)
 8006a20:	48c6      	ldr	r0, [pc, #792]	; (8006d3c <_dtoa_r+0x344>)
 8006a22:	f002 f9f3 	bl	8008e0c <__assert_func>
 8006a26:	6046      	str	r6, [r0, #4]
 8006a28:	6086      	str	r6, [r0, #8]
 8006a2a:	6006      	str	r6, [r0, #0]
 8006a2c:	60c6      	str	r6, [r0, #12]
 8006a2e:	9b04      	ldr	r3, [sp, #16]
 8006a30:	69db      	ldr	r3, [r3, #28]
 8006a32:	6819      	ldr	r1, [r3, #0]
 8006a34:	2900      	cmp	r1, #0
 8006a36:	d00b      	beq.n	8006a50 <_dtoa_r+0x58>
 8006a38:	685a      	ldr	r2, [r3, #4]
 8006a3a:	2301      	movs	r3, #1
 8006a3c:	4093      	lsls	r3, r2
 8006a3e:	604a      	str	r2, [r1, #4]
 8006a40:	608b      	str	r3, [r1, #8]
 8006a42:	9804      	ldr	r0, [sp, #16]
 8006a44:	f001 fc6e 	bl	8008324 <_Bfree>
 8006a48:	2200      	movs	r2, #0
 8006a4a:	9b04      	ldr	r3, [sp, #16]
 8006a4c:	69db      	ldr	r3, [r3, #28]
 8006a4e:	601a      	str	r2, [r3, #0]
 8006a50:	2d00      	cmp	r5, #0
 8006a52:	da1e      	bge.n	8006a92 <_dtoa_r+0x9a>
 8006a54:	2301      	movs	r3, #1
 8006a56:	603b      	str	r3, [r7, #0]
 8006a58:	006b      	lsls	r3, r5, #1
 8006a5a:	085b      	lsrs	r3, r3, #1
 8006a5c:	9309      	str	r3, [sp, #36]	; 0x24
 8006a5e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8006a60:	4bb7      	ldr	r3, [pc, #732]	; (8006d40 <_dtoa_r+0x348>)
 8006a62:	4ab7      	ldr	r2, [pc, #732]	; (8006d40 <_dtoa_r+0x348>)
 8006a64:	403b      	ands	r3, r7
 8006a66:	4293      	cmp	r3, r2
 8006a68:	d116      	bne.n	8006a98 <_dtoa_r+0xa0>
 8006a6a:	4bb6      	ldr	r3, [pc, #728]	; (8006d44 <_dtoa_r+0x34c>)
 8006a6c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006a6e:	6013      	str	r3, [r2, #0]
 8006a70:	033b      	lsls	r3, r7, #12
 8006a72:	0b1b      	lsrs	r3, r3, #12
 8006a74:	4323      	orrs	r3, r4
 8006a76:	d101      	bne.n	8006a7c <_dtoa_r+0x84>
 8006a78:	f000 fdb5 	bl	80075e6 <_dtoa_r+0xbee>
 8006a7c:	4bb2      	ldr	r3, [pc, #712]	; (8006d48 <_dtoa_r+0x350>)
 8006a7e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006a80:	9306      	str	r3, [sp, #24]
 8006a82:	2a00      	cmp	r2, #0
 8006a84:	d002      	beq.n	8006a8c <_dtoa_r+0x94>
 8006a86:	4bb1      	ldr	r3, [pc, #708]	; (8006d4c <_dtoa_r+0x354>)
 8006a88:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006a8a:	6013      	str	r3, [r2, #0]
 8006a8c:	9806      	ldr	r0, [sp, #24]
 8006a8e:	b01d      	add	sp, #116	; 0x74
 8006a90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006a92:	2300      	movs	r3, #0
 8006a94:	603b      	str	r3, [r7, #0]
 8006a96:	e7e2      	b.n	8006a5e <_dtoa_r+0x66>
 8006a98:	9a08      	ldr	r2, [sp, #32]
 8006a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006a9c:	9210      	str	r2, [sp, #64]	; 0x40
 8006a9e:	9311      	str	r3, [sp, #68]	; 0x44
 8006aa0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006aa2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006aa4:	2200      	movs	r2, #0
 8006aa6:	2300      	movs	r3, #0
 8006aa8:	f7f9 fcd0 	bl	800044c <__aeabi_dcmpeq>
 8006aac:	1e06      	subs	r6, r0, #0
 8006aae:	d009      	beq.n	8006ac4 <_dtoa_r+0xcc>
 8006ab0:	2301      	movs	r3, #1
 8006ab2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006ab4:	6013      	str	r3, [r2, #0]
 8006ab6:	4ba6      	ldr	r3, [pc, #664]	; (8006d50 <_dtoa_r+0x358>)
 8006ab8:	9306      	str	r3, [sp, #24]
 8006aba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d0e5      	beq.n	8006a8c <_dtoa_r+0x94>
 8006ac0:	4ba4      	ldr	r3, [pc, #656]	; (8006d54 <_dtoa_r+0x35c>)
 8006ac2:	e7e1      	b.n	8006a88 <_dtoa_r+0x90>
 8006ac4:	ab1a      	add	r3, sp, #104	; 0x68
 8006ac6:	9301      	str	r3, [sp, #4]
 8006ac8:	ab1b      	add	r3, sp, #108	; 0x6c
 8006aca:	9300      	str	r3, [sp, #0]
 8006acc:	9804      	ldr	r0, [sp, #16]
 8006ace:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006ad0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006ad2:	f001 ffd1 	bl	8008a78 <__d2b>
 8006ad6:	007a      	lsls	r2, r7, #1
 8006ad8:	9005      	str	r0, [sp, #20]
 8006ada:	0d52      	lsrs	r2, r2, #21
 8006adc:	d100      	bne.n	8006ae0 <_dtoa_r+0xe8>
 8006ade:	e07b      	b.n	8006bd8 <_dtoa_r+0x1e0>
 8006ae0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006ae2:	9617      	str	r6, [sp, #92]	; 0x5c
 8006ae4:	0319      	lsls	r1, r3, #12
 8006ae6:	4b9c      	ldr	r3, [pc, #624]	; (8006d58 <_dtoa_r+0x360>)
 8006ae8:	0b09      	lsrs	r1, r1, #12
 8006aea:	430b      	orrs	r3, r1
 8006aec:	499b      	ldr	r1, [pc, #620]	; (8006d5c <_dtoa_r+0x364>)
 8006aee:	1857      	adds	r7, r2, r1
 8006af0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006af2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006af4:	0019      	movs	r1, r3
 8006af6:	2200      	movs	r2, #0
 8006af8:	4b99      	ldr	r3, [pc, #612]	; (8006d60 <_dtoa_r+0x368>)
 8006afa:	f7fa ffa9 	bl	8001a50 <__aeabi_dsub>
 8006afe:	4a99      	ldr	r2, [pc, #612]	; (8006d64 <_dtoa_r+0x36c>)
 8006b00:	4b99      	ldr	r3, [pc, #612]	; (8006d68 <_dtoa_r+0x370>)
 8006b02:	f7fa fce3 	bl	80014cc <__aeabi_dmul>
 8006b06:	4a99      	ldr	r2, [pc, #612]	; (8006d6c <_dtoa_r+0x374>)
 8006b08:	4b99      	ldr	r3, [pc, #612]	; (8006d70 <_dtoa_r+0x378>)
 8006b0a:	f7f9 fd85 	bl	8000618 <__aeabi_dadd>
 8006b0e:	0004      	movs	r4, r0
 8006b10:	0038      	movs	r0, r7
 8006b12:	000d      	movs	r5, r1
 8006b14:	f7fb fb72 	bl	80021fc <__aeabi_i2d>
 8006b18:	4a96      	ldr	r2, [pc, #600]	; (8006d74 <_dtoa_r+0x37c>)
 8006b1a:	4b97      	ldr	r3, [pc, #604]	; (8006d78 <_dtoa_r+0x380>)
 8006b1c:	f7fa fcd6 	bl	80014cc <__aeabi_dmul>
 8006b20:	0002      	movs	r2, r0
 8006b22:	000b      	movs	r3, r1
 8006b24:	0020      	movs	r0, r4
 8006b26:	0029      	movs	r1, r5
 8006b28:	f7f9 fd76 	bl	8000618 <__aeabi_dadd>
 8006b2c:	0004      	movs	r4, r0
 8006b2e:	000d      	movs	r5, r1
 8006b30:	f7fb fb2e 	bl	8002190 <__aeabi_d2iz>
 8006b34:	2200      	movs	r2, #0
 8006b36:	9003      	str	r0, [sp, #12]
 8006b38:	2300      	movs	r3, #0
 8006b3a:	0020      	movs	r0, r4
 8006b3c:	0029      	movs	r1, r5
 8006b3e:	f7f9 fc8b 	bl	8000458 <__aeabi_dcmplt>
 8006b42:	2800      	cmp	r0, #0
 8006b44:	d00b      	beq.n	8006b5e <_dtoa_r+0x166>
 8006b46:	9803      	ldr	r0, [sp, #12]
 8006b48:	f7fb fb58 	bl	80021fc <__aeabi_i2d>
 8006b4c:	002b      	movs	r3, r5
 8006b4e:	0022      	movs	r2, r4
 8006b50:	f7f9 fc7c 	bl	800044c <__aeabi_dcmpeq>
 8006b54:	4243      	negs	r3, r0
 8006b56:	4158      	adcs	r0, r3
 8006b58:	9b03      	ldr	r3, [sp, #12]
 8006b5a:	1a1b      	subs	r3, r3, r0
 8006b5c:	9303      	str	r3, [sp, #12]
 8006b5e:	2301      	movs	r3, #1
 8006b60:	9316      	str	r3, [sp, #88]	; 0x58
 8006b62:	9b03      	ldr	r3, [sp, #12]
 8006b64:	2b16      	cmp	r3, #22
 8006b66:	d810      	bhi.n	8006b8a <_dtoa_r+0x192>
 8006b68:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006b6a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006b6c:	9a03      	ldr	r2, [sp, #12]
 8006b6e:	4b83      	ldr	r3, [pc, #524]	; (8006d7c <_dtoa_r+0x384>)
 8006b70:	00d2      	lsls	r2, r2, #3
 8006b72:	189b      	adds	r3, r3, r2
 8006b74:	681a      	ldr	r2, [r3, #0]
 8006b76:	685b      	ldr	r3, [r3, #4]
 8006b78:	f7f9 fc6e 	bl	8000458 <__aeabi_dcmplt>
 8006b7c:	2800      	cmp	r0, #0
 8006b7e:	d047      	beq.n	8006c10 <_dtoa_r+0x218>
 8006b80:	9b03      	ldr	r3, [sp, #12]
 8006b82:	3b01      	subs	r3, #1
 8006b84:	9303      	str	r3, [sp, #12]
 8006b86:	2300      	movs	r3, #0
 8006b88:	9316      	str	r3, [sp, #88]	; 0x58
 8006b8a:	2200      	movs	r2, #0
 8006b8c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006b8e:	920a      	str	r2, [sp, #40]	; 0x28
 8006b90:	1bdb      	subs	r3, r3, r7
 8006b92:	1e5a      	subs	r2, r3, #1
 8006b94:	d53e      	bpl.n	8006c14 <_dtoa_r+0x21c>
 8006b96:	2201      	movs	r2, #1
 8006b98:	1ad3      	subs	r3, r2, r3
 8006b9a:	930a      	str	r3, [sp, #40]	; 0x28
 8006b9c:	2300      	movs	r3, #0
 8006b9e:	930c      	str	r3, [sp, #48]	; 0x30
 8006ba0:	9b03      	ldr	r3, [sp, #12]
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	db38      	blt.n	8006c18 <_dtoa_r+0x220>
 8006ba6:	9a03      	ldr	r2, [sp, #12]
 8006ba8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006baa:	4694      	mov	ip, r2
 8006bac:	4463      	add	r3, ip
 8006bae:	930c      	str	r3, [sp, #48]	; 0x30
 8006bb0:	2300      	movs	r3, #0
 8006bb2:	9213      	str	r2, [sp, #76]	; 0x4c
 8006bb4:	930d      	str	r3, [sp, #52]	; 0x34
 8006bb6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006bb8:	2401      	movs	r4, #1
 8006bba:	2b09      	cmp	r3, #9
 8006bbc:	d867      	bhi.n	8006c8e <_dtoa_r+0x296>
 8006bbe:	2b05      	cmp	r3, #5
 8006bc0:	dd02      	ble.n	8006bc8 <_dtoa_r+0x1d0>
 8006bc2:	2400      	movs	r4, #0
 8006bc4:	3b04      	subs	r3, #4
 8006bc6:	9322      	str	r3, [sp, #136]	; 0x88
 8006bc8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006bca:	1e98      	subs	r0, r3, #2
 8006bcc:	2803      	cmp	r0, #3
 8006bce:	d867      	bhi.n	8006ca0 <_dtoa_r+0x2a8>
 8006bd0:	f7f9 faa2 	bl	8000118 <__gnu_thumb1_case_uqi>
 8006bd4:	5b383a2b 	.word	0x5b383a2b
 8006bd8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006bda:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8006bdc:	18f6      	adds	r6, r6, r3
 8006bde:	4b68      	ldr	r3, [pc, #416]	; (8006d80 <_dtoa_r+0x388>)
 8006be0:	18f2      	adds	r2, r6, r3
 8006be2:	2a20      	cmp	r2, #32
 8006be4:	dd0f      	ble.n	8006c06 <_dtoa_r+0x20e>
 8006be6:	2340      	movs	r3, #64	; 0x40
 8006be8:	1a9b      	subs	r3, r3, r2
 8006bea:	409f      	lsls	r7, r3
 8006bec:	4b65      	ldr	r3, [pc, #404]	; (8006d84 <_dtoa_r+0x38c>)
 8006bee:	0038      	movs	r0, r7
 8006bf0:	18f3      	adds	r3, r6, r3
 8006bf2:	40dc      	lsrs	r4, r3
 8006bf4:	4320      	orrs	r0, r4
 8006bf6:	f7fb fb31 	bl	800225c <__aeabi_ui2d>
 8006bfa:	2201      	movs	r2, #1
 8006bfc:	4b62      	ldr	r3, [pc, #392]	; (8006d88 <_dtoa_r+0x390>)
 8006bfe:	1e77      	subs	r7, r6, #1
 8006c00:	18cb      	adds	r3, r1, r3
 8006c02:	9217      	str	r2, [sp, #92]	; 0x5c
 8006c04:	e776      	b.n	8006af4 <_dtoa_r+0xfc>
 8006c06:	2320      	movs	r3, #32
 8006c08:	0020      	movs	r0, r4
 8006c0a:	1a9b      	subs	r3, r3, r2
 8006c0c:	4098      	lsls	r0, r3
 8006c0e:	e7f2      	b.n	8006bf6 <_dtoa_r+0x1fe>
 8006c10:	9016      	str	r0, [sp, #88]	; 0x58
 8006c12:	e7ba      	b.n	8006b8a <_dtoa_r+0x192>
 8006c14:	920c      	str	r2, [sp, #48]	; 0x30
 8006c16:	e7c3      	b.n	8006ba0 <_dtoa_r+0x1a8>
 8006c18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006c1a:	9a03      	ldr	r2, [sp, #12]
 8006c1c:	1a9b      	subs	r3, r3, r2
 8006c1e:	930a      	str	r3, [sp, #40]	; 0x28
 8006c20:	4253      	negs	r3, r2
 8006c22:	930d      	str	r3, [sp, #52]	; 0x34
 8006c24:	2300      	movs	r3, #0
 8006c26:	9313      	str	r3, [sp, #76]	; 0x4c
 8006c28:	e7c5      	b.n	8006bb6 <_dtoa_r+0x1be>
 8006c2a:	2300      	movs	r3, #0
 8006c2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8006c2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006c30:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c32:	9307      	str	r3, [sp, #28]
 8006c34:	2b00      	cmp	r3, #0
 8006c36:	dc13      	bgt.n	8006c60 <_dtoa_r+0x268>
 8006c38:	2301      	movs	r3, #1
 8006c3a:	001a      	movs	r2, r3
 8006c3c:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c3e:	9307      	str	r3, [sp, #28]
 8006c40:	9223      	str	r2, [sp, #140]	; 0x8c
 8006c42:	e00d      	b.n	8006c60 <_dtoa_r+0x268>
 8006c44:	2301      	movs	r3, #1
 8006c46:	e7f1      	b.n	8006c2c <_dtoa_r+0x234>
 8006c48:	2300      	movs	r3, #0
 8006c4a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8006c4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8006c4e:	4694      	mov	ip, r2
 8006c50:	9b03      	ldr	r3, [sp, #12]
 8006c52:	4463      	add	r3, ip
 8006c54:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c56:	3301      	adds	r3, #1
 8006c58:	9307      	str	r3, [sp, #28]
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	dc00      	bgt.n	8006c60 <_dtoa_r+0x268>
 8006c5e:	2301      	movs	r3, #1
 8006c60:	9a04      	ldr	r2, [sp, #16]
 8006c62:	2100      	movs	r1, #0
 8006c64:	69d0      	ldr	r0, [r2, #28]
 8006c66:	2204      	movs	r2, #4
 8006c68:	0015      	movs	r5, r2
 8006c6a:	3514      	adds	r5, #20
 8006c6c:	429d      	cmp	r5, r3
 8006c6e:	d91b      	bls.n	8006ca8 <_dtoa_r+0x2b0>
 8006c70:	6041      	str	r1, [r0, #4]
 8006c72:	9804      	ldr	r0, [sp, #16]
 8006c74:	f001 fb12 	bl	800829c <_Balloc>
 8006c78:	9006      	str	r0, [sp, #24]
 8006c7a:	2800      	cmp	r0, #0
 8006c7c:	d117      	bne.n	8006cae <_dtoa_r+0x2b6>
 8006c7e:	21b0      	movs	r1, #176	; 0xb0
 8006c80:	4b42      	ldr	r3, [pc, #264]	; (8006d8c <_dtoa_r+0x394>)
 8006c82:	482e      	ldr	r0, [pc, #184]	; (8006d3c <_dtoa_r+0x344>)
 8006c84:	9a06      	ldr	r2, [sp, #24]
 8006c86:	31ff      	adds	r1, #255	; 0xff
 8006c88:	e6cb      	b.n	8006a22 <_dtoa_r+0x2a>
 8006c8a:	2301      	movs	r3, #1
 8006c8c:	e7dd      	b.n	8006c4a <_dtoa_r+0x252>
 8006c8e:	2300      	movs	r3, #0
 8006c90:	940f      	str	r4, [sp, #60]	; 0x3c
 8006c92:	9322      	str	r3, [sp, #136]	; 0x88
 8006c94:	3b01      	subs	r3, #1
 8006c96:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c98:	9307      	str	r3, [sp, #28]
 8006c9a:	2200      	movs	r2, #0
 8006c9c:	3313      	adds	r3, #19
 8006c9e:	e7cf      	b.n	8006c40 <_dtoa_r+0x248>
 8006ca0:	2301      	movs	r3, #1
 8006ca2:	930f      	str	r3, [sp, #60]	; 0x3c
 8006ca4:	3b02      	subs	r3, #2
 8006ca6:	e7f6      	b.n	8006c96 <_dtoa_r+0x29e>
 8006ca8:	3101      	adds	r1, #1
 8006caa:	0052      	lsls	r2, r2, #1
 8006cac:	e7dc      	b.n	8006c68 <_dtoa_r+0x270>
 8006cae:	9b04      	ldr	r3, [sp, #16]
 8006cb0:	9a06      	ldr	r2, [sp, #24]
 8006cb2:	69db      	ldr	r3, [r3, #28]
 8006cb4:	601a      	str	r2, [r3, #0]
 8006cb6:	9b07      	ldr	r3, [sp, #28]
 8006cb8:	2b0e      	cmp	r3, #14
 8006cba:	d900      	bls.n	8006cbe <_dtoa_r+0x2c6>
 8006cbc:	e0e5      	b.n	8006e8a <_dtoa_r+0x492>
 8006cbe:	2c00      	cmp	r4, #0
 8006cc0:	d100      	bne.n	8006cc4 <_dtoa_r+0x2cc>
 8006cc2:	e0e2      	b.n	8006e8a <_dtoa_r+0x492>
 8006cc4:	9b03      	ldr	r3, [sp, #12]
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	dd64      	ble.n	8006d94 <_dtoa_r+0x39c>
 8006cca:	210f      	movs	r1, #15
 8006ccc:	9a03      	ldr	r2, [sp, #12]
 8006cce:	4b2b      	ldr	r3, [pc, #172]	; (8006d7c <_dtoa_r+0x384>)
 8006cd0:	400a      	ands	r2, r1
 8006cd2:	00d2      	lsls	r2, r2, #3
 8006cd4:	189b      	adds	r3, r3, r2
 8006cd6:	681e      	ldr	r6, [r3, #0]
 8006cd8:	685f      	ldr	r7, [r3, #4]
 8006cda:	9b03      	ldr	r3, [sp, #12]
 8006cdc:	2402      	movs	r4, #2
 8006cde:	111d      	asrs	r5, r3, #4
 8006ce0:	05db      	lsls	r3, r3, #23
 8006ce2:	d50a      	bpl.n	8006cfa <_dtoa_r+0x302>
 8006ce4:	4b2a      	ldr	r3, [pc, #168]	; (8006d90 <_dtoa_r+0x398>)
 8006ce6:	400d      	ands	r5, r1
 8006ce8:	6a1a      	ldr	r2, [r3, #32]
 8006cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006cec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006cee:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006cf0:	f7f9 fff2 	bl	8000cd8 <__aeabi_ddiv>
 8006cf4:	9008      	str	r0, [sp, #32]
 8006cf6:	9109      	str	r1, [sp, #36]	; 0x24
 8006cf8:	3401      	adds	r4, #1
 8006cfa:	4b25      	ldr	r3, [pc, #148]	; (8006d90 <_dtoa_r+0x398>)
 8006cfc:	930e      	str	r3, [sp, #56]	; 0x38
 8006cfe:	2d00      	cmp	r5, #0
 8006d00:	d108      	bne.n	8006d14 <_dtoa_r+0x31c>
 8006d02:	9808      	ldr	r0, [sp, #32]
 8006d04:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006d06:	0032      	movs	r2, r6
 8006d08:	003b      	movs	r3, r7
 8006d0a:	f7f9 ffe5 	bl	8000cd8 <__aeabi_ddiv>
 8006d0e:	9008      	str	r0, [sp, #32]
 8006d10:	9109      	str	r1, [sp, #36]	; 0x24
 8006d12:	e05a      	b.n	8006dca <_dtoa_r+0x3d2>
 8006d14:	2301      	movs	r3, #1
 8006d16:	421d      	tst	r5, r3
 8006d18:	d009      	beq.n	8006d2e <_dtoa_r+0x336>
 8006d1a:	18e4      	adds	r4, r4, r3
 8006d1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006d1e:	0030      	movs	r0, r6
 8006d20:	681a      	ldr	r2, [r3, #0]
 8006d22:	685b      	ldr	r3, [r3, #4]
 8006d24:	0039      	movs	r1, r7
 8006d26:	f7fa fbd1 	bl	80014cc <__aeabi_dmul>
 8006d2a:	0006      	movs	r6, r0
 8006d2c:	000f      	movs	r7, r1
 8006d2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006d30:	106d      	asrs	r5, r5, #1
 8006d32:	3308      	adds	r3, #8
 8006d34:	e7e2      	b.n	8006cfc <_dtoa_r+0x304>
 8006d36:	46c0      	nop			; (mov r8, r8)
 8006d38:	0800972e 	.word	0x0800972e
 8006d3c:	08009745 	.word	0x08009745
 8006d40:	7ff00000 	.word	0x7ff00000
 8006d44:	0000270f 	.word	0x0000270f
 8006d48:	0800972a 	.word	0x0800972a
 8006d4c:	0800972d 	.word	0x0800972d
 8006d50:	0800959c 	.word	0x0800959c
 8006d54:	0800959d 	.word	0x0800959d
 8006d58:	3ff00000 	.word	0x3ff00000
 8006d5c:	fffffc01 	.word	0xfffffc01
 8006d60:	3ff80000 	.word	0x3ff80000
 8006d64:	636f4361 	.word	0x636f4361
 8006d68:	3fd287a7 	.word	0x3fd287a7
 8006d6c:	8b60c8b3 	.word	0x8b60c8b3
 8006d70:	3fc68a28 	.word	0x3fc68a28
 8006d74:	509f79fb 	.word	0x509f79fb
 8006d78:	3fd34413 	.word	0x3fd34413
 8006d7c:	080098a0 	.word	0x080098a0
 8006d80:	00000432 	.word	0x00000432
 8006d84:	00000412 	.word	0x00000412
 8006d88:	fe100000 	.word	0xfe100000
 8006d8c:	0800979d 	.word	0x0800979d
 8006d90:	08009878 	.word	0x08009878
 8006d94:	9b03      	ldr	r3, [sp, #12]
 8006d96:	2402      	movs	r4, #2
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	d016      	beq.n	8006dca <_dtoa_r+0x3d2>
 8006d9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006d9e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006da0:	220f      	movs	r2, #15
 8006da2:	425d      	negs	r5, r3
 8006da4:	402a      	ands	r2, r5
 8006da6:	4bdd      	ldr	r3, [pc, #884]	; (800711c <_dtoa_r+0x724>)
 8006da8:	00d2      	lsls	r2, r2, #3
 8006daa:	189b      	adds	r3, r3, r2
 8006dac:	681a      	ldr	r2, [r3, #0]
 8006dae:	685b      	ldr	r3, [r3, #4]
 8006db0:	f7fa fb8c 	bl	80014cc <__aeabi_dmul>
 8006db4:	2701      	movs	r7, #1
 8006db6:	2300      	movs	r3, #0
 8006db8:	9008      	str	r0, [sp, #32]
 8006dba:	9109      	str	r1, [sp, #36]	; 0x24
 8006dbc:	4ed8      	ldr	r6, [pc, #864]	; (8007120 <_dtoa_r+0x728>)
 8006dbe:	112d      	asrs	r5, r5, #4
 8006dc0:	2d00      	cmp	r5, #0
 8006dc2:	d000      	beq.n	8006dc6 <_dtoa_r+0x3ce>
 8006dc4:	e091      	b.n	8006eea <_dtoa_r+0x4f2>
 8006dc6:	2b00      	cmp	r3, #0
 8006dc8:	d1a1      	bne.n	8006d0e <_dtoa_r+0x316>
 8006dca:	9e08      	ldr	r6, [sp, #32]
 8006dcc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8006dce:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d100      	bne.n	8006dd6 <_dtoa_r+0x3de>
 8006dd4:	e094      	b.n	8006f00 <_dtoa_r+0x508>
 8006dd6:	2200      	movs	r2, #0
 8006dd8:	0030      	movs	r0, r6
 8006dda:	0039      	movs	r1, r7
 8006ddc:	4bd1      	ldr	r3, [pc, #836]	; (8007124 <_dtoa_r+0x72c>)
 8006dde:	f7f9 fb3b 	bl	8000458 <__aeabi_dcmplt>
 8006de2:	2800      	cmp	r0, #0
 8006de4:	d100      	bne.n	8006de8 <_dtoa_r+0x3f0>
 8006de6:	e08b      	b.n	8006f00 <_dtoa_r+0x508>
 8006de8:	9b07      	ldr	r3, [sp, #28]
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d100      	bne.n	8006df0 <_dtoa_r+0x3f8>
 8006dee:	e087      	b.n	8006f00 <_dtoa_r+0x508>
 8006df0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	dd45      	ble.n	8006e82 <_dtoa_r+0x48a>
 8006df6:	9b03      	ldr	r3, [sp, #12]
 8006df8:	2200      	movs	r2, #0
 8006dfa:	3b01      	subs	r3, #1
 8006dfc:	930e      	str	r3, [sp, #56]	; 0x38
 8006dfe:	0030      	movs	r0, r6
 8006e00:	4bc9      	ldr	r3, [pc, #804]	; (8007128 <_dtoa_r+0x730>)
 8006e02:	0039      	movs	r1, r7
 8006e04:	f7fa fb62 	bl	80014cc <__aeabi_dmul>
 8006e08:	9008      	str	r0, [sp, #32]
 8006e0a:	9109      	str	r1, [sp, #36]	; 0x24
 8006e0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006e0e:	3401      	adds	r4, #1
 8006e10:	0020      	movs	r0, r4
 8006e12:	9e08      	ldr	r6, [sp, #32]
 8006e14:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8006e16:	9312      	str	r3, [sp, #72]	; 0x48
 8006e18:	f7fb f9f0 	bl	80021fc <__aeabi_i2d>
 8006e1c:	0032      	movs	r2, r6
 8006e1e:	003b      	movs	r3, r7
 8006e20:	f7fa fb54 	bl	80014cc <__aeabi_dmul>
 8006e24:	2200      	movs	r2, #0
 8006e26:	4bc1      	ldr	r3, [pc, #772]	; (800712c <_dtoa_r+0x734>)
 8006e28:	f7f9 fbf6 	bl	8000618 <__aeabi_dadd>
 8006e2c:	4ac0      	ldr	r2, [pc, #768]	; (8007130 <_dtoa_r+0x738>)
 8006e2e:	9014      	str	r0, [sp, #80]	; 0x50
 8006e30:	9115      	str	r1, [sp, #84]	; 0x54
 8006e32:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006e34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8006e36:	4694      	mov	ip, r2
 8006e38:	9308      	str	r3, [sp, #32]
 8006e3a:	9409      	str	r4, [sp, #36]	; 0x24
 8006e3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006e3e:	4463      	add	r3, ip
 8006e40:	9318      	str	r3, [sp, #96]	; 0x60
 8006e42:	9309      	str	r3, [sp, #36]	; 0x24
 8006e44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006e46:	2b00      	cmp	r3, #0
 8006e48:	d15e      	bne.n	8006f08 <_dtoa_r+0x510>
 8006e4a:	2200      	movs	r2, #0
 8006e4c:	4bb9      	ldr	r3, [pc, #740]	; (8007134 <_dtoa_r+0x73c>)
 8006e4e:	0030      	movs	r0, r6
 8006e50:	0039      	movs	r1, r7
 8006e52:	f7fa fdfd 	bl	8001a50 <__aeabi_dsub>
 8006e56:	9a08      	ldr	r2, [sp, #32]
 8006e58:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8006e5a:	0004      	movs	r4, r0
 8006e5c:	000d      	movs	r5, r1
 8006e5e:	f7f9 fb0f 	bl	8000480 <__aeabi_dcmpgt>
 8006e62:	2800      	cmp	r0, #0
 8006e64:	d000      	beq.n	8006e68 <_dtoa_r+0x470>
 8006e66:	e2b3      	b.n	80073d0 <_dtoa_r+0x9d8>
 8006e68:	48b3      	ldr	r0, [pc, #716]	; (8007138 <_dtoa_r+0x740>)
 8006e6a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8006e6c:	4684      	mov	ip, r0
 8006e6e:	4461      	add	r1, ip
 8006e70:	000b      	movs	r3, r1
 8006e72:	0020      	movs	r0, r4
 8006e74:	0029      	movs	r1, r5
 8006e76:	9a08      	ldr	r2, [sp, #32]
 8006e78:	f7f9 faee 	bl	8000458 <__aeabi_dcmplt>
 8006e7c:	2800      	cmp	r0, #0
 8006e7e:	d000      	beq.n	8006e82 <_dtoa_r+0x48a>
 8006e80:	e2a3      	b.n	80073ca <_dtoa_r+0x9d2>
 8006e82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006e84:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8006e86:	9308      	str	r3, [sp, #32]
 8006e88:	9409      	str	r4, [sp, #36]	; 0x24
 8006e8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006e8c:	2b00      	cmp	r3, #0
 8006e8e:	da00      	bge.n	8006e92 <_dtoa_r+0x49a>
 8006e90:	e179      	b.n	8007186 <_dtoa_r+0x78e>
 8006e92:	9a03      	ldr	r2, [sp, #12]
 8006e94:	2a0e      	cmp	r2, #14
 8006e96:	dd00      	ble.n	8006e9a <_dtoa_r+0x4a2>
 8006e98:	e175      	b.n	8007186 <_dtoa_r+0x78e>
 8006e9a:	4ba0      	ldr	r3, [pc, #640]	; (800711c <_dtoa_r+0x724>)
 8006e9c:	00d2      	lsls	r2, r2, #3
 8006e9e:	189b      	adds	r3, r3, r2
 8006ea0:	681e      	ldr	r6, [r3, #0]
 8006ea2:	685f      	ldr	r7, [r3, #4]
 8006ea4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006ea6:	2b00      	cmp	r3, #0
 8006ea8:	db00      	blt.n	8006eac <_dtoa_r+0x4b4>
 8006eaa:	e0e5      	b.n	8007078 <_dtoa_r+0x680>
 8006eac:	9b07      	ldr	r3, [sp, #28]
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	dd00      	ble.n	8006eb4 <_dtoa_r+0x4bc>
 8006eb2:	e0e1      	b.n	8007078 <_dtoa_r+0x680>
 8006eb4:	d000      	beq.n	8006eb8 <_dtoa_r+0x4c0>
 8006eb6:	e288      	b.n	80073ca <_dtoa_r+0x9d2>
 8006eb8:	2200      	movs	r2, #0
 8006eba:	0030      	movs	r0, r6
 8006ebc:	0039      	movs	r1, r7
 8006ebe:	4b9d      	ldr	r3, [pc, #628]	; (8007134 <_dtoa_r+0x73c>)
 8006ec0:	f7fa fb04 	bl	80014cc <__aeabi_dmul>
 8006ec4:	9a08      	ldr	r2, [sp, #32]
 8006ec6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ec8:	f7f9 fae4 	bl	8000494 <__aeabi_dcmpge>
 8006ecc:	9e07      	ldr	r6, [sp, #28]
 8006ece:	0037      	movs	r7, r6
 8006ed0:	2800      	cmp	r0, #0
 8006ed2:	d000      	beq.n	8006ed6 <_dtoa_r+0x4de>
 8006ed4:	e25f      	b.n	8007396 <_dtoa_r+0x99e>
 8006ed6:	9b06      	ldr	r3, [sp, #24]
 8006ed8:	9a06      	ldr	r2, [sp, #24]
 8006eda:	3301      	adds	r3, #1
 8006edc:	9308      	str	r3, [sp, #32]
 8006ede:	2331      	movs	r3, #49	; 0x31
 8006ee0:	7013      	strb	r3, [r2, #0]
 8006ee2:	9b03      	ldr	r3, [sp, #12]
 8006ee4:	3301      	adds	r3, #1
 8006ee6:	9303      	str	r3, [sp, #12]
 8006ee8:	e25a      	b.n	80073a0 <_dtoa_r+0x9a8>
 8006eea:	423d      	tst	r5, r7
 8006eec:	d005      	beq.n	8006efa <_dtoa_r+0x502>
 8006eee:	6832      	ldr	r2, [r6, #0]
 8006ef0:	6873      	ldr	r3, [r6, #4]
 8006ef2:	f7fa faeb 	bl	80014cc <__aeabi_dmul>
 8006ef6:	003b      	movs	r3, r7
 8006ef8:	3401      	adds	r4, #1
 8006efa:	106d      	asrs	r5, r5, #1
 8006efc:	3608      	adds	r6, #8
 8006efe:	e75f      	b.n	8006dc0 <_dtoa_r+0x3c8>
 8006f00:	9b03      	ldr	r3, [sp, #12]
 8006f02:	930e      	str	r3, [sp, #56]	; 0x38
 8006f04:	9b07      	ldr	r3, [sp, #28]
 8006f06:	e783      	b.n	8006e10 <_dtoa_r+0x418>
 8006f08:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006f0a:	4b84      	ldr	r3, [pc, #528]	; (800711c <_dtoa_r+0x724>)
 8006f0c:	3a01      	subs	r2, #1
 8006f0e:	00d2      	lsls	r2, r2, #3
 8006f10:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006f12:	189b      	adds	r3, r3, r2
 8006f14:	9c08      	ldr	r4, [sp, #32]
 8006f16:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006f18:	681a      	ldr	r2, [r3, #0]
 8006f1a:	685b      	ldr	r3, [r3, #4]
 8006f1c:	2900      	cmp	r1, #0
 8006f1e:	d051      	beq.n	8006fc4 <_dtoa_r+0x5cc>
 8006f20:	2000      	movs	r0, #0
 8006f22:	4986      	ldr	r1, [pc, #536]	; (800713c <_dtoa_r+0x744>)
 8006f24:	f7f9 fed8 	bl	8000cd8 <__aeabi_ddiv>
 8006f28:	0022      	movs	r2, r4
 8006f2a:	002b      	movs	r3, r5
 8006f2c:	f7fa fd90 	bl	8001a50 <__aeabi_dsub>
 8006f30:	9a06      	ldr	r2, [sp, #24]
 8006f32:	0004      	movs	r4, r0
 8006f34:	4694      	mov	ip, r2
 8006f36:	000d      	movs	r5, r1
 8006f38:	9b06      	ldr	r3, [sp, #24]
 8006f3a:	9314      	str	r3, [sp, #80]	; 0x50
 8006f3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006f3e:	4463      	add	r3, ip
 8006f40:	9318      	str	r3, [sp, #96]	; 0x60
 8006f42:	0039      	movs	r1, r7
 8006f44:	0030      	movs	r0, r6
 8006f46:	f7fb f923 	bl	8002190 <__aeabi_d2iz>
 8006f4a:	9012      	str	r0, [sp, #72]	; 0x48
 8006f4c:	f7fb f956 	bl	80021fc <__aeabi_i2d>
 8006f50:	0002      	movs	r2, r0
 8006f52:	000b      	movs	r3, r1
 8006f54:	0030      	movs	r0, r6
 8006f56:	0039      	movs	r1, r7
 8006f58:	f7fa fd7a 	bl	8001a50 <__aeabi_dsub>
 8006f5c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006f5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006f60:	3301      	adds	r3, #1
 8006f62:	9308      	str	r3, [sp, #32]
 8006f64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006f66:	0006      	movs	r6, r0
 8006f68:	3330      	adds	r3, #48	; 0x30
 8006f6a:	7013      	strb	r3, [r2, #0]
 8006f6c:	0022      	movs	r2, r4
 8006f6e:	002b      	movs	r3, r5
 8006f70:	000f      	movs	r7, r1
 8006f72:	f7f9 fa71 	bl	8000458 <__aeabi_dcmplt>
 8006f76:	2800      	cmp	r0, #0
 8006f78:	d174      	bne.n	8007064 <_dtoa_r+0x66c>
 8006f7a:	0032      	movs	r2, r6
 8006f7c:	003b      	movs	r3, r7
 8006f7e:	2000      	movs	r0, #0
 8006f80:	4968      	ldr	r1, [pc, #416]	; (8007124 <_dtoa_r+0x72c>)
 8006f82:	f7fa fd65 	bl	8001a50 <__aeabi_dsub>
 8006f86:	0022      	movs	r2, r4
 8006f88:	002b      	movs	r3, r5
 8006f8a:	f7f9 fa65 	bl	8000458 <__aeabi_dcmplt>
 8006f8e:	2800      	cmp	r0, #0
 8006f90:	d000      	beq.n	8006f94 <_dtoa_r+0x59c>
 8006f92:	e0d7      	b.n	8007144 <_dtoa_r+0x74c>
 8006f94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8006f96:	9a08      	ldr	r2, [sp, #32]
 8006f98:	4293      	cmp	r3, r2
 8006f9a:	d100      	bne.n	8006f9e <_dtoa_r+0x5a6>
 8006f9c:	e771      	b.n	8006e82 <_dtoa_r+0x48a>
 8006f9e:	2200      	movs	r2, #0
 8006fa0:	0020      	movs	r0, r4
 8006fa2:	0029      	movs	r1, r5
 8006fa4:	4b60      	ldr	r3, [pc, #384]	; (8007128 <_dtoa_r+0x730>)
 8006fa6:	f7fa fa91 	bl	80014cc <__aeabi_dmul>
 8006faa:	4b5f      	ldr	r3, [pc, #380]	; (8007128 <_dtoa_r+0x730>)
 8006fac:	0004      	movs	r4, r0
 8006fae:	000d      	movs	r5, r1
 8006fb0:	0030      	movs	r0, r6
 8006fb2:	0039      	movs	r1, r7
 8006fb4:	2200      	movs	r2, #0
 8006fb6:	f7fa fa89 	bl	80014cc <__aeabi_dmul>
 8006fba:	9b08      	ldr	r3, [sp, #32]
 8006fbc:	0006      	movs	r6, r0
 8006fbe:	000f      	movs	r7, r1
 8006fc0:	9314      	str	r3, [sp, #80]	; 0x50
 8006fc2:	e7be      	b.n	8006f42 <_dtoa_r+0x54a>
 8006fc4:	0020      	movs	r0, r4
 8006fc6:	0029      	movs	r1, r5
 8006fc8:	f7fa fa80 	bl	80014cc <__aeabi_dmul>
 8006fcc:	9a06      	ldr	r2, [sp, #24]
 8006fce:	9b06      	ldr	r3, [sp, #24]
 8006fd0:	4694      	mov	ip, r2
 8006fd2:	9308      	str	r3, [sp, #32]
 8006fd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006fd6:	9014      	str	r0, [sp, #80]	; 0x50
 8006fd8:	9115      	str	r1, [sp, #84]	; 0x54
 8006fda:	4463      	add	r3, ip
 8006fdc:	9319      	str	r3, [sp, #100]	; 0x64
 8006fde:	0030      	movs	r0, r6
 8006fe0:	0039      	movs	r1, r7
 8006fe2:	f7fb f8d5 	bl	8002190 <__aeabi_d2iz>
 8006fe6:	9018      	str	r0, [sp, #96]	; 0x60
 8006fe8:	f7fb f908 	bl	80021fc <__aeabi_i2d>
 8006fec:	0002      	movs	r2, r0
 8006fee:	000b      	movs	r3, r1
 8006ff0:	0030      	movs	r0, r6
 8006ff2:	0039      	movs	r1, r7
 8006ff4:	f7fa fd2c 	bl	8001a50 <__aeabi_dsub>
 8006ff8:	9e18      	ldr	r6, [sp, #96]	; 0x60
 8006ffa:	9b08      	ldr	r3, [sp, #32]
 8006ffc:	3630      	adds	r6, #48	; 0x30
 8006ffe:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8007000:	701e      	strb	r6, [r3, #0]
 8007002:	3301      	adds	r3, #1
 8007004:	0004      	movs	r4, r0
 8007006:	000d      	movs	r5, r1
 8007008:	9308      	str	r3, [sp, #32]
 800700a:	4293      	cmp	r3, r2
 800700c:	d12d      	bne.n	800706a <_dtoa_r+0x672>
 800700e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8007010:	9915      	ldr	r1, [sp, #84]	; 0x54
 8007012:	9a06      	ldr	r2, [sp, #24]
 8007014:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007016:	4694      	mov	ip, r2
 8007018:	4463      	add	r3, ip
 800701a:	2200      	movs	r2, #0
 800701c:	9308      	str	r3, [sp, #32]
 800701e:	4b47      	ldr	r3, [pc, #284]	; (800713c <_dtoa_r+0x744>)
 8007020:	f7f9 fafa 	bl	8000618 <__aeabi_dadd>
 8007024:	0002      	movs	r2, r0
 8007026:	000b      	movs	r3, r1
 8007028:	0020      	movs	r0, r4
 800702a:	0029      	movs	r1, r5
 800702c:	f7f9 fa28 	bl	8000480 <__aeabi_dcmpgt>
 8007030:	2800      	cmp	r0, #0
 8007032:	d000      	beq.n	8007036 <_dtoa_r+0x63e>
 8007034:	e086      	b.n	8007144 <_dtoa_r+0x74c>
 8007036:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007038:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800703a:	2000      	movs	r0, #0
 800703c:	493f      	ldr	r1, [pc, #252]	; (800713c <_dtoa_r+0x744>)
 800703e:	f7fa fd07 	bl	8001a50 <__aeabi_dsub>
 8007042:	0002      	movs	r2, r0
 8007044:	000b      	movs	r3, r1
 8007046:	0020      	movs	r0, r4
 8007048:	0029      	movs	r1, r5
 800704a:	f7f9 fa05 	bl	8000458 <__aeabi_dcmplt>
 800704e:	2800      	cmp	r0, #0
 8007050:	d100      	bne.n	8007054 <_dtoa_r+0x65c>
 8007052:	e716      	b.n	8006e82 <_dtoa_r+0x48a>
 8007054:	9b08      	ldr	r3, [sp, #32]
 8007056:	001a      	movs	r2, r3
 8007058:	3a01      	subs	r2, #1
 800705a:	9208      	str	r2, [sp, #32]
 800705c:	7812      	ldrb	r2, [r2, #0]
 800705e:	2a30      	cmp	r2, #48	; 0x30
 8007060:	d0f8      	beq.n	8007054 <_dtoa_r+0x65c>
 8007062:	9308      	str	r3, [sp, #32]
 8007064:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007066:	9303      	str	r3, [sp, #12]
 8007068:	e046      	b.n	80070f8 <_dtoa_r+0x700>
 800706a:	2200      	movs	r2, #0
 800706c:	4b2e      	ldr	r3, [pc, #184]	; (8007128 <_dtoa_r+0x730>)
 800706e:	f7fa fa2d 	bl	80014cc <__aeabi_dmul>
 8007072:	0006      	movs	r6, r0
 8007074:	000f      	movs	r7, r1
 8007076:	e7b2      	b.n	8006fde <_dtoa_r+0x5e6>
 8007078:	9b06      	ldr	r3, [sp, #24]
 800707a:	9a06      	ldr	r2, [sp, #24]
 800707c:	930a      	str	r3, [sp, #40]	; 0x28
 800707e:	9b07      	ldr	r3, [sp, #28]
 8007080:	9c08      	ldr	r4, [sp, #32]
 8007082:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007084:	3b01      	subs	r3, #1
 8007086:	189b      	adds	r3, r3, r2
 8007088:	930b      	str	r3, [sp, #44]	; 0x2c
 800708a:	0032      	movs	r2, r6
 800708c:	003b      	movs	r3, r7
 800708e:	0020      	movs	r0, r4
 8007090:	0029      	movs	r1, r5
 8007092:	f7f9 fe21 	bl	8000cd8 <__aeabi_ddiv>
 8007096:	f7fb f87b 	bl	8002190 <__aeabi_d2iz>
 800709a:	9007      	str	r0, [sp, #28]
 800709c:	f7fb f8ae 	bl	80021fc <__aeabi_i2d>
 80070a0:	0032      	movs	r2, r6
 80070a2:	003b      	movs	r3, r7
 80070a4:	f7fa fa12 	bl	80014cc <__aeabi_dmul>
 80070a8:	0002      	movs	r2, r0
 80070aa:	000b      	movs	r3, r1
 80070ac:	0020      	movs	r0, r4
 80070ae:	0029      	movs	r1, r5
 80070b0:	f7fa fcce 	bl	8001a50 <__aeabi_dsub>
 80070b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80070b6:	001a      	movs	r2, r3
 80070b8:	3201      	adds	r2, #1
 80070ba:	920a      	str	r2, [sp, #40]	; 0x28
 80070bc:	9208      	str	r2, [sp, #32]
 80070be:	9a07      	ldr	r2, [sp, #28]
 80070c0:	3230      	adds	r2, #48	; 0x30
 80070c2:	701a      	strb	r2, [r3, #0]
 80070c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80070c6:	429a      	cmp	r2, r3
 80070c8:	d14f      	bne.n	800716a <_dtoa_r+0x772>
 80070ca:	0002      	movs	r2, r0
 80070cc:	000b      	movs	r3, r1
 80070ce:	f7f9 faa3 	bl	8000618 <__aeabi_dadd>
 80070d2:	0032      	movs	r2, r6
 80070d4:	003b      	movs	r3, r7
 80070d6:	0004      	movs	r4, r0
 80070d8:	000d      	movs	r5, r1
 80070da:	f7f9 f9d1 	bl	8000480 <__aeabi_dcmpgt>
 80070de:	2800      	cmp	r0, #0
 80070e0:	d12e      	bne.n	8007140 <_dtoa_r+0x748>
 80070e2:	0032      	movs	r2, r6
 80070e4:	003b      	movs	r3, r7
 80070e6:	0020      	movs	r0, r4
 80070e8:	0029      	movs	r1, r5
 80070ea:	f7f9 f9af 	bl	800044c <__aeabi_dcmpeq>
 80070ee:	2800      	cmp	r0, #0
 80070f0:	d002      	beq.n	80070f8 <_dtoa_r+0x700>
 80070f2:	9b07      	ldr	r3, [sp, #28]
 80070f4:	07de      	lsls	r6, r3, #31
 80070f6:	d423      	bmi.n	8007140 <_dtoa_r+0x748>
 80070f8:	9905      	ldr	r1, [sp, #20]
 80070fa:	9804      	ldr	r0, [sp, #16]
 80070fc:	f001 f912 	bl	8008324 <_Bfree>
 8007100:	2300      	movs	r3, #0
 8007102:	9a08      	ldr	r2, [sp, #32]
 8007104:	7013      	strb	r3, [r2, #0]
 8007106:	9b03      	ldr	r3, [sp, #12]
 8007108:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800710a:	3301      	adds	r3, #1
 800710c:	6013      	str	r3, [r2, #0]
 800710e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007110:	2b00      	cmp	r3, #0
 8007112:	d100      	bne.n	8007116 <_dtoa_r+0x71e>
 8007114:	e4ba      	b.n	8006a8c <_dtoa_r+0x94>
 8007116:	9a08      	ldr	r2, [sp, #32]
 8007118:	601a      	str	r2, [r3, #0]
 800711a:	e4b7      	b.n	8006a8c <_dtoa_r+0x94>
 800711c:	080098a0 	.word	0x080098a0
 8007120:	08009878 	.word	0x08009878
 8007124:	3ff00000 	.word	0x3ff00000
 8007128:	40240000 	.word	0x40240000
 800712c:	401c0000 	.word	0x401c0000
 8007130:	fcc00000 	.word	0xfcc00000
 8007134:	40140000 	.word	0x40140000
 8007138:	7cc00000 	.word	0x7cc00000
 800713c:	3fe00000 	.word	0x3fe00000
 8007140:	9b03      	ldr	r3, [sp, #12]
 8007142:	930e      	str	r3, [sp, #56]	; 0x38
 8007144:	9b08      	ldr	r3, [sp, #32]
 8007146:	9308      	str	r3, [sp, #32]
 8007148:	3b01      	subs	r3, #1
 800714a:	781a      	ldrb	r2, [r3, #0]
 800714c:	2a39      	cmp	r2, #57	; 0x39
 800714e:	d108      	bne.n	8007162 <_dtoa_r+0x76a>
 8007150:	9a06      	ldr	r2, [sp, #24]
 8007152:	429a      	cmp	r2, r3
 8007154:	d1f7      	bne.n	8007146 <_dtoa_r+0x74e>
 8007156:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007158:	9906      	ldr	r1, [sp, #24]
 800715a:	3201      	adds	r2, #1
 800715c:	920e      	str	r2, [sp, #56]	; 0x38
 800715e:	2230      	movs	r2, #48	; 0x30
 8007160:	700a      	strb	r2, [r1, #0]
 8007162:	781a      	ldrb	r2, [r3, #0]
 8007164:	3201      	adds	r2, #1
 8007166:	701a      	strb	r2, [r3, #0]
 8007168:	e77c      	b.n	8007064 <_dtoa_r+0x66c>
 800716a:	2200      	movs	r2, #0
 800716c:	4ba9      	ldr	r3, [pc, #676]	; (8007414 <_dtoa_r+0xa1c>)
 800716e:	f7fa f9ad 	bl	80014cc <__aeabi_dmul>
 8007172:	2200      	movs	r2, #0
 8007174:	2300      	movs	r3, #0
 8007176:	0004      	movs	r4, r0
 8007178:	000d      	movs	r5, r1
 800717a:	f7f9 f967 	bl	800044c <__aeabi_dcmpeq>
 800717e:	2800      	cmp	r0, #0
 8007180:	d100      	bne.n	8007184 <_dtoa_r+0x78c>
 8007182:	e782      	b.n	800708a <_dtoa_r+0x692>
 8007184:	e7b8      	b.n	80070f8 <_dtoa_r+0x700>
 8007186:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8007188:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800718a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800718c:	2f00      	cmp	r7, #0
 800718e:	d012      	beq.n	80071b6 <_dtoa_r+0x7be>
 8007190:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007192:	2a01      	cmp	r2, #1
 8007194:	dc6e      	bgt.n	8007274 <_dtoa_r+0x87c>
 8007196:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8007198:	2a00      	cmp	r2, #0
 800719a:	d065      	beq.n	8007268 <_dtoa_r+0x870>
 800719c:	4a9e      	ldr	r2, [pc, #632]	; (8007418 <_dtoa_r+0xa20>)
 800719e:	189b      	adds	r3, r3, r2
 80071a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80071a2:	2101      	movs	r1, #1
 80071a4:	18d2      	adds	r2, r2, r3
 80071a6:	920a      	str	r2, [sp, #40]	; 0x28
 80071a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80071aa:	9804      	ldr	r0, [sp, #16]
 80071ac:	18d3      	adds	r3, r2, r3
 80071ae:	930c      	str	r3, [sp, #48]	; 0x30
 80071b0:	f001 f9b4 	bl	800851c <__i2b>
 80071b4:	0007      	movs	r7, r0
 80071b6:	2c00      	cmp	r4, #0
 80071b8:	d00e      	beq.n	80071d8 <_dtoa_r+0x7e0>
 80071ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80071bc:	2b00      	cmp	r3, #0
 80071be:	dd0b      	ble.n	80071d8 <_dtoa_r+0x7e0>
 80071c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80071c2:	0023      	movs	r3, r4
 80071c4:	4294      	cmp	r4, r2
 80071c6:	dd00      	ble.n	80071ca <_dtoa_r+0x7d2>
 80071c8:	0013      	movs	r3, r2
 80071ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80071cc:	1ae4      	subs	r4, r4, r3
 80071ce:	1ad2      	subs	r2, r2, r3
 80071d0:	920a      	str	r2, [sp, #40]	; 0x28
 80071d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80071d4:	1ad3      	subs	r3, r2, r3
 80071d6:	930c      	str	r3, [sp, #48]	; 0x30
 80071d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80071da:	2b00      	cmp	r3, #0
 80071dc:	d01e      	beq.n	800721c <_dtoa_r+0x824>
 80071de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80071e0:	2b00      	cmp	r3, #0
 80071e2:	d05c      	beq.n	800729e <_dtoa_r+0x8a6>
 80071e4:	2d00      	cmp	r5, #0
 80071e6:	dd10      	ble.n	800720a <_dtoa_r+0x812>
 80071e8:	0039      	movs	r1, r7
 80071ea:	002a      	movs	r2, r5
 80071ec:	9804      	ldr	r0, [sp, #16]
 80071ee:	f001 fa5d 	bl	80086ac <__pow5mult>
 80071f2:	9a05      	ldr	r2, [sp, #20]
 80071f4:	0001      	movs	r1, r0
 80071f6:	0007      	movs	r7, r0
 80071f8:	9804      	ldr	r0, [sp, #16]
 80071fa:	f001 f9a7 	bl	800854c <__multiply>
 80071fe:	0006      	movs	r6, r0
 8007200:	9905      	ldr	r1, [sp, #20]
 8007202:	9804      	ldr	r0, [sp, #16]
 8007204:	f001 f88e 	bl	8008324 <_Bfree>
 8007208:	9605      	str	r6, [sp, #20]
 800720a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800720c:	1b5a      	subs	r2, r3, r5
 800720e:	42ab      	cmp	r3, r5
 8007210:	d004      	beq.n	800721c <_dtoa_r+0x824>
 8007212:	9905      	ldr	r1, [sp, #20]
 8007214:	9804      	ldr	r0, [sp, #16]
 8007216:	f001 fa49 	bl	80086ac <__pow5mult>
 800721a:	9005      	str	r0, [sp, #20]
 800721c:	2101      	movs	r1, #1
 800721e:	9804      	ldr	r0, [sp, #16]
 8007220:	f001 f97c 	bl	800851c <__i2b>
 8007224:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007226:	0006      	movs	r6, r0
 8007228:	2b00      	cmp	r3, #0
 800722a:	dd3a      	ble.n	80072a2 <_dtoa_r+0x8aa>
 800722c:	001a      	movs	r2, r3
 800722e:	0001      	movs	r1, r0
 8007230:	9804      	ldr	r0, [sp, #16]
 8007232:	f001 fa3b 	bl	80086ac <__pow5mult>
 8007236:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007238:	0006      	movs	r6, r0
 800723a:	2500      	movs	r5, #0
 800723c:	2b01      	cmp	r3, #1
 800723e:	dc38      	bgt.n	80072b2 <_dtoa_r+0x8ba>
 8007240:	2500      	movs	r5, #0
 8007242:	9b08      	ldr	r3, [sp, #32]
 8007244:	42ab      	cmp	r3, r5
 8007246:	d130      	bne.n	80072aa <_dtoa_r+0x8b2>
 8007248:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800724a:	031b      	lsls	r3, r3, #12
 800724c:	42ab      	cmp	r3, r5
 800724e:	d12c      	bne.n	80072aa <_dtoa_r+0x8b2>
 8007250:	4b72      	ldr	r3, [pc, #456]	; (800741c <_dtoa_r+0xa24>)
 8007252:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007254:	4213      	tst	r3, r2
 8007256:	d028      	beq.n	80072aa <_dtoa_r+0x8b2>
 8007258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800725a:	3501      	adds	r5, #1
 800725c:	3301      	adds	r3, #1
 800725e:	930a      	str	r3, [sp, #40]	; 0x28
 8007260:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007262:	3301      	adds	r3, #1
 8007264:	930c      	str	r3, [sp, #48]	; 0x30
 8007266:	e020      	b.n	80072aa <_dtoa_r+0x8b2>
 8007268:	2336      	movs	r3, #54	; 0x36
 800726a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800726c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800726e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007270:	1a9b      	subs	r3, r3, r2
 8007272:	e795      	b.n	80071a0 <_dtoa_r+0x7a8>
 8007274:	9b07      	ldr	r3, [sp, #28]
 8007276:	1e5d      	subs	r5, r3, #1
 8007278:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800727a:	42ab      	cmp	r3, r5
 800727c:	db07      	blt.n	800728e <_dtoa_r+0x896>
 800727e:	1b5d      	subs	r5, r3, r5
 8007280:	9b07      	ldr	r3, [sp, #28]
 8007282:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007284:	2b00      	cmp	r3, #0
 8007286:	da8b      	bge.n	80071a0 <_dtoa_r+0x7a8>
 8007288:	1ae4      	subs	r4, r4, r3
 800728a:	2300      	movs	r3, #0
 800728c:	e788      	b.n	80071a0 <_dtoa_r+0x7a8>
 800728e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007290:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8007292:	1aeb      	subs	r3, r5, r3
 8007294:	18d3      	adds	r3, r2, r3
 8007296:	950d      	str	r5, [sp, #52]	; 0x34
 8007298:	9313      	str	r3, [sp, #76]	; 0x4c
 800729a:	2500      	movs	r5, #0
 800729c:	e7f0      	b.n	8007280 <_dtoa_r+0x888>
 800729e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80072a0:	e7b7      	b.n	8007212 <_dtoa_r+0x81a>
 80072a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80072a4:	2500      	movs	r5, #0
 80072a6:	2b01      	cmp	r3, #1
 80072a8:	ddca      	ble.n	8007240 <_dtoa_r+0x848>
 80072aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80072ac:	2001      	movs	r0, #1
 80072ae:	2b00      	cmp	r3, #0
 80072b0:	d008      	beq.n	80072c4 <_dtoa_r+0x8cc>
 80072b2:	6933      	ldr	r3, [r6, #16]
 80072b4:	3303      	adds	r3, #3
 80072b6:	009b      	lsls	r3, r3, #2
 80072b8:	18f3      	adds	r3, r6, r3
 80072ba:	6858      	ldr	r0, [r3, #4]
 80072bc:	f001 f8e6 	bl	800848c <__hi0bits>
 80072c0:	2320      	movs	r3, #32
 80072c2:	1a18      	subs	r0, r3, r0
 80072c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80072c6:	1818      	adds	r0, r3, r0
 80072c8:	0002      	movs	r2, r0
 80072ca:	231f      	movs	r3, #31
 80072cc:	401a      	ands	r2, r3
 80072ce:	4218      	tst	r0, r3
 80072d0:	d047      	beq.n	8007362 <_dtoa_r+0x96a>
 80072d2:	3301      	adds	r3, #1
 80072d4:	1a9b      	subs	r3, r3, r2
 80072d6:	2b04      	cmp	r3, #4
 80072d8:	dd3f      	ble.n	800735a <_dtoa_r+0x962>
 80072da:	231c      	movs	r3, #28
 80072dc:	1a9b      	subs	r3, r3, r2
 80072de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80072e0:	18e4      	adds	r4, r4, r3
 80072e2:	18d2      	adds	r2, r2, r3
 80072e4:	920a      	str	r2, [sp, #40]	; 0x28
 80072e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80072e8:	18d3      	adds	r3, r2, r3
 80072ea:	930c      	str	r3, [sp, #48]	; 0x30
 80072ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80072ee:	2b00      	cmp	r3, #0
 80072f0:	dd05      	ble.n	80072fe <_dtoa_r+0x906>
 80072f2:	001a      	movs	r2, r3
 80072f4:	9905      	ldr	r1, [sp, #20]
 80072f6:	9804      	ldr	r0, [sp, #16]
 80072f8:	f001 fa34 	bl	8008764 <__lshift>
 80072fc:	9005      	str	r0, [sp, #20]
 80072fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007300:	2b00      	cmp	r3, #0
 8007302:	dd05      	ble.n	8007310 <_dtoa_r+0x918>
 8007304:	0031      	movs	r1, r6
 8007306:	001a      	movs	r2, r3
 8007308:	9804      	ldr	r0, [sp, #16]
 800730a:	f001 fa2b 	bl	8008764 <__lshift>
 800730e:	0006      	movs	r6, r0
 8007310:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007312:	2b00      	cmp	r3, #0
 8007314:	d027      	beq.n	8007366 <_dtoa_r+0x96e>
 8007316:	0031      	movs	r1, r6
 8007318:	9805      	ldr	r0, [sp, #20]
 800731a:	f001 fa91 	bl	8008840 <__mcmp>
 800731e:	2800      	cmp	r0, #0
 8007320:	da21      	bge.n	8007366 <_dtoa_r+0x96e>
 8007322:	9b03      	ldr	r3, [sp, #12]
 8007324:	220a      	movs	r2, #10
 8007326:	3b01      	subs	r3, #1
 8007328:	9303      	str	r3, [sp, #12]
 800732a:	9905      	ldr	r1, [sp, #20]
 800732c:	2300      	movs	r3, #0
 800732e:	9804      	ldr	r0, [sp, #16]
 8007330:	f001 f81c 	bl	800836c <__multadd>
 8007334:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007336:	9005      	str	r0, [sp, #20]
 8007338:	2b00      	cmp	r3, #0
 800733a:	d100      	bne.n	800733e <_dtoa_r+0x946>
 800733c:	e15d      	b.n	80075fa <_dtoa_r+0xc02>
 800733e:	2300      	movs	r3, #0
 8007340:	0039      	movs	r1, r7
 8007342:	220a      	movs	r2, #10
 8007344:	9804      	ldr	r0, [sp, #16]
 8007346:	f001 f811 	bl	800836c <__multadd>
 800734a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800734c:	0007      	movs	r7, r0
 800734e:	2b00      	cmp	r3, #0
 8007350:	dc49      	bgt.n	80073e6 <_dtoa_r+0x9ee>
 8007352:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007354:	2b02      	cmp	r3, #2
 8007356:	dc0e      	bgt.n	8007376 <_dtoa_r+0x97e>
 8007358:	e045      	b.n	80073e6 <_dtoa_r+0x9ee>
 800735a:	2b04      	cmp	r3, #4
 800735c:	d0c6      	beq.n	80072ec <_dtoa_r+0x8f4>
 800735e:	331c      	adds	r3, #28
 8007360:	e7bd      	b.n	80072de <_dtoa_r+0x8e6>
 8007362:	0013      	movs	r3, r2
 8007364:	e7fb      	b.n	800735e <_dtoa_r+0x966>
 8007366:	9b07      	ldr	r3, [sp, #28]
 8007368:	2b00      	cmp	r3, #0
 800736a:	dc36      	bgt.n	80073da <_dtoa_r+0x9e2>
 800736c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800736e:	2b02      	cmp	r3, #2
 8007370:	dd33      	ble.n	80073da <_dtoa_r+0x9e2>
 8007372:	9b07      	ldr	r3, [sp, #28]
 8007374:	930b      	str	r3, [sp, #44]	; 0x2c
 8007376:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007378:	2b00      	cmp	r3, #0
 800737a:	d10c      	bne.n	8007396 <_dtoa_r+0x99e>
 800737c:	0031      	movs	r1, r6
 800737e:	2205      	movs	r2, #5
 8007380:	9804      	ldr	r0, [sp, #16]
 8007382:	f000 fff3 	bl	800836c <__multadd>
 8007386:	0006      	movs	r6, r0
 8007388:	0001      	movs	r1, r0
 800738a:	9805      	ldr	r0, [sp, #20]
 800738c:	f001 fa58 	bl	8008840 <__mcmp>
 8007390:	2800      	cmp	r0, #0
 8007392:	dd00      	ble.n	8007396 <_dtoa_r+0x99e>
 8007394:	e59f      	b.n	8006ed6 <_dtoa_r+0x4de>
 8007396:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007398:	43db      	mvns	r3, r3
 800739a:	9303      	str	r3, [sp, #12]
 800739c:	9b06      	ldr	r3, [sp, #24]
 800739e:	9308      	str	r3, [sp, #32]
 80073a0:	2500      	movs	r5, #0
 80073a2:	0031      	movs	r1, r6
 80073a4:	9804      	ldr	r0, [sp, #16]
 80073a6:	f000 ffbd 	bl	8008324 <_Bfree>
 80073aa:	2f00      	cmp	r7, #0
 80073ac:	d100      	bne.n	80073b0 <_dtoa_r+0x9b8>
 80073ae:	e6a3      	b.n	80070f8 <_dtoa_r+0x700>
 80073b0:	2d00      	cmp	r5, #0
 80073b2:	d005      	beq.n	80073c0 <_dtoa_r+0x9c8>
 80073b4:	42bd      	cmp	r5, r7
 80073b6:	d003      	beq.n	80073c0 <_dtoa_r+0x9c8>
 80073b8:	0029      	movs	r1, r5
 80073ba:	9804      	ldr	r0, [sp, #16]
 80073bc:	f000 ffb2 	bl	8008324 <_Bfree>
 80073c0:	0039      	movs	r1, r7
 80073c2:	9804      	ldr	r0, [sp, #16]
 80073c4:	f000 ffae 	bl	8008324 <_Bfree>
 80073c8:	e696      	b.n	80070f8 <_dtoa_r+0x700>
 80073ca:	2600      	movs	r6, #0
 80073cc:	0037      	movs	r7, r6
 80073ce:	e7e2      	b.n	8007396 <_dtoa_r+0x99e>
 80073d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80073d2:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80073d4:	9303      	str	r3, [sp, #12]
 80073d6:	0037      	movs	r7, r6
 80073d8:	e57d      	b.n	8006ed6 <_dtoa_r+0x4de>
 80073da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d100      	bne.n	80073e2 <_dtoa_r+0x9ea>
 80073e0:	e0c3      	b.n	800756a <_dtoa_r+0xb72>
 80073e2:	9b07      	ldr	r3, [sp, #28]
 80073e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80073e6:	2c00      	cmp	r4, #0
 80073e8:	dd05      	ble.n	80073f6 <_dtoa_r+0x9fe>
 80073ea:	0039      	movs	r1, r7
 80073ec:	0022      	movs	r2, r4
 80073ee:	9804      	ldr	r0, [sp, #16]
 80073f0:	f001 f9b8 	bl	8008764 <__lshift>
 80073f4:	0007      	movs	r7, r0
 80073f6:	0038      	movs	r0, r7
 80073f8:	2d00      	cmp	r5, #0
 80073fa:	d024      	beq.n	8007446 <_dtoa_r+0xa4e>
 80073fc:	6879      	ldr	r1, [r7, #4]
 80073fe:	9804      	ldr	r0, [sp, #16]
 8007400:	f000 ff4c 	bl	800829c <_Balloc>
 8007404:	1e04      	subs	r4, r0, #0
 8007406:	d111      	bne.n	800742c <_dtoa_r+0xa34>
 8007408:	0022      	movs	r2, r4
 800740a:	4b05      	ldr	r3, [pc, #20]	; (8007420 <_dtoa_r+0xa28>)
 800740c:	4805      	ldr	r0, [pc, #20]	; (8007424 <_dtoa_r+0xa2c>)
 800740e:	4906      	ldr	r1, [pc, #24]	; (8007428 <_dtoa_r+0xa30>)
 8007410:	f7ff fb07 	bl	8006a22 <_dtoa_r+0x2a>
 8007414:	40240000 	.word	0x40240000
 8007418:	00000433 	.word	0x00000433
 800741c:	7ff00000 	.word	0x7ff00000
 8007420:	0800979d 	.word	0x0800979d
 8007424:	08009745 	.word	0x08009745
 8007428:	000002ef 	.word	0x000002ef
 800742c:	0039      	movs	r1, r7
 800742e:	693a      	ldr	r2, [r7, #16]
 8007430:	310c      	adds	r1, #12
 8007432:	3202      	adds	r2, #2
 8007434:	0092      	lsls	r2, r2, #2
 8007436:	300c      	adds	r0, #12
 8007438:	f7ff fa3b 	bl	80068b2 <memcpy>
 800743c:	2201      	movs	r2, #1
 800743e:	0021      	movs	r1, r4
 8007440:	9804      	ldr	r0, [sp, #16]
 8007442:	f001 f98f 	bl	8008764 <__lshift>
 8007446:	9b06      	ldr	r3, [sp, #24]
 8007448:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800744a:	9307      	str	r3, [sp, #28]
 800744c:	3b01      	subs	r3, #1
 800744e:	189b      	adds	r3, r3, r2
 8007450:	2201      	movs	r2, #1
 8007452:	003d      	movs	r5, r7
 8007454:	0007      	movs	r7, r0
 8007456:	930e      	str	r3, [sp, #56]	; 0x38
 8007458:	9b08      	ldr	r3, [sp, #32]
 800745a:	4013      	ands	r3, r2
 800745c:	930d      	str	r3, [sp, #52]	; 0x34
 800745e:	0031      	movs	r1, r6
 8007460:	9805      	ldr	r0, [sp, #20]
 8007462:	f7ff fa39 	bl	80068d8 <quorem>
 8007466:	0029      	movs	r1, r5
 8007468:	0004      	movs	r4, r0
 800746a:	900b      	str	r0, [sp, #44]	; 0x2c
 800746c:	9805      	ldr	r0, [sp, #20]
 800746e:	f001 f9e7 	bl	8008840 <__mcmp>
 8007472:	003a      	movs	r2, r7
 8007474:	900c      	str	r0, [sp, #48]	; 0x30
 8007476:	0031      	movs	r1, r6
 8007478:	9804      	ldr	r0, [sp, #16]
 800747a:	f001 f9fd 	bl	8008878 <__mdiff>
 800747e:	2201      	movs	r2, #1
 8007480:	68c3      	ldr	r3, [r0, #12]
 8007482:	3430      	adds	r4, #48	; 0x30
 8007484:	9008      	str	r0, [sp, #32]
 8007486:	920a      	str	r2, [sp, #40]	; 0x28
 8007488:	2b00      	cmp	r3, #0
 800748a:	d104      	bne.n	8007496 <_dtoa_r+0xa9e>
 800748c:	0001      	movs	r1, r0
 800748e:	9805      	ldr	r0, [sp, #20]
 8007490:	f001 f9d6 	bl	8008840 <__mcmp>
 8007494:	900a      	str	r0, [sp, #40]	; 0x28
 8007496:	9908      	ldr	r1, [sp, #32]
 8007498:	9804      	ldr	r0, [sp, #16]
 800749a:	f000 ff43 	bl	8008324 <_Bfree>
 800749e:	9b07      	ldr	r3, [sp, #28]
 80074a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80074a2:	3301      	adds	r3, #1
 80074a4:	9308      	str	r3, [sp, #32]
 80074a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80074a8:	4313      	orrs	r3, r2
 80074aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80074ac:	4313      	orrs	r3, r2
 80074ae:	d109      	bne.n	80074c4 <_dtoa_r+0xacc>
 80074b0:	2c39      	cmp	r4, #57	; 0x39
 80074b2:	d022      	beq.n	80074fa <_dtoa_r+0xb02>
 80074b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	dd01      	ble.n	80074be <_dtoa_r+0xac6>
 80074ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80074bc:	3431      	adds	r4, #49	; 0x31
 80074be:	9b07      	ldr	r3, [sp, #28]
 80074c0:	701c      	strb	r4, [r3, #0]
 80074c2:	e76e      	b.n	80073a2 <_dtoa_r+0x9aa>
 80074c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80074c6:	2b00      	cmp	r3, #0
 80074c8:	db04      	blt.n	80074d4 <_dtoa_r+0xadc>
 80074ca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80074cc:	4313      	orrs	r3, r2
 80074ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80074d0:	4313      	orrs	r3, r2
 80074d2:	d11e      	bne.n	8007512 <_dtoa_r+0xb1a>
 80074d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80074d6:	2b00      	cmp	r3, #0
 80074d8:	ddf1      	ble.n	80074be <_dtoa_r+0xac6>
 80074da:	9905      	ldr	r1, [sp, #20]
 80074dc:	2201      	movs	r2, #1
 80074de:	9804      	ldr	r0, [sp, #16]
 80074e0:	f001 f940 	bl	8008764 <__lshift>
 80074e4:	0031      	movs	r1, r6
 80074e6:	9005      	str	r0, [sp, #20]
 80074e8:	f001 f9aa 	bl	8008840 <__mcmp>
 80074ec:	2800      	cmp	r0, #0
 80074ee:	dc02      	bgt.n	80074f6 <_dtoa_r+0xafe>
 80074f0:	d1e5      	bne.n	80074be <_dtoa_r+0xac6>
 80074f2:	07e3      	lsls	r3, r4, #31
 80074f4:	d5e3      	bpl.n	80074be <_dtoa_r+0xac6>
 80074f6:	2c39      	cmp	r4, #57	; 0x39
 80074f8:	d1df      	bne.n	80074ba <_dtoa_r+0xac2>
 80074fa:	2339      	movs	r3, #57	; 0x39
 80074fc:	9a07      	ldr	r2, [sp, #28]
 80074fe:	7013      	strb	r3, [r2, #0]
 8007500:	9b08      	ldr	r3, [sp, #32]
 8007502:	9308      	str	r3, [sp, #32]
 8007504:	3b01      	subs	r3, #1
 8007506:	781a      	ldrb	r2, [r3, #0]
 8007508:	2a39      	cmp	r2, #57	; 0x39
 800750a:	d063      	beq.n	80075d4 <_dtoa_r+0xbdc>
 800750c:	3201      	adds	r2, #1
 800750e:	701a      	strb	r2, [r3, #0]
 8007510:	e747      	b.n	80073a2 <_dtoa_r+0x9aa>
 8007512:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007514:	2b00      	cmp	r3, #0
 8007516:	dd03      	ble.n	8007520 <_dtoa_r+0xb28>
 8007518:	2c39      	cmp	r4, #57	; 0x39
 800751a:	d0ee      	beq.n	80074fa <_dtoa_r+0xb02>
 800751c:	3401      	adds	r4, #1
 800751e:	e7ce      	b.n	80074be <_dtoa_r+0xac6>
 8007520:	9b07      	ldr	r3, [sp, #28]
 8007522:	9a07      	ldr	r2, [sp, #28]
 8007524:	701c      	strb	r4, [r3, #0]
 8007526:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007528:	4293      	cmp	r3, r2
 800752a:	d03e      	beq.n	80075aa <_dtoa_r+0xbb2>
 800752c:	2300      	movs	r3, #0
 800752e:	220a      	movs	r2, #10
 8007530:	9905      	ldr	r1, [sp, #20]
 8007532:	9804      	ldr	r0, [sp, #16]
 8007534:	f000 ff1a 	bl	800836c <__multadd>
 8007538:	2300      	movs	r3, #0
 800753a:	9005      	str	r0, [sp, #20]
 800753c:	220a      	movs	r2, #10
 800753e:	0029      	movs	r1, r5
 8007540:	9804      	ldr	r0, [sp, #16]
 8007542:	42bd      	cmp	r5, r7
 8007544:	d106      	bne.n	8007554 <_dtoa_r+0xb5c>
 8007546:	f000 ff11 	bl	800836c <__multadd>
 800754a:	0005      	movs	r5, r0
 800754c:	0007      	movs	r7, r0
 800754e:	9b08      	ldr	r3, [sp, #32]
 8007550:	9307      	str	r3, [sp, #28]
 8007552:	e784      	b.n	800745e <_dtoa_r+0xa66>
 8007554:	f000 ff0a 	bl	800836c <__multadd>
 8007558:	0039      	movs	r1, r7
 800755a:	0005      	movs	r5, r0
 800755c:	2300      	movs	r3, #0
 800755e:	220a      	movs	r2, #10
 8007560:	9804      	ldr	r0, [sp, #16]
 8007562:	f000 ff03 	bl	800836c <__multadd>
 8007566:	0007      	movs	r7, r0
 8007568:	e7f1      	b.n	800754e <_dtoa_r+0xb56>
 800756a:	9b07      	ldr	r3, [sp, #28]
 800756c:	930b      	str	r3, [sp, #44]	; 0x2c
 800756e:	2500      	movs	r5, #0
 8007570:	0031      	movs	r1, r6
 8007572:	9805      	ldr	r0, [sp, #20]
 8007574:	f7ff f9b0 	bl	80068d8 <quorem>
 8007578:	9b06      	ldr	r3, [sp, #24]
 800757a:	3030      	adds	r0, #48	; 0x30
 800757c:	5558      	strb	r0, [r3, r5]
 800757e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007580:	3501      	adds	r5, #1
 8007582:	0004      	movs	r4, r0
 8007584:	42ab      	cmp	r3, r5
 8007586:	dd07      	ble.n	8007598 <_dtoa_r+0xba0>
 8007588:	2300      	movs	r3, #0
 800758a:	220a      	movs	r2, #10
 800758c:	9905      	ldr	r1, [sp, #20]
 800758e:	9804      	ldr	r0, [sp, #16]
 8007590:	f000 feec 	bl	800836c <__multadd>
 8007594:	9005      	str	r0, [sp, #20]
 8007596:	e7eb      	b.n	8007570 <_dtoa_r+0xb78>
 8007598:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800759a:	2301      	movs	r3, #1
 800759c:	2a00      	cmp	r2, #0
 800759e:	dd00      	ble.n	80075a2 <_dtoa_r+0xbaa>
 80075a0:	0013      	movs	r3, r2
 80075a2:	2500      	movs	r5, #0
 80075a4:	9a06      	ldr	r2, [sp, #24]
 80075a6:	18d3      	adds	r3, r2, r3
 80075a8:	9308      	str	r3, [sp, #32]
 80075aa:	9905      	ldr	r1, [sp, #20]
 80075ac:	2201      	movs	r2, #1
 80075ae:	9804      	ldr	r0, [sp, #16]
 80075b0:	f001 f8d8 	bl	8008764 <__lshift>
 80075b4:	0031      	movs	r1, r6
 80075b6:	9005      	str	r0, [sp, #20]
 80075b8:	f001 f942 	bl	8008840 <__mcmp>
 80075bc:	2800      	cmp	r0, #0
 80075be:	dc9f      	bgt.n	8007500 <_dtoa_r+0xb08>
 80075c0:	d101      	bne.n	80075c6 <_dtoa_r+0xbce>
 80075c2:	07e4      	lsls	r4, r4, #31
 80075c4:	d49c      	bmi.n	8007500 <_dtoa_r+0xb08>
 80075c6:	9b08      	ldr	r3, [sp, #32]
 80075c8:	9308      	str	r3, [sp, #32]
 80075ca:	3b01      	subs	r3, #1
 80075cc:	781a      	ldrb	r2, [r3, #0]
 80075ce:	2a30      	cmp	r2, #48	; 0x30
 80075d0:	d0fa      	beq.n	80075c8 <_dtoa_r+0xbd0>
 80075d2:	e6e6      	b.n	80073a2 <_dtoa_r+0x9aa>
 80075d4:	9a06      	ldr	r2, [sp, #24]
 80075d6:	429a      	cmp	r2, r3
 80075d8:	d193      	bne.n	8007502 <_dtoa_r+0xb0a>
 80075da:	9b03      	ldr	r3, [sp, #12]
 80075dc:	3301      	adds	r3, #1
 80075de:	9303      	str	r3, [sp, #12]
 80075e0:	2331      	movs	r3, #49	; 0x31
 80075e2:	7013      	strb	r3, [r2, #0]
 80075e4:	e6dd      	b.n	80073a2 <_dtoa_r+0x9aa>
 80075e6:	4b09      	ldr	r3, [pc, #36]	; (800760c <_dtoa_r+0xc14>)
 80075e8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80075ea:	9306      	str	r3, [sp, #24]
 80075ec:	4b08      	ldr	r3, [pc, #32]	; (8007610 <_dtoa_r+0xc18>)
 80075ee:	2a00      	cmp	r2, #0
 80075f0:	d001      	beq.n	80075f6 <_dtoa_r+0xbfe>
 80075f2:	f7ff fa49 	bl	8006a88 <_dtoa_r+0x90>
 80075f6:	f7ff fa49 	bl	8006a8c <_dtoa_r+0x94>
 80075fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80075fc:	2b00      	cmp	r3, #0
 80075fe:	dcb6      	bgt.n	800756e <_dtoa_r+0xb76>
 8007600:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007602:	2b02      	cmp	r3, #2
 8007604:	dd00      	ble.n	8007608 <_dtoa_r+0xc10>
 8007606:	e6b6      	b.n	8007376 <_dtoa_r+0x97e>
 8007608:	e7b1      	b.n	800756e <_dtoa_r+0xb76>
 800760a:	46c0      	nop			; (mov r8, r8)
 800760c:	08009721 	.word	0x08009721
 8007610:	08009729 	.word	0x08009729

08007614 <rshift>:
 8007614:	0002      	movs	r2, r0
 8007616:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007618:	6904      	ldr	r4, [r0, #16]
 800761a:	114b      	asrs	r3, r1, #5
 800761c:	b085      	sub	sp, #20
 800761e:	3214      	adds	r2, #20
 8007620:	9302      	str	r3, [sp, #8]
 8007622:	114d      	asrs	r5, r1, #5
 8007624:	0013      	movs	r3, r2
 8007626:	42ac      	cmp	r4, r5
 8007628:	dd32      	ble.n	8007690 <rshift+0x7c>
 800762a:	261f      	movs	r6, #31
 800762c:	000f      	movs	r7, r1
 800762e:	114b      	asrs	r3, r1, #5
 8007630:	009b      	lsls	r3, r3, #2
 8007632:	00a5      	lsls	r5, r4, #2
 8007634:	18d3      	adds	r3, r2, r3
 8007636:	4037      	ands	r7, r6
 8007638:	1955      	adds	r5, r2, r5
 800763a:	9300      	str	r3, [sp, #0]
 800763c:	9701      	str	r7, [sp, #4]
 800763e:	4231      	tst	r1, r6
 8007640:	d10d      	bne.n	800765e <rshift+0x4a>
 8007642:	0016      	movs	r6, r2
 8007644:	0019      	movs	r1, r3
 8007646:	428d      	cmp	r5, r1
 8007648:	d836      	bhi.n	80076b8 <rshift+0xa4>
 800764a:	9900      	ldr	r1, [sp, #0]
 800764c:	2300      	movs	r3, #0
 800764e:	3903      	subs	r1, #3
 8007650:	428d      	cmp	r5, r1
 8007652:	d302      	bcc.n	800765a <rshift+0x46>
 8007654:	9b02      	ldr	r3, [sp, #8]
 8007656:	1ae4      	subs	r4, r4, r3
 8007658:	00a3      	lsls	r3, r4, #2
 800765a:	18d3      	adds	r3, r2, r3
 800765c:	e018      	b.n	8007690 <rshift+0x7c>
 800765e:	2120      	movs	r1, #32
 8007660:	9e01      	ldr	r6, [sp, #4]
 8007662:	9f01      	ldr	r7, [sp, #4]
 8007664:	1b89      	subs	r1, r1, r6
 8007666:	9e00      	ldr	r6, [sp, #0]
 8007668:	9103      	str	r1, [sp, #12]
 800766a:	ce02      	ldmia	r6!, {r1}
 800766c:	4694      	mov	ip, r2
 800766e:	40f9      	lsrs	r1, r7
 8007670:	42b5      	cmp	r5, r6
 8007672:	d816      	bhi.n	80076a2 <rshift+0x8e>
 8007674:	9e00      	ldr	r6, [sp, #0]
 8007676:	2300      	movs	r3, #0
 8007678:	3601      	adds	r6, #1
 800767a:	42b5      	cmp	r5, r6
 800767c:	d303      	bcc.n	8007686 <rshift+0x72>
 800767e:	9b02      	ldr	r3, [sp, #8]
 8007680:	1ae3      	subs	r3, r4, r3
 8007682:	009b      	lsls	r3, r3, #2
 8007684:	3b04      	subs	r3, #4
 8007686:	18d3      	adds	r3, r2, r3
 8007688:	6019      	str	r1, [r3, #0]
 800768a:	2900      	cmp	r1, #0
 800768c:	d000      	beq.n	8007690 <rshift+0x7c>
 800768e:	3304      	adds	r3, #4
 8007690:	1a99      	subs	r1, r3, r2
 8007692:	1089      	asrs	r1, r1, #2
 8007694:	6101      	str	r1, [r0, #16]
 8007696:	4293      	cmp	r3, r2
 8007698:	d101      	bne.n	800769e <rshift+0x8a>
 800769a:	2300      	movs	r3, #0
 800769c:	6143      	str	r3, [r0, #20]
 800769e:	b005      	add	sp, #20
 80076a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80076a2:	6837      	ldr	r7, [r6, #0]
 80076a4:	9b03      	ldr	r3, [sp, #12]
 80076a6:	409f      	lsls	r7, r3
 80076a8:	430f      	orrs	r7, r1
 80076aa:	4661      	mov	r1, ip
 80076ac:	c180      	stmia	r1!, {r7}
 80076ae:	468c      	mov	ip, r1
 80076b0:	9b01      	ldr	r3, [sp, #4]
 80076b2:	ce02      	ldmia	r6!, {r1}
 80076b4:	40d9      	lsrs	r1, r3
 80076b6:	e7db      	b.n	8007670 <rshift+0x5c>
 80076b8:	c980      	ldmia	r1!, {r7}
 80076ba:	c680      	stmia	r6!, {r7}
 80076bc:	e7c3      	b.n	8007646 <rshift+0x32>

080076be <__hexdig_fun>:
 80076be:	0002      	movs	r2, r0
 80076c0:	3a30      	subs	r2, #48	; 0x30
 80076c2:	0003      	movs	r3, r0
 80076c4:	2a09      	cmp	r2, #9
 80076c6:	d802      	bhi.n	80076ce <__hexdig_fun+0x10>
 80076c8:	3b20      	subs	r3, #32
 80076ca:	b2d8      	uxtb	r0, r3
 80076cc:	4770      	bx	lr
 80076ce:	0002      	movs	r2, r0
 80076d0:	3a61      	subs	r2, #97	; 0x61
 80076d2:	2a05      	cmp	r2, #5
 80076d4:	d801      	bhi.n	80076da <__hexdig_fun+0x1c>
 80076d6:	3b47      	subs	r3, #71	; 0x47
 80076d8:	e7f7      	b.n	80076ca <__hexdig_fun+0xc>
 80076da:	001a      	movs	r2, r3
 80076dc:	3a41      	subs	r2, #65	; 0x41
 80076de:	2000      	movs	r0, #0
 80076e0:	2a05      	cmp	r2, #5
 80076e2:	d8f3      	bhi.n	80076cc <__hexdig_fun+0xe>
 80076e4:	3b27      	subs	r3, #39	; 0x27
 80076e6:	e7f0      	b.n	80076ca <__hexdig_fun+0xc>

080076e8 <__gethex>:
 80076e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80076ea:	b089      	sub	sp, #36	; 0x24
 80076ec:	9307      	str	r3, [sp, #28]
 80076ee:	2302      	movs	r3, #2
 80076f0:	9201      	str	r2, [sp, #4]
 80076f2:	680a      	ldr	r2, [r1, #0]
 80076f4:	425b      	negs	r3, r3
 80076f6:	9003      	str	r0, [sp, #12]
 80076f8:	9106      	str	r1, [sp, #24]
 80076fa:	1c96      	adds	r6, r2, #2
 80076fc:	1a9b      	subs	r3, r3, r2
 80076fe:	199a      	adds	r2, r3, r6
 8007700:	9600      	str	r6, [sp, #0]
 8007702:	9205      	str	r2, [sp, #20]
 8007704:	9a00      	ldr	r2, [sp, #0]
 8007706:	3601      	adds	r6, #1
 8007708:	7810      	ldrb	r0, [r2, #0]
 800770a:	2830      	cmp	r0, #48	; 0x30
 800770c:	d0f7      	beq.n	80076fe <__gethex+0x16>
 800770e:	f7ff ffd6 	bl	80076be <__hexdig_fun>
 8007712:	2300      	movs	r3, #0
 8007714:	001d      	movs	r5, r3
 8007716:	9302      	str	r3, [sp, #8]
 8007718:	4298      	cmp	r0, r3
 800771a:	d11d      	bne.n	8007758 <__gethex+0x70>
 800771c:	2201      	movs	r2, #1
 800771e:	49a6      	ldr	r1, [pc, #664]	; (80079b8 <__gethex+0x2d0>)
 8007720:	9800      	ldr	r0, [sp, #0]
 8007722:	f7ff f871 	bl	8006808 <strncmp>
 8007726:	0007      	movs	r7, r0
 8007728:	42a8      	cmp	r0, r5
 800772a:	d169      	bne.n	8007800 <__gethex+0x118>
 800772c:	9b00      	ldr	r3, [sp, #0]
 800772e:	0034      	movs	r4, r6
 8007730:	7858      	ldrb	r0, [r3, #1]
 8007732:	f7ff ffc4 	bl	80076be <__hexdig_fun>
 8007736:	2301      	movs	r3, #1
 8007738:	9302      	str	r3, [sp, #8]
 800773a:	42a8      	cmp	r0, r5
 800773c:	d02f      	beq.n	800779e <__gethex+0xb6>
 800773e:	9600      	str	r6, [sp, #0]
 8007740:	9b00      	ldr	r3, [sp, #0]
 8007742:	7818      	ldrb	r0, [r3, #0]
 8007744:	2830      	cmp	r0, #48	; 0x30
 8007746:	d009      	beq.n	800775c <__gethex+0x74>
 8007748:	f7ff ffb9 	bl	80076be <__hexdig_fun>
 800774c:	4242      	negs	r2, r0
 800774e:	4142      	adcs	r2, r0
 8007750:	2301      	movs	r3, #1
 8007752:	0035      	movs	r5, r6
 8007754:	9202      	str	r2, [sp, #8]
 8007756:	9305      	str	r3, [sp, #20]
 8007758:	9c00      	ldr	r4, [sp, #0]
 800775a:	e004      	b.n	8007766 <__gethex+0x7e>
 800775c:	9b00      	ldr	r3, [sp, #0]
 800775e:	3301      	adds	r3, #1
 8007760:	9300      	str	r3, [sp, #0]
 8007762:	e7ed      	b.n	8007740 <__gethex+0x58>
 8007764:	3401      	adds	r4, #1
 8007766:	7820      	ldrb	r0, [r4, #0]
 8007768:	f7ff ffa9 	bl	80076be <__hexdig_fun>
 800776c:	1e07      	subs	r7, r0, #0
 800776e:	d1f9      	bne.n	8007764 <__gethex+0x7c>
 8007770:	2201      	movs	r2, #1
 8007772:	0020      	movs	r0, r4
 8007774:	4990      	ldr	r1, [pc, #576]	; (80079b8 <__gethex+0x2d0>)
 8007776:	f7ff f847 	bl	8006808 <strncmp>
 800777a:	2800      	cmp	r0, #0
 800777c:	d10d      	bne.n	800779a <__gethex+0xb2>
 800777e:	2d00      	cmp	r5, #0
 8007780:	d106      	bne.n	8007790 <__gethex+0xa8>
 8007782:	3401      	adds	r4, #1
 8007784:	0025      	movs	r5, r4
 8007786:	7820      	ldrb	r0, [r4, #0]
 8007788:	f7ff ff99 	bl	80076be <__hexdig_fun>
 800778c:	2800      	cmp	r0, #0
 800778e:	d102      	bne.n	8007796 <__gethex+0xae>
 8007790:	1b2d      	subs	r5, r5, r4
 8007792:	00af      	lsls	r7, r5, #2
 8007794:	e003      	b.n	800779e <__gethex+0xb6>
 8007796:	3401      	adds	r4, #1
 8007798:	e7f5      	b.n	8007786 <__gethex+0x9e>
 800779a:	2d00      	cmp	r5, #0
 800779c:	d1f8      	bne.n	8007790 <__gethex+0xa8>
 800779e:	2220      	movs	r2, #32
 80077a0:	7823      	ldrb	r3, [r4, #0]
 80077a2:	0026      	movs	r6, r4
 80077a4:	4393      	bics	r3, r2
 80077a6:	2b50      	cmp	r3, #80	; 0x50
 80077a8:	d11d      	bne.n	80077e6 <__gethex+0xfe>
 80077aa:	7863      	ldrb	r3, [r4, #1]
 80077ac:	2b2b      	cmp	r3, #43	; 0x2b
 80077ae:	d02c      	beq.n	800780a <__gethex+0x122>
 80077b0:	2b2d      	cmp	r3, #45	; 0x2d
 80077b2:	d02e      	beq.n	8007812 <__gethex+0x12a>
 80077b4:	2300      	movs	r3, #0
 80077b6:	1c66      	adds	r6, r4, #1
 80077b8:	9304      	str	r3, [sp, #16]
 80077ba:	7830      	ldrb	r0, [r6, #0]
 80077bc:	f7ff ff7f 	bl	80076be <__hexdig_fun>
 80077c0:	1e43      	subs	r3, r0, #1
 80077c2:	b2db      	uxtb	r3, r3
 80077c4:	2b18      	cmp	r3, #24
 80077c6:	d82b      	bhi.n	8007820 <__gethex+0x138>
 80077c8:	3810      	subs	r0, #16
 80077ca:	0005      	movs	r5, r0
 80077cc:	7870      	ldrb	r0, [r6, #1]
 80077ce:	f7ff ff76 	bl	80076be <__hexdig_fun>
 80077d2:	1e43      	subs	r3, r0, #1
 80077d4:	b2db      	uxtb	r3, r3
 80077d6:	3601      	adds	r6, #1
 80077d8:	2b18      	cmp	r3, #24
 80077da:	d91c      	bls.n	8007816 <__gethex+0x12e>
 80077dc:	9b04      	ldr	r3, [sp, #16]
 80077de:	2b00      	cmp	r3, #0
 80077e0:	d000      	beq.n	80077e4 <__gethex+0xfc>
 80077e2:	426d      	negs	r5, r5
 80077e4:	197f      	adds	r7, r7, r5
 80077e6:	9b06      	ldr	r3, [sp, #24]
 80077e8:	601e      	str	r6, [r3, #0]
 80077ea:	9b02      	ldr	r3, [sp, #8]
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	d019      	beq.n	8007824 <__gethex+0x13c>
 80077f0:	2600      	movs	r6, #0
 80077f2:	9b05      	ldr	r3, [sp, #20]
 80077f4:	42b3      	cmp	r3, r6
 80077f6:	d100      	bne.n	80077fa <__gethex+0x112>
 80077f8:	3606      	adds	r6, #6
 80077fa:	0030      	movs	r0, r6
 80077fc:	b009      	add	sp, #36	; 0x24
 80077fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007800:	2301      	movs	r3, #1
 8007802:	2700      	movs	r7, #0
 8007804:	9c00      	ldr	r4, [sp, #0]
 8007806:	9302      	str	r3, [sp, #8]
 8007808:	e7c9      	b.n	800779e <__gethex+0xb6>
 800780a:	2300      	movs	r3, #0
 800780c:	9304      	str	r3, [sp, #16]
 800780e:	1ca6      	adds	r6, r4, #2
 8007810:	e7d3      	b.n	80077ba <__gethex+0xd2>
 8007812:	2301      	movs	r3, #1
 8007814:	e7fa      	b.n	800780c <__gethex+0x124>
 8007816:	230a      	movs	r3, #10
 8007818:	435d      	muls	r5, r3
 800781a:	182d      	adds	r5, r5, r0
 800781c:	3d10      	subs	r5, #16
 800781e:	e7d5      	b.n	80077cc <__gethex+0xe4>
 8007820:	0026      	movs	r6, r4
 8007822:	e7e0      	b.n	80077e6 <__gethex+0xfe>
 8007824:	9b00      	ldr	r3, [sp, #0]
 8007826:	9902      	ldr	r1, [sp, #8]
 8007828:	1ae3      	subs	r3, r4, r3
 800782a:	3b01      	subs	r3, #1
 800782c:	2b07      	cmp	r3, #7
 800782e:	dc0a      	bgt.n	8007846 <__gethex+0x15e>
 8007830:	9803      	ldr	r0, [sp, #12]
 8007832:	f000 fd33 	bl	800829c <_Balloc>
 8007836:	1e05      	subs	r5, r0, #0
 8007838:	d108      	bne.n	800784c <__gethex+0x164>
 800783a:	002a      	movs	r2, r5
 800783c:	21e4      	movs	r1, #228	; 0xe4
 800783e:	4b5f      	ldr	r3, [pc, #380]	; (80079bc <__gethex+0x2d4>)
 8007840:	485f      	ldr	r0, [pc, #380]	; (80079c0 <__gethex+0x2d8>)
 8007842:	f001 fae3 	bl	8008e0c <__assert_func>
 8007846:	3101      	adds	r1, #1
 8007848:	105b      	asrs	r3, r3, #1
 800784a:	e7ef      	b.n	800782c <__gethex+0x144>
 800784c:	0003      	movs	r3, r0
 800784e:	3314      	adds	r3, #20
 8007850:	9302      	str	r3, [sp, #8]
 8007852:	9305      	str	r3, [sp, #20]
 8007854:	2300      	movs	r3, #0
 8007856:	001e      	movs	r6, r3
 8007858:	9304      	str	r3, [sp, #16]
 800785a:	9b00      	ldr	r3, [sp, #0]
 800785c:	42a3      	cmp	r3, r4
 800785e:	d33f      	bcc.n	80078e0 <__gethex+0x1f8>
 8007860:	9c05      	ldr	r4, [sp, #20]
 8007862:	9b02      	ldr	r3, [sp, #8]
 8007864:	c440      	stmia	r4!, {r6}
 8007866:	1ae4      	subs	r4, r4, r3
 8007868:	10a4      	asrs	r4, r4, #2
 800786a:	0030      	movs	r0, r6
 800786c:	612c      	str	r4, [r5, #16]
 800786e:	f000 fe0d 	bl	800848c <__hi0bits>
 8007872:	9b01      	ldr	r3, [sp, #4]
 8007874:	0164      	lsls	r4, r4, #5
 8007876:	681b      	ldr	r3, [r3, #0]
 8007878:	1a26      	subs	r6, r4, r0
 800787a:	9300      	str	r3, [sp, #0]
 800787c:	429e      	cmp	r6, r3
 800787e:	dd51      	ble.n	8007924 <__gethex+0x23c>
 8007880:	1af6      	subs	r6, r6, r3
 8007882:	0031      	movs	r1, r6
 8007884:	0028      	movs	r0, r5
 8007886:	f001 f9a1 	bl	8008bcc <__any_on>
 800788a:	1e04      	subs	r4, r0, #0
 800788c:	d016      	beq.n	80078bc <__gethex+0x1d4>
 800788e:	2401      	movs	r4, #1
 8007890:	231f      	movs	r3, #31
 8007892:	0020      	movs	r0, r4
 8007894:	1e72      	subs	r2, r6, #1
 8007896:	4013      	ands	r3, r2
 8007898:	4098      	lsls	r0, r3
 800789a:	0003      	movs	r3, r0
 800789c:	1151      	asrs	r1, r2, #5
 800789e:	9802      	ldr	r0, [sp, #8]
 80078a0:	0089      	lsls	r1, r1, #2
 80078a2:	5809      	ldr	r1, [r1, r0]
 80078a4:	4219      	tst	r1, r3
 80078a6:	d009      	beq.n	80078bc <__gethex+0x1d4>
 80078a8:	42a2      	cmp	r2, r4
 80078aa:	dd06      	ble.n	80078ba <__gethex+0x1d2>
 80078ac:	0028      	movs	r0, r5
 80078ae:	1eb1      	subs	r1, r6, #2
 80078b0:	f001 f98c 	bl	8008bcc <__any_on>
 80078b4:	3402      	adds	r4, #2
 80078b6:	2800      	cmp	r0, #0
 80078b8:	d100      	bne.n	80078bc <__gethex+0x1d4>
 80078ba:	2402      	movs	r4, #2
 80078bc:	0031      	movs	r1, r6
 80078be:	0028      	movs	r0, r5
 80078c0:	f7ff fea8 	bl	8007614 <rshift>
 80078c4:	19bf      	adds	r7, r7, r6
 80078c6:	9b01      	ldr	r3, [sp, #4]
 80078c8:	689b      	ldr	r3, [r3, #8]
 80078ca:	42bb      	cmp	r3, r7
 80078cc:	da3a      	bge.n	8007944 <__gethex+0x25c>
 80078ce:	0029      	movs	r1, r5
 80078d0:	9803      	ldr	r0, [sp, #12]
 80078d2:	f000 fd27 	bl	8008324 <_Bfree>
 80078d6:	2300      	movs	r3, #0
 80078d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80078da:	26a3      	movs	r6, #163	; 0xa3
 80078dc:	6013      	str	r3, [r2, #0]
 80078de:	e78c      	b.n	80077fa <__gethex+0x112>
 80078e0:	3c01      	subs	r4, #1
 80078e2:	7823      	ldrb	r3, [r4, #0]
 80078e4:	2b2e      	cmp	r3, #46	; 0x2e
 80078e6:	d012      	beq.n	800790e <__gethex+0x226>
 80078e8:	9b04      	ldr	r3, [sp, #16]
 80078ea:	2b20      	cmp	r3, #32
 80078ec:	d104      	bne.n	80078f8 <__gethex+0x210>
 80078ee:	9b05      	ldr	r3, [sp, #20]
 80078f0:	c340      	stmia	r3!, {r6}
 80078f2:	2600      	movs	r6, #0
 80078f4:	9305      	str	r3, [sp, #20]
 80078f6:	9604      	str	r6, [sp, #16]
 80078f8:	7820      	ldrb	r0, [r4, #0]
 80078fa:	f7ff fee0 	bl	80076be <__hexdig_fun>
 80078fe:	230f      	movs	r3, #15
 8007900:	4018      	ands	r0, r3
 8007902:	9b04      	ldr	r3, [sp, #16]
 8007904:	4098      	lsls	r0, r3
 8007906:	3304      	adds	r3, #4
 8007908:	4306      	orrs	r6, r0
 800790a:	9304      	str	r3, [sp, #16]
 800790c:	e7a5      	b.n	800785a <__gethex+0x172>
 800790e:	9b00      	ldr	r3, [sp, #0]
 8007910:	42a3      	cmp	r3, r4
 8007912:	d8e9      	bhi.n	80078e8 <__gethex+0x200>
 8007914:	2201      	movs	r2, #1
 8007916:	0020      	movs	r0, r4
 8007918:	4927      	ldr	r1, [pc, #156]	; (80079b8 <__gethex+0x2d0>)
 800791a:	f7fe ff75 	bl	8006808 <strncmp>
 800791e:	2800      	cmp	r0, #0
 8007920:	d1e2      	bne.n	80078e8 <__gethex+0x200>
 8007922:	e79a      	b.n	800785a <__gethex+0x172>
 8007924:	9b00      	ldr	r3, [sp, #0]
 8007926:	2400      	movs	r4, #0
 8007928:	429e      	cmp	r6, r3
 800792a:	dacc      	bge.n	80078c6 <__gethex+0x1de>
 800792c:	1b9e      	subs	r6, r3, r6
 800792e:	0029      	movs	r1, r5
 8007930:	0032      	movs	r2, r6
 8007932:	9803      	ldr	r0, [sp, #12]
 8007934:	f000 ff16 	bl	8008764 <__lshift>
 8007938:	0003      	movs	r3, r0
 800793a:	3314      	adds	r3, #20
 800793c:	0005      	movs	r5, r0
 800793e:	1bbf      	subs	r7, r7, r6
 8007940:	9302      	str	r3, [sp, #8]
 8007942:	e7c0      	b.n	80078c6 <__gethex+0x1de>
 8007944:	9b01      	ldr	r3, [sp, #4]
 8007946:	685e      	ldr	r6, [r3, #4]
 8007948:	42be      	cmp	r6, r7
 800794a:	dd70      	ble.n	8007a2e <__gethex+0x346>
 800794c:	9b00      	ldr	r3, [sp, #0]
 800794e:	1bf6      	subs	r6, r6, r7
 8007950:	42b3      	cmp	r3, r6
 8007952:	dc37      	bgt.n	80079c4 <__gethex+0x2dc>
 8007954:	9b01      	ldr	r3, [sp, #4]
 8007956:	68db      	ldr	r3, [r3, #12]
 8007958:	2b02      	cmp	r3, #2
 800795a:	d024      	beq.n	80079a6 <__gethex+0x2be>
 800795c:	2b03      	cmp	r3, #3
 800795e:	d026      	beq.n	80079ae <__gethex+0x2c6>
 8007960:	2b01      	cmp	r3, #1
 8007962:	d117      	bne.n	8007994 <__gethex+0x2ac>
 8007964:	9b00      	ldr	r3, [sp, #0]
 8007966:	42b3      	cmp	r3, r6
 8007968:	d114      	bne.n	8007994 <__gethex+0x2ac>
 800796a:	2b01      	cmp	r3, #1
 800796c:	d10b      	bne.n	8007986 <__gethex+0x29e>
 800796e:	9b01      	ldr	r3, [sp, #4]
 8007970:	9a07      	ldr	r2, [sp, #28]
 8007972:	685b      	ldr	r3, [r3, #4]
 8007974:	2662      	movs	r6, #98	; 0x62
 8007976:	6013      	str	r3, [r2, #0]
 8007978:	2301      	movs	r3, #1
 800797a:	9a02      	ldr	r2, [sp, #8]
 800797c:	612b      	str	r3, [r5, #16]
 800797e:	6013      	str	r3, [r2, #0]
 8007980:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007982:	601d      	str	r5, [r3, #0]
 8007984:	e739      	b.n	80077fa <__gethex+0x112>
 8007986:	9900      	ldr	r1, [sp, #0]
 8007988:	0028      	movs	r0, r5
 800798a:	3901      	subs	r1, #1
 800798c:	f001 f91e 	bl	8008bcc <__any_on>
 8007990:	2800      	cmp	r0, #0
 8007992:	d1ec      	bne.n	800796e <__gethex+0x286>
 8007994:	0029      	movs	r1, r5
 8007996:	9803      	ldr	r0, [sp, #12]
 8007998:	f000 fcc4 	bl	8008324 <_Bfree>
 800799c:	2300      	movs	r3, #0
 800799e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80079a0:	2650      	movs	r6, #80	; 0x50
 80079a2:	6013      	str	r3, [r2, #0]
 80079a4:	e729      	b.n	80077fa <__gethex+0x112>
 80079a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d1f3      	bne.n	8007994 <__gethex+0x2ac>
 80079ac:	e7df      	b.n	800796e <__gethex+0x286>
 80079ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80079b0:	2b00      	cmp	r3, #0
 80079b2:	d1dc      	bne.n	800796e <__gethex+0x286>
 80079b4:	e7ee      	b.n	8007994 <__gethex+0x2ac>
 80079b6:	46c0      	nop			; (mov r8, r8)
 80079b8:	080095c5 	.word	0x080095c5
 80079bc:	0800979d 	.word	0x0800979d
 80079c0:	080097ae 	.word	0x080097ae
 80079c4:	1e77      	subs	r7, r6, #1
 80079c6:	2c00      	cmp	r4, #0
 80079c8:	d12f      	bne.n	8007a2a <__gethex+0x342>
 80079ca:	2f00      	cmp	r7, #0
 80079cc:	d004      	beq.n	80079d8 <__gethex+0x2f0>
 80079ce:	0039      	movs	r1, r7
 80079d0:	0028      	movs	r0, r5
 80079d2:	f001 f8fb 	bl	8008bcc <__any_on>
 80079d6:	0004      	movs	r4, r0
 80079d8:	231f      	movs	r3, #31
 80079da:	117a      	asrs	r2, r7, #5
 80079dc:	401f      	ands	r7, r3
 80079de:	3b1e      	subs	r3, #30
 80079e0:	40bb      	lsls	r3, r7
 80079e2:	9902      	ldr	r1, [sp, #8]
 80079e4:	0092      	lsls	r2, r2, #2
 80079e6:	5852      	ldr	r2, [r2, r1]
 80079e8:	421a      	tst	r2, r3
 80079ea:	d001      	beq.n	80079f0 <__gethex+0x308>
 80079ec:	2302      	movs	r3, #2
 80079ee:	431c      	orrs	r4, r3
 80079f0:	9b00      	ldr	r3, [sp, #0]
 80079f2:	0031      	movs	r1, r6
 80079f4:	1b9b      	subs	r3, r3, r6
 80079f6:	2602      	movs	r6, #2
 80079f8:	0028      	movs	r0, r5
 80079fa:	9300      	str	r3, [sp, #0]
 80079fc:	f7ff fe0a 	bl	8007614 <rshift>
 8007a00:	9b01      	ldr	r3, [sp, #4]
 8007a02:	685f      	ldr	r7, [r3, #4]
 8007a04:	2c00      	cmp	r4, #0
 8007a06:	d041      	beq.n	8007a8c <__gethex+0x3a4>
 8007a08:	9b01      	ldr	r3, [sp, #4]
 8007a0a:	68db      	ldr	r3, [r3, #12]
 8007a0c:	2b02      	cmp	r3, #2
 8007a0e:	d010      	beq.n	8007a32 <__gethex+0x34a>
 8007a10:	2b03      	cmp	r3, #3
 8007a12:	d012      	beq.n	8007a3a <__gethex+0x352>
 8007a14:	2b01      	cmp	r3, #1
 8007a16:	d106      	bne.n	8007a26 <__gethex+0x33e>
 8007a18:	07a2      	lsls	r2, r4, #30
 8007a1a:	d504      	bpl.n	8007a26 <__gethex+0x33e>
 8007a1c:	9a02      	ldr	r2, [sp, #8]
 8007a1e:	6812      	ldr	r2, [r2, #0]
 8007a20:	4314      	orrs	r4, r2
 8007a22:	421c      	tst	r4, r3
 8007a24:	d10c      	bne.n	8007a40 <__gethex+0x358>
 8007a26:	2310      	movs	r3, #16
 8007a28:	e02f      	b.n	8007a8a <__gethex+0x3a2>
 8007a2a:	2401      	movs	r4, #1
 8007a2c:	e7d4      	b.n	80079d8 <__gethex+0x2f0>
 8007a2e:	2601      	movs	r6, #1
 8007a30:	e7e8      	b.n	8007a04 <__gethex+0x31c>
 8007a32:	2301      	movs	r3, #1
 8007a34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007a36:	1a9b      	subs	r3, r3, r2
 8007a38:	930f      	str	r3, [sp, #60]	; 0x3c
 8007a3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007a3c:	2b00      	cmp	r3, #0
 8007a3e:	d0f2      	beq.n	8007a26 <__gethex+0x33e>
 8007a40:	692b      	ldr	r3, [r5, #16]
 8007a42:	2000      	movs	r0, #0
 8007a44:	9302      	str	r3, [sp, #8]
 8007a46:	009b      	lsls	r3, r3, #2
 8007a48:	9304      	str	r3, [sp, #16]
 8007a4a:	002b      	movs	r3, r5
 8007a4c:	9a04      	ldr	r2, [sp, #16]
 8007a4e:	3314      	adds	r3, #20
 8007a50:	1899      	adds	r1, r3, r2
 8007a52:	681a      	ldr	r2, [r3, #0]
 8007a54:	1c54      	adds	r4, r2, #1
 8007a56:	d01e      	beq.n	8007a96 <__gethex+0x3ae>
 8007a58:	3201      	adds	r2, #1
 8007a5a:	601a      	str	r2, [r3, #0]
 8007a5c:	002b      	movs	r3, r5
 8007a5e:	3314      	adds	r3, #20
 8007a60:	2e02      	cmp	r6, #2
 8007a62:	d141      	bne.n	8007ae8 <__gethex+0x400>
 8007a64:	9a01      	ldr	r2, [sp, #4]
 8007a66:	9900      	ldr	r1, [sp, #0]
 8007a68:	6812      	ldr	r2, [r2, #0]
 8007a6a:	3a01      	subs	r2, #1
 8007a6c:	428a      	cmp	r2, r1
 8007a6e:	d10b      	bne.n	8007a88 <__gethex+0x3a0>
 8007a70:	221f      	movs	r2, #31
 8007a72:	9800      	ldr	r0, [sp, #0]
 8007a74:	1149      	asrs	r1, r1, #5
 8007a76:	4002      	ands	r2, r0
 8007a78:	2001      	movs	r0, #1
 8007a7a:	0004      	movs	r4, r0
 8007a7c:	4094      	lsls	r4, r2
 8007a7e:	0089      	lsls	r1, r1, #2
 8007a80:	58cb      	ldr	r3, [r1, r3]
 8007a82:	4223      	tst	r3, r4
 8007a84:	d000      	beq.n	8007a88 <__gethex+0x3a0>
 8007a86:	2601      	movs	r6, #1
 8007a88:	2320      	movs	r3, #32
 8007a8a:	431e      	orrs	r6, r3
 8007a8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007a8e:	601d      	str	r5, [r3, #0]
 8007a90:	9b07      	ldr	r3, [sp, #28]
 8007a92:	601f      	str	r7, [r3, #0]
 8007a94:	e6b1      	b.n	80077fa <__gethex+0x112>
 8007a96:	c301      	stmia	r3!, {r0}
 8007a98:	4299      	cmp	r1, r3
 8007a9a:	d8da      	bhi.n	8007a52 <__gethex+0x36a>
 8007a9c:	68ab      	ldr	r3, [r5, #8]
 8007a9e:	9a02      	ldr	r2, [sp, #8]
 8007aa0:	429a      	cmp	r2, r3
 8007aa2:	db18      	blt.n	8007ad6 <__gethex+0x3ee>
 8007aa4:	6869      	ldr	r1, [r5, #4]
 8007aa6:	9803      	ldr	r0, [sp, #12]
 8007aa8:	3101      	adds	r1, #1
 8007aaa:	f000 fbf7 	bl	800829c <_Balloc>
 8007aae:	1e04      	subs	r4, r0, #0
 8007ab0:	d104      	bne.n	8007abc <__gethex+0x3d4>
 8007ab2:	0022      	movs	r2, r4
 8007ab4:	2184      	movs	r1, #132	; 0x84
 8007ab6:	4b1c      	ldr	r3, [pc, #112]	; (8007b28 <__gethex+0x440>)
 8007ab8:	481c      	ldr	r0, [pc, #112]	; (8007b2c <__gethex+0x444>)
 8007aba:	e6c2      	b.n	8007842 <__gethex+0x15a>
 8007abc:	0029      	movs	r1, r5
 8007abe:	692a      	ldr	r2, [r5, #16]
 8007ac0:	310c      	adds	r1, #12
 8007ac2:	3202      	adds	r2, #2
 8007ac4:	0092      	lsls	r2, r2, #2
 8007ac6:	300c      	adds	r0, #12
 8007ac8:	f7fe fef3 	bl	80068b2 <memcpy>
 8007acc:	0029      	movs	r1, r5
 8007ace:	9803      	ldr	r0, [sp, #12]
 8007ad0:	f000 fc28 	bl	8008324 <_Bfree>
 8007ad4:	0025      	movs	r5, r4
 8007ad6:	692b      	ldr	r3, [r5, #16]
 8007ad8:	1c5a      	adds	r2, r3, #1
 8007ada:	612a      	str	r2, [r5, #16]
 8007adc:	2201      	movs	r2, #1
 8007ade:	3304      	adds	r3, #4
 8007ae0:	009b      	lsls	r3, r3, #2
 8007ae2:	18eb      	adds	r3, r5, r3
 8007ae4:	605a      	str	r2, [r3, #4]
 8007ae6:	e7b9      	b.n	8007a5c <__gethex+0x374>
 8007ae8:	692a      	ldr	r2, [r5, #16]
 8007aea:	9902      	ldr	r1, [sp, #8]
 8007aec:	428a      	cmp	r2, r1
 8007aee:	dd09      	ble.n	8007b04 <__gethex+0x41c>
 8007af0:	2101      	movs	r1, #1
 8007af2:	0028      	movs	r0, r5
 8007af4:	f7ff fd8e 	bl	8007614 <rshift>
 8007af8:	9b01      	ldr	r3, [sp, #4]
 8007afa:	3701      	adds	r7, #1
 8007afc:	689b      	ldr	r3, [r3, #8]
 8007afe:	42bb      	cmp	r3, r7
 8007b00:	dac1      	bge.n	8007a86 <__gethex+0x39e>
 8007b02:	e6e4      	b.n	80078ce <__gethex+0x1e6>
 8007b04:	221f      	movs	r2, #31
 8007b06:	9c00      	ldr	r4, [sp, #0]
 8007b08:	9900      	ldr	r1, [sp, #0]
 8007b0a:	2601      	movs	r6, #1
 8007b0c:	4014      	ands	r4, r2
 8007b0e:	4211      	tst	r1, r2
 8007b10:	d0ba      	beq.n	8007a88 <__gethex+0x3a0>
 8007b12:	9a04      	ldr	r2, [sp, #16]
 8007b14:	189b      	adds	r3, r3, r2
 8007b16:	3b04      	subs	r3, #4
 8007b18:	6818      	ldr	r0, [r3, #0]
 8007b1a:	f000 fcb7 	bl	800848c <__hi0bits>
 8007b1e:	2320      	movs	r3, #32
 8007b20:	1b1b      	subs	r3, r3, r4
 8007b22:	4298      	cmp	r0, r3
 8007b24:	dbe4      	blt.n	8007af0 <__gethex+0x408>
 8007b26:	e7af      	b.n	8007a88 <__gethex+0x3a0>
 8007b28:	0800979d 	.word	0x0800979d
 8007b2c:	080097ae 	.word	0x080097ae

08007b30 <L_shift>:
 8007b30:	2308      	movs	r3, #8
 8007b32:	b570      	push	{r4, r5, r6, lr}
 8007b34:	2520      	movs	r5, #32
 8007b36:	1a9a      	subs	r2, r3, r2
 8007b38:	0092      	lsls	r2, r2, #2
 8007b3a:	1aad      	subs	r5, r5, r2
 8007b3c:	6843      	ldr	r3, [r0, #4]
 8007b3e:	6804      	ldr	r4, [r0, #0]
 8007b40:	001e      	movs	r6, r3
 8007b42:	40ae      	lsls	r6, r5
 8007b44:	40d3      	lsrs	r3, r2
 8007b46:	4334      	orrs	r4, r6
 8007b48:	6004      	str	r4, [r0, #0]
 8007b4a:	6043      	str	r3, [r0, #4]
 8007b4c:	3004      	adds	r0, #4
 8007b4e:	4288      	cmp	r0, r1
 8007b50:	d3f4      	bcc.n	8007b3c <L_shift+0xc>
 8007b52:	bd70      	pop	{r4, r5, r6, pc}

08007b54 <__match>:
 8007b54:	b530      	push	{r4, r5, lr}
 8007b56:	6803      	ldr	r3, [r0, #0]
 8007b58:	780c      	ldrb	r4, [r1, #0]
 8007b5a:	3301      	adds	r3, #1
 8007b5c:	2c00      	cmp	r4, #0
 8007b5e:	d102      	bne.n	8007b66 <__match+0x12>
 8007b60:	6003      	str	r3, [r0, #0]
 8007b62:	2001      	movs	r0, #1
 8007b64:	bd30      	pop	{r4, r5, pc}
 8007b66:	781a      	ldrb	r2, [r3, #0]
 8007b68:	0015      	movs	r5, r2
 8007b6a:	3d41      	subs	r5, #65	; 0x41
 8007b6c:	2d19      	cmp	r5, #25
 8007b6e:	d800      	bhi.n	8007b72 <__match+0x1e>
 8007b70:	3220      	adds	r2, #32
 8007b72:	3101      	adds	r1, #1
 8007b74:	42a2      	cmp	r2, r4
 8007b76:	d0ef      	beq.n	8007b58 <__match+0x4>
 8007b78:	2000      	movs	r0, #0
 8007b7a:	e7f3      	b.n	8007b64 <__match+0x10>

08007b7c <__hexnan>:
 8007b7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b7e:	680b      	ldr	r3, [r1, #0]
 8007b80:	b08b      	sub	sp, #44	; 0x2c
 8007b82:	9201      	str	r2, [sp, #4]
 8007b84:	9901      	ldr	r1, [sp, #4]
 8007b86:	115a      	asrs	r2, r3, #5
 8007b88:	0092      	lsls	r2, r2, #2
 8007b8a:	188a      	adds	r2, r1, r2
 8007b8c:	9202      	str	r2, [sp, #8]
 8007b8e:	0019      	movs	r1, r3
 8007b90:	221f      	movs	r2, #31
 8007b92:	4011      	ands	r1, r2
 8007b94:	9008      	str	r0, [sp, #32]
 8007b96:	9106      	str	r1, [sp, #24]
 8007b98:	4213      	tst	r3, r2
 8007b9a:	d002      	beq.n	8007ba2 <__hexnan+0x26>
 8007b9c:	9b02      	ldr	r3, [sp, #8]
 8007b9e:	3304      	adds	r3, #4
 8007ba0:	9302      	str	r3, [sp, #8]
 8007ba2:	9b02      	ldr	r3, [sp, #8]
 8007ba4:	2500      	movs	r5, #0
 8007ba6:	1f1f      	subs	r7, r3, #4
 8007ba8:	003e      	movs	r6, r7
 8007baa:	003c      	movs	r4, r7
 8007bac:	9b08      	ldr	r3, [sp, #32]
 8007bae:	603d      	str	r5, [r7, #0]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	9507      	str	r5, [sp, #28]
 8007bb4:	9305      	str	r3, [sp, #20]
 8007bb6:	9503      	str	r5, [sp, #12]
 8007bb8:	9b05      	ldr	r3, [sp, #20]
 8007bba:	3301      	adds	r3, #1
 8007bbc:	9309      	str	r3, [sp, #36]	; 0x24
 8007bbe:	9b05      	ldr	r3, [sp, #20]
 8007bc0:	785b      	ldrb	r3, [r3, #1]
 8007bc2:	9304      	str	r3, [sp, #16]
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	d028      	beq.n	8007c1a <__hexnan+0x9e>
 8007bc8:	9804      	ldr	r0, [sp, #16]
 8007bca:	f7ff fd78 	bl	80076be <__hexdig_fun>
 8007bce:	2800      	cmp	r0, #0
 8007bd0:	d154      	bne.n	8007c7c <__hexnan+0x100>
 8007bd2:	9b04      	ldr	r3, [sp, #16]
 8007bd4:	2b20      	cmp	r3, #32
 8007bd6:	d819      	bhi.n	8007c0c <__hexnan+0x90>
 8007bd8:	9b03      	ldr	r3, [sp, #12]
 8007bda:	9a07      	ldr	r2, [sp, #28]
 8007bdc:	4293      	cmp	r3, r2
 8007bde:	dd12      	ble.n	8007c06 <__hexnan+0x8a>
 8007be0:	42b4      	cmp	r4, r6
 8007be2:	d206      	bcs.n	8007bf2 <__hexnan+0x76>
 8007be4:	2d07      	cmp	r5, #7
 8007be6:	dc04      	bgt.n	8007bf2 <__hexnan+0x76>
 8007be8:	002a      	movs	r2, r5
 8007bea:	0031      	movs	r1, r6
 8007bec:	0020      	movs	r0, r4
 8007bee:	f7ff ff9f 	bl	8007b30 <L_shift>
 8007bf2:	9b01      	ldr	r3, [sp, #4]
 8007bf4:	2508      	movs	r5, #8
 8007bf6:	429c      	cmp	r4, r3
 8007bf8:	d905      	bls.n	8007c06 <__hexnan+0x8a>
 8007bfa:	1f26      	subs	r6, r4, #4
 8007bfc:	2500      	movs	r5, #0
 8007bfe:	0034      	movs	r4, r6
 8007c00:	9b03      	ldr	r3, [sp, #12]
 8007c02:	6035      	str	r5, [r6, #0]
 8007c04:	9307      	str	r3, [sp, #28]
 8007c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007c08:	9305      	str	r3, [sp, #20]
 8007c0a:	e7d5      	b.n	8007bb8 <__hexnan+0x3c>
 8007c0c:	9b04      	ldr	r3, [sp, #16]
 8007c0e:	2b29      	cmp	r3, #41	; 0x29
 8007c10:	d159      	bne.n	8007cc6 <__hexnan+0x14a>
 8007c12:	9b05      	ldr	r3, [sp, #20]
 8007c14:	9a08      	ldr	r2, [sp, #32]
 8007c16:	3302      	adds	r3, #2
 8007c18:	6013      	str	r3, [r2, #0]
 8007c1a:	9b03      	ldr	r3, [sp, #12]
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	d052      	beq.n	8007cc6 <__hexnan+0x14a>
 8007c20:	42b4      	cmp	r4, r6
 8007c22:	d206      	bcs.n	8007c32 <__hexnan+0xb6>
 8007c24:	2d07      	cmp	r5, #7
 8007c26:	dc04      	bgt.n	8007c32 <__hexnan+0xb6>
 8007c28:	002a      	movs	r2, r5
 8007c2a:	0031      	movs	r1, r6
 8007c2c:	0020      	movs	r0, r4
 8007c2e:	f7ff ff7f 	bl	8007b30 <L_shift>
 8007c32:	9b01      	ldr	r3, [sp, #4]
 8007c34:	429c      	cmp	r4, r3
 8007c36:	d935      	bls.n	8007ca4 <__hexnan+0x128>
 8007c38:	001a      	movs	r2, r3
 8007c3a:	0023      	movs	r3, r4
 8007c3c:	cb02      	ldmia	r3!, {r1}
 8007c3e:	c202      	stmia	r2!, {r1}
 8007c40:	429f      	cmp	r7, r3
 8007c42:	d2fb      	bcs.n	8007c3c <__hexnan+0xc0>
 8007c44:	9b02      	ldr	r3, [sp, #8]
 8007c46:	1c62      	adds	r2, r4, #1
 8007c48:	1ed9      	subs	r1, r3, #3
 8007c4a:	2304      	movs	r3, #4
 8007c4c:	4291      	cmp	r1, r2
 8007c4e:	d305      	bcc.n	8007c5c <__hexnan+0xe0>
 8007c50:	9b02      	ldr	r3, [sp, #8]
 8007c52:	3b04      	subs	r3, #4
 8007c54:	1b1b      	subs	r3, r3, r4
 8007c56:	089b      	lsrs	r3, r3, #2
 8007c58:	3301      	adds	r3, #1
 8007c5a:	009b      	lsls	r3, r3, #2
 8007c5c:	9a01      	ldr	r2, [sp, #4]
 8007c5e:	18d3      	adds	r3, r2, r3
 8007c60:	2200      	movs	r2, #0
 8007c62:	c304      	stmia	r3!, {r2}
 8007c64:	429f      	cmp	r7, r3
 8007c66:	d2fc      	bcs.n	8007c62 <__hexnan+0xe6>
 8007c68:	683b      	ldr	r3, [r7, #0]
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	d104      	bne.n	8007c78 <__hexnan+0xfc>
 8007c6e:	9b01      	ldr	r3, [sp, #4]
 8007c70:	429f      	cmp	r7, r3
 8007c72:	d126      	bne.n	8007cc2 <__hexnan+0x146>
 8007c74:	2301      	movs	r3, #1
 8007c76:	603b      	str	r3, [r7, #0]
 8007c78:	2005      	movs	r0, #5
 8007c7a:	e025      	b.n	8007cc8 <__hexnan+0x14c>
 8007c7c:	9b03      	ldr	r3, [sp, #12]
 8007c7e:	3501      	adds	r5, #1
 8007c80:	3301      	adds	r3, #1
 8007c82:	9303      	str	r3, [sp, #12]
 8007c84:	2d08      	cmp	r5, #8
 8007c86:	dd06      	ble.n	8007c96 <__hexnan+0x11a>
 8007c88:	9b01      	ldr	r3, [sp, #4]
 8007c8a:	429c      	cmp	r4, r3
 8007c8c:	d9bb      	bls.n	8007c06 <__hexnan+0x8a>
 8007c8e:	2300      	movs	r3, #0
 8007c90:	2501      	movs	r5, #1
 8007c92:	3c04      	subs	r4, #4
 8007c94:	6023      	str	r3, [r4, #0]
 8007c96:	220f      	movs	r2, #15
 8007c98:	6823      	ldr	r3, [r4, #0]
 8007c9a:	4010      	ands	r0, r2
 8007c9c:	011b      	lsls	r3, r3, #4
 8007c9e:	4303      	orrs	r3, r0
 8007ca0:	6023      	str	r3, [r4, #0]
 8007ca2:	e7b0      	b.n	8007c06 <__hexnan+0x8a>
 8007ca4:	9b06      	ldr	r3, [sp, #24]
 8007ca6:	2b00      	cmp	r3, #0
 8007ca8:	d0de      	beq.n	8007c68 <__hexnan+0xec>
 8007caa:	2320      	movs	r3, #32
 8007cac:	9a06      	ldr	r2, [sp, #24]
 8007cae:	9902      	ldr	r1, [sp, #8]
 8007cb0:	1a9b      	subs	r3, r3, r2
 8007cb2:	2201      	movs	r2, #1
 8007cb4:	4252      	negs	r2, r2
 8007cb6:	40da      	lsrs	r2, r3
 8007cb8:	3904      	subs	r1, #4
 8007cba:	680b      	ldr	r3, [r1, #0]
 8007cbc:	4013      	ands	r3, r2
 8007cbe:	600b      	str	r3, [r1, #0]
 8007cc0:	e7d2      	b.n	8007c68 <__hexnan+0xec>
 8007cc2:	3f04      	subs	r7, #4
 8007cc4:	e7d0      	b.n	8007c68 <__hexnan+0xec>
 8007cc6:	2004      	movs	r0, #4
 8007cc8:	b00b      	add	sp, #44	; 0x2c
 8007cca:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007ccc <__ssputs_r>:
 8007ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007cce:	b085      	sub	sp, #20
 8007cd0:	9301      	str	r3, [sp, #4]
 8007cd2:	9203      	str	r2, [sp, #12]
 8007cd4:	688e      	ldr	r6, [r1, #8]
 8007cd6:	9a01      	ldr	r2, [sp, #4]
 8007cd8:	0007      	movs	r7, r0
 8007cda:	000c      	movs	r4, r1
 8007cdc:	680b      	ldr	r3, [r1, #0]
 8007cde:	4296      	cmp	r6, r2
 8007ce0:	d831      	bhi.n	8007d46 <__ssputs_r+0x7a>
 8007ce2:	898a      	ldrh	r2, [r1, #12]
 8007ce4:	2190      	movs	r1, #144	; 0x90
 8007ce6:	00c9      	lsls	r1, r1, #3
 8007ce8:	420a      	tst	r2, r1
 8007cea:	d029      	beq.n	8007d40 <__ssputs_r+0x74>
 8007cec:	2003      	movs	r0, #3
 8007cee:	6921      	ldr	r1, [r4, #16]
 8007cf0:	1a5b      	subs	r3, r3, r1
 8007cf2:	9302      	str	r3, [sp, #8]
 8007cf4:	6963      	ldr	r3, [r4, #20]
 8007cf6:	4343      	muls	r3, r0
 8007cf8:	0fdd      	lsrs	r5, r3, #31
 8007cfa:	18ed      	adds	r5, r5, r3
 8007cfc:	9b01      	ldr	r3, [sp, #4]
 8007cfe:	9802      	ldr	r0, [sp, #8]
 8007d00:	3301      	adds	r3, #1
 8007d02:	181b      	adds	r3, r3, r0
 8007d04:	106d      	asrs	r5, r5, #1
 8007d06:	42ab      	cmp	r3, r5
 8007d08:	d900      	bls.n	8007d0c <__ssputs_r+0x40>
 8007d0a:	001d      	movs	r5, r3
 8007d0c:	0552      	lsls	r2, r2, #21
 8007d0e:	d529      	bpl.n	8007d64 <__ssputs_r+0x98>
 8007d10:	0029      	movs	r1, r5
 8007d12:	0038      	movs	r0, r7
 8007d14:	f000 f968 	bl	8007fe8 <_malloc_r>
 8007d18:	1e06      	subs	r6, r0, #0
 8007d1a:	d02d      	beq.n	8007d78 <__ssputs_r+0xac>
 8007d1c:	9a02      	ldr	r2, [sp, #8]
 8007d1e:	6921      	ldr	r1, [r4, #16]
 8007d20:	f7fe fdc7 	bl	80068b2 <memcpy>
 8007d24:	89a2      	ldrh	r2, [r4, #12]
 8007d26:	4b19      	ldr	r3, [pc, #100]	; (8007d8c <__ssputs_r+0xc0>)
 8007d28:	401a      	ands	r2, r3
 8007d2a:	2380      	movs	r3, #128	; 0x80
 8007d2c:	4313      	orrs	r3, r2
 8007d2e:	81a3      	strh	r3, [r4, #12]
 8007d30:	9b02      	ldr	r3, [sp, #8]
 8007d32:	6126      	str	r6, [r4, #16]
 8007d34:	18f6      	adds	r6, r6, r3
 8007d36:	6026      	str	r6, [r4, #0]
 8007d38:	6165      	str	r5, [r4, #20]
 8007d3a:	9e01      	ldr	r6, [sp, #4]
 8007d3c:	1aed      	subs	r5, r5, r3
 8007d3e:	60a5      	str	r5, [r4, #8]
 8007d40:	9b01      	ldr	r3, [sp, #4]
 8007d42:	429e      	cmp	r6, r3
 8007d44:	d900      	bls.n	8007d48 <__ssputs_r+0x7c>
 8007d46:	9e01      	ldr	r6, [sp, #4]
 8007d48:	0032      	movs	r2, r6
 8007d4a:	9903      	ldr	r1, [sp, #12]
 8007d4c:	6820      	ldr	r0, [r4, #0]
 8007d4e:	f000 ffe9 	bl	8008d24 <memmove>
 8007d52:	2000      	movs	r0, #0
 8007d54:	68a3      	ldr	r3, [r4, #8]
 8007d56:	1b9b      	subs	r3, r3, r6
 8007d58:	60a3      	str	r3, [r4, #8]
 8007d5a:	6823      	ldr	r3, [r4, #0]
 8007d5c:	199b      	adds	r3, r3, r6
 8007d5e:	6023      	str	r3, [r4, #0]
 8007d60:	b005      	add	sp, #20
 8007d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007d64:	002a      	movs	r2, r5
 8007d66:	0038      	movs	r0, r7
 8007d68:	f000 ffa0 	bl	8008cac <_realloc_r>
 8007d6c:	1e06      	subs	r6, r0, #0
 8007d6e:	d1df      	bne.n	8007d30 <__ssputs_r+0x64>
 8007d70:	0038      	movs	r0, r7
 8007d72:	6921      	ldr	r1, [r4, #16]
 8007d74:	f001 f896 	bl	8008ea4 <_free_r>
 8007d78:	230c      	movs	r3, #12
 8007d7a:	2001      	movs	r0, #1
 8007d7c:	603b      	str	r3, [r7, #0]
 8007d7e:	89a2      	ldrh	r2, [r4, #12]
 8007d80:	3334      	adds	r3, #52	; 0x34
 8007d82:	4313      	orrs	r3, r2
 8007d84:	81a3      	strh	r3, [r4, #12]
 8007d86:	4240      	negs	r0, r0
 8007d88:	e7ea      	b.n	8007d60 <__ssputs_r+0x94>
 8007d8a:	46c0      	nop			; (mov r8, r8)
 8007d8c:	fffffb7f 	.word	0xfffffb7f

08007d90 <_svfiprintf_r>:
 8007d90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d92:	b0a1      	sub	sp, #132	; 0x84
 8007d94:	9003      	str	r0, [sp, #12]
 8007d96:	001d      	movs	r5, r3
 8007d98:	898b      	ldrh	r3, [r1, #12]
 8007d9a:	000f      	movs	r7, r1
 8007d9c:	0016      	movs	r6, r2
 8007d9e:	061b      	lsls	r3, r3, #24
 8007da0:	d511      	bpl.n	8007dc6 <_svfiprintf_r+0x36>
 8007da2:	690b      	ldr	r3, [r1, #16]
 8007da4:	2b00      	cmp	r3, #0
 8007da6:	d10e      	bne.n	8007dc6 <_svfiprintf_r+0x36>
 8007da8:	2140      	movs	r1, #64	; 0x40
 8007daa:	f000 f91d 	bl	8007fe8 <_malloc_r>
 8007dae:	6038      	str	r0, [r7, #0]
 8007db0:	6138      	str	r0, [r7, #16]
 8007db2:	2800      	cmp	r0, #0
 8007db4:	d105      	bne.n	8007dc2 <_svfiprintf_r+0x32>
 8007db6:	230c      	movs	r3, #12
 8007db8:	9a03      	ldr	r2, [sp, #12]
 8007dba:	3801      	subs	r0, #1
 8007dbc:	6013      	str	r3, [r2, #0]
 8007dbe:	b021      	add	sp, #132	; 0x84
 8007dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007dc2:	2340      	movs	r3, #64	; 0x40
 8007dc4:	617b      	str	r3, [r7, #20]
 8007dc6:	2300      	movs	r3, #0
 8007dc8:	ac08      	add	r4, sp, #32
 8007dca:	6163      	str	r3, [r4, #20]
 8007dcc:	3320      	adds	r3, #32
 8007dce:	7663      	strb	r3, [r4, #25]
 8007dd0:	3310      	adds	r3, #16
 8007dd2:	76a3      	strb	r3, [r4, #26]
 8007dd4:	9507      	str	r5, [sp, #28]
 8007dd6:	0035      	movs	r5, r6
 8007dd8:	782b      	ldrb	r3, [r5, #0]
 8007dda:	2b00      	cmp	r3, #0
 8007ddc:	d001      	beq.n	8007de2 <_svfiprintf_r+0x52>
 8007dde:	2b25      	cmp	r3, #37	; 0x25
 8007de0:	d148      	bne.n	8007e74 <_svfiprintf_r+0xe4>
 8007de2:	1bab      	subs	r3, r5, r6
 8007de4:	9305      	str	r3, [sp, #20]
 8007de6:	42b5      	cmp	r5, r6
 8007de8:	d00b      	beq.n	8007e02 <_svfiprintf_r+0x72>
 8007dea:	0032      	movs	r2, r6
 8007dec:	0039      	movs	r1, r7
 8007dee:	9803      	ldr	r0, [sp, #12]
 8007df0:	f7ff ff6c 	bl	8007ccc <__ssputs_r>
 8007df4:	3001      	adds	r0, #1
 8007df6:	d100      	bne.n	8007dfa <_svfiprintf_r+0x6a>
 8007df8:	e0af      	b.n	8007f5a <_svfiprintf_r+0x1ca>
 8007dfa:	6963      	ldr	r3, [r4, #20]
 8007dfc:	9a05      	ldr	r2, [sp, #20]
 8007dfe:	189b      	adds	r3, r3, r2
 8007e00:	6163      	str	r3, [r4, #20]
 8007e02:	782b      	ldrb	r3, [r5, #0]
 8007e04:	2b00      	cmp	r3, #0
 8007e06:	d100      	bne.n	8007e0a <_svfiprintf_r+0x7a>
 8007e08:	e0a7      	b.n	8007f5a <_svfiprintf_r+0x1ca>
 8007e0a:	2201      	movs	r2, #1
 8007e0c:	2300      	movs	r3, #0
 8007e0e:	4252      	negs	r2, r2
 8007e10:	6062      	str	r2, [r4, #4]
 8007e12:	a904      	add	r1, sp, #16
 8007e14:	3254      	adds	r2, #84	; 0x54
 8007e16:	1852      	adds	r2, r2, r1
 8007e18:	1c6e      	adds	r6, r5, #1
 8007e1a:	6023      	str	r3, [r4, #0]
 8007e1c:	60e3      	str	r3, [r4, #12]
 8007e1e:	60a3      	str	r3, [r4, #8]
 8007e20:	7013      	strb	r3, [r2, #0]
 8007e22:	65a3      	str	r3, [r4, #88]	; 0x58
 8007e24:	4b55      	ldr	r3, [pc, #340]	; (8007f7c <_svfiprintf_r+0x1ec>)
 8007e26:	2205      	movs	r2, #5
 8007e28:	0018      	movs	r0, r3
 8007e2a:	7831      	ldrb	r1, [r6, #0]
 8007e2c:	9305      	str	r3, [sp, #20]
 8007e2e:	f7fe fd35 	bl	800689c <memchr>
 8007e32:	1c75      	adds	r5, r6, #1
 8007e34:	2800      	cmp	r0, #0
 8007e36:	d11f      	bne.n	8007e78 <_svfiprintf_r+0xe8>
 8007e38:	6822      	ldr	r2, [r4, #0]
 8007e3a:	06d3      	lsls	r3, r2, #27
 8007e3c:	d504      	bpl.n	8007e48 <_svfiprintf_r+0xb8>
 8007e3e:	2353      	movs	r3, #83	; 0x53
 8007e40:	a904      	add	r1, sp, #16
 8007e42:	185b      	adds	r3, r3, r1
 8007e44:	2120      	movs	r1, #32
 8007e46:	7019      	strb	r1, [r3, #0]
 8007e48:	0713      	lsls	r3, r2, #28
 8007e4a:	d504      	bpl.n	8007e56 <_svfiprintf_r+0xc6>
 8007e4c:	2353      	movs	r3, #83	; 0x53
 8007e4e:	a904      	add	r1, sp, #16
 8007e50:	185b      	adds	r3, r3, r1
 8007e52:	212b      	movs	r1, #43	; 0x2b
 8007e54:	7019      	strb	r1, [r3, #0]
 8007e56:	7833      	ldrb	r3, [r6, #0]
 8007e58:	2b2a      	cmp	r3, #42	; 0x2a
 8007e5a:	d016      	beq.n	8007e8a <_svfiprintf_r+0xfa>
 8007e5c:	0035      	movs	r5, r6
 8007e5e:	2100      	movs	r1, #0
 8007e60:	200a      	movs	r0, #10
 8007e62:	68e3      	ldr	r3, [r4, #12]
 8007e64:	782a      	ldrb	r2, [r5, #0]
 8007e66:	1c6e      	adds	r6, r5, #1
 8007e68:	3a30      	subs	r2, #48	; 0x30
 8007e6a:	2a09      	cmp	r2, #9
 8007e6c:	d94e      	bls.n	8007f0c <_svfiprintf_r+0x17c>
 8007e6e:	2900      	cmp	r1, #0
 8007e70:	d111      	bne.n	8007e96 <_svfiprintf_r+0x106>
 8007e72:	e017      	b.n	8007ea4 <_svfiprintf_r+0x114>
 8007e74:	3501      	adds	r5, #1
 8007e76:	e7af      	b.n	8007dd8 <_svfiprintf_r+0x48>
 8007e78:	9b05      	ldr	r3, [sp, #20]
 8007e7a:	6822      	ldr	r2, [r4, #0]
 8007e7c:	1ac0      	subs	r0, r0, r3
 8007e7e:	2301      	movs	r3, #1
 8007e80:	4083      	lsls	r3, r0
 8007e82:	4313      	orrs	r3, r2
 8007e84:	002e      	movs	r6, r5
 8007e86:	6023      	str	r3, [r4, #0]
 8007e88:	e7cc      	b.n	8007e24 <_svfiprintf_r+0x94>
 8007e8a:	9b07      	ldr	r3, [sp, #28]
 8007e8c:	1d19      	adds	r1, r3, #4
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	9107      	str	r1, [sp, #28]
 8007e92:	2b00      	cmp	r3, #0
 8007e94:	db01      	blt.n	8007e9a <_svfiprintf_r+0x10a>
 8007e96:	930b      	str	r3, [sp, #44]	; 0x2c
 8007e98:	e004      	b.n	8007ea4 <_svfiprintf_r+0x114>
 8007e9a:	425b      	negs	r3, r3
 8007e9c:	60e3      	str	r3, [r4, #12]
 8007e9e:	2302      	movs	r3, #2
 8007ea0:	4313      	orrs	r3, r2
 8007ea2:	6023      	str	r3, [r4, #0]
 8007ea4:	782b      	ldrb	r3, [r5, #0]
 8007ea6:	2b2e      	cmp	r3, #46	; 0x2e
 8007ea8:	d10a      	bne.n	8007ec0 <_svfiprintf_r+0x130>
 8007eaa:	786b      	ldrb	r3, [r5, #1]
 8007eac:	2b2a      	cmp	r3, #42	; 0x2a
 8007eae:	d135      	bne.n	8007f1c <_svfiprintf_r+0x18c>
 8007eb0:	9b07      	ldr	r3, [sp, #28]
 8007eb2:	3502      	adds	r5, #2
 8007eb4:	1d1a      	adds	r2, r3, #4
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	9207      	str	r2, [sp, #28]
 8007eba:	2b00      	cmp	r3, #0
 8007ebc:	db2b      	blt.n	8007f16 <_svfiprintf_r+0x186>
 8007ebe:	9309      	str	r3, [sp, #36]	; 0x24
 8007ec0:	4e2f      	ldr	r6, [pc, #188]	; (8007f80 <_svfiprintf_r+0x1f0>)
 8007ec2:	2203      	movs	r2, #3
 8007ec4:	0030      	movs	r0, r6
 8007ec6:	7829      	ldrb	r1, [r5, #0]
 8007ec8:	f7fe fce8 	bl	800689c <memchr>
 8007ecc:	2800      	cmp	r0, #0
 8007ece:	d006      	beq.n	8007ede <_svfiprintf_r+0x14e>
 8007ed0:	2340      	movs	r3, #64	; 0x40
 8007ed2:	1b80      	subs	r0, r0, r6
 8007ed4:	4083      	lsls	r3, r0
 8007ed6:	6822      	ldr	r2, [r4, #0]
 8007ed8:	3501      	adds	r5, #1
 8007eda:	4313      	orrs	r3, r2
 8007edc:	6023      	str	r3, [r4, #0]
 8007ede:	7829      	ldrb	r1, [r5, #0]
 8007ee0:	2206      	movs	r2, #6
 8007ee2:	4828      	ldr	r0, [pc, #160]	; (8007f84 <_svfiprintf_r+0x1f4>)
 8007ee4:	1c6e      	adds	r6, r5, #1
 8007ee6:	7621      	strb	r1, [r4, #24]
 8007ee8:	f7fe fcd8 	bl	800689c <memchr>
 8007eec:	2800      	cmp	r0, #0
 8007eee:	d03c      	beq.n	8007f6a <_svfiprintf_r+0x1da>
 8007ef0:	4b25      	ldr	r3, [pc, #148]	; (8007f88 <_svfiprintf_r+0x1f8>)
 8007ef2:	2b00      	cmp	r3, #0
 8007ef4:	d125      	bne.n	8007f42 <_svfiprintf_r+0x1b2>
 8007ef6:	2207      	movs	r2, #7
 8007ef8:	9b07      	ldr	r3, [sp, #28]
 8007efa:	3307      	adds	r3, #7
 8007efc:	4393      	bics	r3, r2
 8007efe:	3308      	adds	r3, #8
 8007f00:	9307      	str	r3, [sp, #28]
 8007f02:	6963      	ldr	r3, [r4, #20]
 8007f04:	9a04      	ldr	r2, [sp, #16]
 8007f06:	189b      	adds	r3, r3, r2
 8007f08:	6163      	str	r3, [r4, #20]
 8007f0a:	e764      	b.n	8007dd6 <_svfiprintf_r+0x46>
 8007f0c:	4343      	muls	r3, r0
 8007f0e:	0035      	movs	r5, r6
 8007f10:	2101      	movs	r1, #1
 8007f12:	189b      	adds	r3, r3, r2
 8007f14:	e7a6      	b.n	8007e64 <_svfiprintf_r+0xd4>
 8007f16:	2301      	movs	r3, #1
 8007f18:	425b      	negs	r3, r3
 8007f1a:	e7d0      	b.n	8007ebe <_svfiprintf_r+0x12e>
 8007f1c:	2300      	movs	r3, #0
 8007f1e:	200a      	movs	r0, #10
 8007f20:	001a      	movs	r2, r3
 8007f22:	3501      	adds	r5, #1
 8007f24:	6063      	str	r3, [r4, #4]
 8007f26:	7829      	ldrb	r1, [r5, #0]
 8007f28:	1c6e      	adds	r6, r5, #1
 8007f2a:	3930      	subs	r1, #48	; 0x30
 8007f2c:	2909      	cmp	r1, #9
 8007f2e:	d903      	bls.n	8007f38 <_svfiprintf_r+0x1a8>
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d0c5      	beq.n	8007ec0 <_svfiprintf_r+0x130>
 8007f34:	9209      	str	r2, [sp, #36]	; 0x24
 8007f36:	e7c3      	b.n	8007ec0 <_svfiprintf_r+0x130>
 8007f38:	4342      	muls	r2, r0
 8007f3a:	0035      	movs	r5, r6
 8007f3c:	2301      	movs	r3, #1
 8007f3e:	1852      	adds	r2, r2, r1
 8007f40:	e7f1      	b.n	8007f26 <_svfiprintf_r+0x196>
 8007f42:	aa07      	add	r2, sp, #28
 8007f44:	9200      	str	r2, [sp, #0]
 8007f46:	0021      	movs	r1, r4
 8007f48:	003a      	movs	r2, r7
 8007f4a:	4b10      	ldr	r3, [pc, #64]	; (8007f8c <_svfiprintf_r+0x1fc>)
 8007f4c:	9803      	ldr	r0, [sp, #12]
 8007f4e:	f7fc fec3 	bl	8004cd8 <_printf_float>
 8007f52:	9004      	str	r0, [sp, #16]
 8007f54:	9b04      	ldr	r3, [sp, #16]
 8007f56:	3301      	adds	r3, #1
 8007f58:	d1d3      	bne.n	8007f02 <_svfiprintf_r+0x172>
 8007f5a:	89bb      	ldrh	r3, [r7, #12]
 8007f5c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007f5e:	065b      	lsls	r3, r3, #25
 8007f60:	d400      	bmi.n	8007f64 <_svfiprintf_r+0x1d4>
 8007f62:	e72c      	b.n	8007dbe <_svfiprintf_r+0x2e>
 8007f64:	2001      	movs	r0, #1
 8007f66:	4240      	negs	r0, r0
 8007f68:	e729      	b.n	8007dbe <_svfiprintf_r+0x2e>
 8007f6a:	aa07      	add	r2, sp, #28
 8007f6c:	9200      	str	r2, [sp, #0]
 8007f6e:	0021      	movs	r1, r4
 8007f70:	003a      	movs	r2, r7
 8007f72:	4b06      	ldr	r3, [pc, #24]	; (8007f8c <_svfiprintf_r+0x1fc>)
 8007f74:	9803      	ldr	r0, [sp, #12]
 8007f76:	f7fd f975 	bl	8005264 <_printf_i>
 8007f7a:	e7ea      	b.n	8007f52 <_svfiprintf_r+0x1c2>
 8007f7c:	0800980e 	.word	0x0800980e
 8007f80:	08009814 	.word	0x08009814
 8007f84:	08009818 	.word	0x08009818
 8007f88:	08004cd9 	.word	0x08004cd9
 8007f8c:	08007ccd 	.word	0x08007ccd

08007f90 <malloc>:
 8007f90:	b510      	push	{r4, lr}
 8007f92:	4b03      	ldr	r3, [pc, #12]	; (8007fa0 <malloc+0x10>)
 8007f94:	0001      	movs	r1, r0
 8007f96:	6818      	ldr	r0, [r3, #0]
 8007f98:	f000 f826 	bl	8007fe8 <_malloc_r>
 8007f9c:	bd10      	pop	{r4, pc}
 8007f9e:	46c0      	nop			; (mov r8, r8)
 8007fa0:	200001d0 	.word	0x200001d0

08007fa4 <sbrk_aligned>:
 8007fa4:	b570      	push	{r4, r5, r6, lr}
 8007fa6:	4e0f      	ldr	r6, [pc, #60]	; (8007fe4 <sbrk_aligned+0x40>)
 8007fa8:	000d      	movs	r5, r1
 8007faa:	6831      	ldr	r1, [r6, #0]
 8007fac:	0004      	movs	r4, r0
 8007fae:	2900      	cmp	r1, #0
 8007fb0:	d102      	bne.n	8007fb8 <sbrk_aligned+0x14>
 8007fb2:	f000 ff05 	bl	8008dc0 <_sbrk_r>
 8007fb6:	6030      	str	r0, [r6, #0]
 8007fb8:	0029      	movs	r1, r5
 8007fba:	0020      	movs	r0, r4
 8007fbc:	f000 ff00 	bl	8008dc0 <_sbrk_r>
 8007fc0:	1c43      	adds	r3, r0, #1
 8007fc2:	d00a      	beq.n	8007fda <sbrk_aligned+0x36>
 8007fc4:	2303      	movs	r3, #3
 8007fc6:	1cc5      	adds	r5, r0, #3
 8007fc8:	439d      	bics	r5, r3
 8007fca:	42a8      	cmp	r0, r5
 8007fcc:	d007      	beq.n	8007fde <sbrk_aligned+0x3a>
 8007fce:	1a29      	subs	r1, r5, r0
 8007fd0:	0020      	movs	r0, r4
 8007fd2:	f000 fef5 	bl	8008dc0 <_sbrk_r>
 8007fd6:	3001      	adds	r0, #1
 8007fd8:	d101      	bne.n	8007fde <sbrk_aligned+0x3a>
 8007fda:	2501      	movs	r5, #1
 8007fdc:	426d      	negs	r5, r5
 8007fde:	0028      	movs	r0, r5
 8007fe0:	bd70      	pop	{r4, r5, r6, pc}
 8007fe2:	46c0      	nop			; (mov r8, r8)
 8007fe4:	20000408 	.word	0x20000408

08007fe8 <_malloc_r>:
 8007fe8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007fea:	2203      	movs	r2, #3
 8007fec:	1ccb      	adds	r3, r1, #3
 8007fee:	4393      	bics	r3, r2
 8007ff0:	3308      	adds	r3, #8
 8007ff2:	0006      	movs	r6, r0
 8007ff4:	001f      	movs	r7, r3
 8007ff6:	2b0c      	cmp	r3, #12
 8007ff8:	d238      	bcs.n	800806c <_malloc_r+0x84>
 8007ffa:	270c      	movs	r7, #12
 8007ffc:	42b9      	cmp	r1, r7
 8007ffe:	d837      	bhi.n	8008070 <_malloc_r+0x88>
 8008000:	0030      	movs	r0, r6
 8008002:	f000 f93b 	bl	800827c <__malloc_lock>
 8008006:	4b38      	ldr	r3, [pc, #224]	; (80080e8 <_malloc_r+0x100>)
 8008008:	9300      	str	r3, [sp, #0]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	001c      	movs	r4, r3
 800800e:	2c00      	cmp	r4, #0
 8008010:	d133      	bne.n	800807a <_malloc_r+0x92>
 8008012:	0039      	movs	r1, r7
 8008014:	0030      	movs	r0, r6
 8008016:	f7ff ffc5 	bl	8007fa4 <sbrk_aligned>
 800801a:	0004      	movs	r4, r0
 800801c:	1c43      	adds	r3, r0, #1
 800801e:	d15e      	bne.n	80080de <_malloc_r+0xf6>
 8008020:	9b00      	ldr	r3, [sp, #0]
 8008022:	681c      	ldr	r4, [r3, #0]
 8008024:	0025      	movs	r5, r4
 8008026:	2d00      	cmp	r5, #0
 8008028:	d14e      	bne.n	80080c8 <_malloc_r+0xe0>
 800802a:	2c00      	cmp	r4, #0
 800802c:	d051      	beq.n	80080d2 <_malloc_r+0xea>
 800802e:	6823      	ldr	r3, [r4, #0]
 8008030:	0029      	movs	r1, r5
 8008032:	18e3      	adds	r3, r4, r3
 8008034:	0030      	movs	r0, r6
 8008036:	9301      	str	r3, [sp, #4]
 8008038:	f000 fec2 	bl	8008dc0 <_sbrk_r>
 800803c:	9b01      	ldr	r3, [sp, #4]
 800803e:	4283      	cmp	r3, r0
 8008040:	d147      	bne.n	80080d2 <_malloc_r+0xea>
 8008042:	6823      	ldr	r3, [r4, #0]
 8008044:	0030      	movs	r0, r6
 8008046:	1aff      	subs	r7, r7, r3
 8008048:	0039      	movs	r1, r7
 800804a:	f7ff ffab 	bl	8007fa4 <sbrk_aligned>
 800804e:	3001      	adds	r0, #1
 8008050:	d03f      	beq.n	80080d2 <_malloc_r+0xea>
 8008052:	6823      	ldr	r3, [r4, #0]
 8008054:	19db      	adds	r3, r3, r7
 8008056:	6023      	str	r3, [r4, #0]
 8008058:	9b00      	ldr	r3, [sp, #0]
 800805a:	681b      	ldr	r3, [r3, #0]
 800805c:	2b00      	cmp	r3, #0
 800805e:	d040      	beq.n	80080e2 <_malloc_r+0xfa>
 8008060:	685a      	ldr	r2, [r3, #4]
 8008062:	42a2      	cmp	r2, r4
 8008064:	d133      	bne.n	80080ce <_malloc_r+0xe6>
 8008066:	2200      	movs	r2, #0
 8008068:	605a      	str	r2, [r3, #4]
 800806a:	e014      	b.n	8008096 <_malloc_r+0xae>
 800806c:	2b00      	cmp	r3, #0
 800806e:	dac5      	bge.n	8007ffc <_malloc_r+0x14>
 8008070:	230c      	movs	r3, #12
 8008072:	2500      	movs	r5, #0
 8008074:	6033      	str	r3, [r6, #0]
 8008076:	0028      	movs	r0, r5
 8008078:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800807a:	6821      	ldr	r1, [r4, #0]
 800807c:	1bc9      	subs	r1, r1, r7
 800807e:	d420      	bmi.n	80080c2 <_malloc_r+0xda>
 8008080:	290b      	cmp	r1, #11
 8008082:	d918      	bls.n	80080b6 <_malloc_r+0xce>
 8008084:	19e2      	adds	r2, r4, r7
 8008086:	6027      	str	r7, [r4, #0]
 8008088:	42a3      	cmp	r3, r4
 800808a:	d112      	bne.n	80080b2 <_malloc_r+0xca>
 800808c:	9b00      	ldr	r3, [sp, #0]
 800808e:	601a      	str	r2, [r3, #0]
 8008090:	6863      	ldr	r3, [r4, #4]
 8008092:	6011      	str	r1, [r2, #0]
 8008094:	6053      	str	r3, [r2, #4]
 8008096:	0030      	movs	r0, r6
 8008098:	0025      	movs	r5, r4
 800809a:	f000 f8f7 	bl	800828c <__malloc_unlock>
 800809e:	2207      	movs	r2, #7
 80080a0:	350b      	adds	r5, #11
 80080a2:	1d23      	adds	r3, r4, #4
 80080a4:	4395      	bics	r5, r2
 80080a6:	1aea      	subs	r2, r5, r3
 80080a8:	429d      	cmp	r5, r3
 80080aa:	d0e4      	beq.n	8008076 <_malloc_r+0x8e>
 80080ac:	1b5b      	subs	r3, r3, r5
 80080ae:	50a3      	str	r3, [r4, r2]
 80080b0:	e7e1      	b.n	8008076 <_malloc_r+0x8e>
 80080b2:	605a      	str	r2, [r3, #4]
 80080b4:	e7ec      	b.n	8008090 <_malloc_r+0xa8>
 80080b6:	6862      	ldr	r2, [r4, #4]
 80080b8:	42a3      	cmp	r3, r4
 80080ba:	d1d5      	bne.n	8008068 <_malloc_r+0x80>
 80080bc:	9b00      	ldr	r3, [sp, #0]
 80080be:	601a      	str	r2, [r3, #0]
 80080c0:	e7e9      	b.n	8008096 <_malloc_r+0xae>
 80080c2:	0023      	movs	r3, r4
 80080c4:	6864      	ldr	r4, [r4, #4]
 80080c6:	e7a2      	b.n	800800e <_malloc_r+0x26>
 80080c8:	002c      	movs	r4, r5
 80080ca:	686d      	ldr	r5, [r5, #4]
 80080cc:	e7ab      	b.n	8008026 <_malloc_r+0x3e>
 80080ce:	0013      	movs	r3, r2
 80080d0:	e7c4      	b.n	800805c <_malloc_r+0x74>
 80080d2:	230c      	movs	r3, #12
 80080d4:	0030      	movs	r0, r6
 80080d6:	6033      	str	r3, [r6, #0]
 80080d8:	f000 f8d8 	bl	800828c <__malloc_unlock>
 80080dc:	e7cb      	b.n	8008076 <_malloc_r+0x8e>
 80080de:	6027      	str	r7, [r4, #0]
 80080e0:	e7d9      	b.n	8008096 <_malloc_r+0xae>
 80080e2:	605b      	str	r3, [r3, #4]
 80080e4:	deff      	udf	#255	; 0xff
 80080e6:	46c0      	nop			; (mov r8, r8)
 80080e8:	20000404 	.word	0x20000404

080080ec <__ascii_mbtowc>:
 80080ec:	b082      	sub	sp, #8
 80080ee:	2900      	cmp	r1, #0
 80080f0:	d100      	bne.n	80080f4 <__ascii_mbtowc+0x8>
 80080f2:	a901      	add	r1, sp, #4
 80080f4:	1e10      	subs	r0, r2, #0
 80080f6:	d006      	beq.n	8008106 <__ascii_mbtowc+0x1a>
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d006      	beq.n	800810a <__ascii_mbtowc+0x1e>
 80080fc:	7813      	ldrb	r3, [r2, #0]
 80080fe:	600b      	str	r3, [r1, #0]
 8008100:	7810      	ldrb	r0, [r2, #0]
 8008102:	1e43      	subs	r3, r0, #1
 8008104:	4198      	sbcs	r0, r3
 8008106:	b002      	add	sp, #8
 8008108:	4770      	bx	lr
 800810a:	2002      	movs	r0, #2
 800810c:	4240      	negs	r0, r0
 800810e:	e7fa      	b.n	8008106 <__ascii_mbtowc+0x1a>

08008110 <__sflush_r>:
 8008110:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008112:	898b      	ldrh	r3, [r1, #12]
 8008114:	0005      	movs	r5, r0
 8008116:	000c      	movs	r4, r1
 8008118:	071a      	lsls	r2, r3, #28
 800811a:	d45c      	bmi.n	80081d6 <__sflush_r+0xc6>
 800811c:	684a      	ldr	r2, [r1, #4]
 800811e:	2a00      	cmp	r2, #0
 8008120:	dc04      	bgt.n	800812c <__sflush_r+0x1c>
 8008122:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8008124:	2a00      	cmp	r2, #0
 8008126:	dc01      	bgt.n	800812c <__sflush_r+0x1c>
 8008128:	2000      	movs	r0, #0
 800812a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800812c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800812e:	2f00      	cmp	r7, #0
 8008130:	d0fa      	beq.n	8008128 <__sflush_r+0x18>
 8008132:	2200      	movs	r2, #0
 8008134:	2080      	movs	r0, #128	; 0x80
 8008136:	682e      	ldr	r6, [r5, #0]
 8008138:	602a      	str	r2, [r5, #0]
 800813a:	001a      	movs	r2, r3
 800813c:	0140      	lsls	r0, r0, #5
 800813e:	6a21      	ldr	r1, [r4, #32]
 8008140:	4002      	ands	r2, r0
 8008142:	4203      	tst	r3, r0
 8008144:	d034      	beq.n	80081b0 <__sflush_r+0xa0>
 8008146:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008148:	89a3      	ldrh	r3, [r4, #12]
 800814a:	075b      	lsls	r3, r3, #29
 800814c:	d506      	bpl.n	800815c <__sflush_r+0x4c>
 800814e:	6863      	ldr	r3, [r4, #4]
 8008150:	1ac0      	subs	r0, r0, r3
 8008152:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008154:	2b00      	cmp	r3, #0
 8008156:	d001      	beq.n	800815c <__sflush_r+0x4c>
 8008158:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800815a:	1ac0      	subs	r0, r0, r3
 800815c:	0002      	movs	r2, r0
 800815e:	2300      	movs	r3, #0
 8008160:	0028      	movs	r0, r5
 8008162:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8008164:	6a21      	ldr	r1, [r4, #32]
 8008166:	47b8      	blx	r7
 8008168:	89a2      	ldrh	r2, [r4, #12]
 800816a:	1c43      	adds	r3, r0, #1
 800816c:	d106      	bne.n	800817c <__sflush_r+0x6c>
 800816e:	6829      	ldr	r1, [r5, #0]
 8008170:	291d      	cmp	r1, #29
 8008172:	d82c      	bhi.n	80081ce <__sflush_r+0xbe>
 8008174:	4b2a      	ldr	r3, [pc, #168]	; (8008220 <__sflush_r+0x110>)
 8008176:	410b      	asrs	r3, r1
 8008178:	07db      	lsls	r3, r3, #31
 800817a:	d428      	bmi.n	80081ce <__sflush_r+0xbe>
 800817c:	2300      	movs	r3, #0
 800817e:	6063      	str	r3, [r4, #4]
 8008180:	6923      	ldr	r3, [r4, #16]
 8008182:	6023      	str	r3, [r4, #0]
 8008184:	04d2      	lsls	r2, r2, #19
 8008186:	d505      	bpl.n	8008194 <__sflush_r+0x84>
 8008188:	1c43      	adds	r3, r0, #1
 800818a:	d102      	bne.n	8008192 <__sflush_r+0x82>
 800818c:	682b      	ldr	r3, [r5, #0]
 800818e:	2b00      	cmp	r3, #0
 8008190:	d100      	bne.n	8008194 <__sflush_r+0x84>
 8008192:	6560      	str	r0, [r4, #84]	; 0x54
 8008194:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008196:	602e      	str	r6, [r5, #0]
 8008198:	2900      	cmp	r1, #0
 800819a:	d0c5      	beq.n	8008128 <__sflush_r+0x18>
 800819c:	0023      	movs	r3, r4
 800819e:	3344      	adds	r3, #68	; 0x44
 80081a0:	4299      	cmp	r1, r3
 80081a2:	d002      	beq.n	80081aa <__sflush_r+0x9a>
 80081a4:	0028      	movs	r0, r5
 80081a6:	f000 fe7d 	bl	8008ea4 <_free_r>
 80081aa:	2000      	movs	r0, #0
 80081ac:	6360      	str	r0, [r4, #52]	; 0x34
 80081ae:	e7bc      	b.n	800812a <__sflush_r+0x1a>
 80081b0:	2301      	movs	r3, #1
 80081b2:	0028      	movs	r0, r5
 80081b4:	47b8      	blx	r7
 80081b6:	1c43      	adds	r3, r0, #1
 80081b8:	d1c6      	bne.n	8008148 <__sflush_r+0x38>
 80081ba:	682b      	ldr	r3, [r5, #0]
 80081bc:	2b00      	cmp	r3, #0
 80081be:	d0c3      	beq.n	8008148 <__sflush_r+0x38>
 80081c0:	2b1d      	cmp	r3, #29
 80081c2:	d001      	beq.n	80081c8 <__sflush_r+0xb8>
 80081c4:	2b16      	cmp	r3, #22
 80081c6:	d101      	bne.n	80081cc <__sflush_r+0xbc>
 80081c8:	602e      	str	r6, [r5, #0]
 80081ca:	e7ad      	b.n	8008128 <__sflush_r+0x18>
 80081cc:	89a2      	ldrh	r2, [r4, #12]
 80081ce:	2340      	movs	r3, #64	; 0x40
 80081d0:	4313      	orrs	r3, r2
 80081d2:	81a3      	strh	r3, [r4, #12]
 80081d4:	e7a9      	b.n	800812a <__sflush_r+0x1a>
 80081d6:	690e      	ldr	r6, [r1, #16]
 80081d8:	2e00      	cmp	r6, #0
 80081da:	d0a5      	beq.n	8008128 <__sflush_r+0x18>
 80081dc:	680f      	ldr	r7, [r1, #0]
 80081de:	600e      	str	r6, [r1, #0]
 80081e0:	1bba      	subs	r2, r7, r6
 80081e2:	9201      	str	r2, [sp, #4]
 80081e4:	2200      	movs	r2, #0
 80081e6:	079b      	lsls	r3, r3, #30
 80081e8:	d100      	bne.n	80081ec <__sflush_r+0xdc>
 80081ea:	694a      	ldr	r2, [r1, #20]
 80081ec:	60a2      	str	r2, [r4, #8]
 80081ee:	9b01      	ldr	r3, [sp, #4]
 80081f0:	2b00      	cmp	r3, #0
 80081f2:	dd99      	ble.n	8008128 <__sflush_r+0x18>
 80081f4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80081f6:	0032      	movs	r2, r6
 80081f8:	001f      	movs	r7, r3
 80081fa:	0028      	movs	r0, r5
 80081fc:	9b01      	ldr	r3, [sp, #4]
 80081fe:	6a21      	ldr	r1, [r4, #32]
 8008200:	47b8      	blx	r7
 8008202:	2800      	cmp	r0, #0
 8008204:	dc06      	bgt.n	8008214 <__sflush_r+0x104>
 8008206:	2340      	movs	r3, #64	; 0x40
 8008208:	2001      	movs	r0, #1
 800820a:	89a2      	ldrh	r2, [r4, #12]
 800820c:	4240      	negs	r0, r0
 800820e:	4313      	orrs	r3, r2
 8008210:	81a3      	strh	r3, [r4, #12]
 8008212:	e78a      	b.n	800812a <__sflush_r+0x1a>
 8008214:	9b01      	ldr	r3, [sp, #4]
 8008216:	1836      	adds	r6, r6, r0
 8008218:	1a1b      	subs	r3, r3, r0
 800821a:	9301      	str	r3, [sp, #4]
 800821c:	e7e7      	b.n	80081ee <__sflush_r+0xde>
 800821e:	46c0      	nop			; (mov r8, r8)
 8008220:	dfbffffe 	.word	0xdfbffffe

08008224 <_fflush_r>:
 8008224:	690b      	ldr	r3, [r1, #16]
 8008226:	b570      	push	{r4, r5, r6, lr}
 8008228:	0005      	movs	r5, r0
 800822a:	000c      	movs	r4, r1
 800822c:	2b00      	cmp	r3, #0
 800822e:	d102      	bne.n	8008236 <_fflush_r+0x12>
 8008230:	2500      	movs	r5, #0
 8008232:	0028      	movs	r0, r5
 8008234:	bd70      	pop	{r4, r5, r6, pc}
 8008236:	2800      	cmp	r0, #0
 8008238:	d004      	beq.n	8008244 <_fflush_r+0x20>
 800823a:	6a03      	ldr	r3, [r0, #32]
 800823c:	2b00      	cmp	r3, #0
 800823e:	d101      	bne.n	8008244 <_fflush_r+0x20>
 8008240:	f7fd fbfa 	bl	8005a38 <__sinit>
 8008244:	220c      	movs	r2, #12
 8008246:	5ea3      	ldrsh	r3, [r4, r2]
 8008248:	2b00      	cmp	r3, #0
 800824a:	d0f1      	beq.n	8008230 <_fflush_r+0xc>
 800824c:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800824e:	07d2      	lsls	r2, r2, #31
 8008250:	d404      	bmi.n	800825c <_fflush_r+0x38>
 8008252:	059b      	lsls	r3, r3, #22
 8008254:	d402      	bmi.n	800825c <_fflush_r+0x38>
 8008256:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008258:	f7fe fb1e 	bl	8006898 <__retarget_lock_acquire_recursive>
 800825c:	0028      	movs	r0, r5
 800825e:	0021      	movs	r1, r4
 8008260:	f7ff ff56 	bl	8008110 <__sflush_r>
 8008264:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008266:	0005      	movs	r5, r0
 8008268:	07db      	lsls	r3, r3, #31
 800826a:	d4e2      	bmi.n	8008232 <_fflush_r+0xe>
 800826c:	89a3      	ldrh	r3, [r4, #12]
 800826e:	059b      	lsls	r3, r3, #22
 8008270:	d4df      	bmi.n	8008232 <_fflush_r+0xe>
 8008272:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008274:	f7fe fb11 	bl	800689a <__retarget_lock_release_recursive>
 8008278:	e7db      	b.n	8008232 <_fflush_r+0xe>
	...

0800827c <__malloc_lock>:
 800827c:	b510      	push	{r4, lr}
 800827e:	4802      	ldr	r0, [pc, #8]	; (8008288 <__malloc_lock+0xc>)
 8008280:	f7fe fb0a 	bl	8006898 <__retarget_lock_acquire_recursive>
 8008284:	bd10      	pop	{r4, pc}
 8008286:	46c0      	nop			; (mov r8, r8)
 8008288:	20000400 	.word	0x20000400

0800828c <__malloc_unlock>:
 800828c:	b510      	push	{r4, lr}
 800828e:	4802      	ldr	r0, [pc, #8]	; (8008298 <__malloc_unlock+0xc>)
 8008290:	f7fe fb03 	bl	800689a <__retarget_lock_release_recursive>
 8008294:	bd10      	pop	{r4, pc}
 8008296:	46c0      	nop			; (mov r8, r8)
 8008298:	20000400 	.word	0x20000400

0800829c <_Balloc>:
 800829c:	b570      	push	{r4, r5, r6, lr}
 800829e:	69c5      	ldr	r5, [r0, #28]
 80082a0:	0006      	movs	r6, r0
 80082a2:	000c      	movs	r4, r1
 80082a4:	2d00      	cmp	r5, #0
 80082a6:	d10e      	bne.n	80082c6 <_Balloc+0x2a>
 80082a8:	2010      	movs	r0, #16
 80082aa:	f7ff fe71 	bl	8007f90 <malloc>
 80082ae:	1e02      	subs	r2, r0, #0
 80082b0:	61f0      	str	r0, [r6, #28]
 80082b2:	d104      	bne.n	80082be <_Balloc+0x22>
 80082b4:	216b      	movs	r1, #107	; 0x6b
 80082b6:	4b19      	ldr	r3, [pc, #100]	; (800831c <_Balloc+0x80>)
 80082b8:	4819      	ldr	r0, [pc, #100]	; (8008320 <_Balloc+0x84>)
 80082ba:	f000 fda7 	bl	8008e0c <__assert_func>
 80082be:	6045      	str	r5, [r0, #4]
 80082c0:	6085      	str	r5, [r0, #8]
 80082c2:	6005      	str	r5, [r0, #0]
 80082c4:	60c5      	str	r5, [r0, #12]
 80082c6:	69f5      	ldr	r5, [r6, #28]
 80082c8:	68eb      	ldr	r3, [r5, #12]
 80082ca:	2b00      	cmp	r3, #0
 80082cc:	d013      	beq.n	80082f6 <_Balloc+0x5a>
 80082ce:	69f3      	ldr	r3, [r6, #28]
 80082d0:	00a2      	lsls	r2, r4, #2
 80082d2:	68db      	ldr	r3, [r3, #12]
 80082d4:	189b      	adds	r3, r3, r2
 80082d6:	6818      	ldr	r0, [r3, #0]
 80082d8:	2800      	cmp	r0, #0
 80082da:	d118      	bne.n	800830e <_Balloc+0x72>
 80082dc:	2101      	movs	r1, #1
 80082de:	000d      	movs	r5, r1
 80082e0:	40a5      	lsls	r5, r4
 80082e2:	1d6a      	adds	r2, r5, #5
 80082e4:	0030      	movs	r0, r6
 80082e6:	0092      	lsls	r2, r2, #2
 80082e8:	f000 fdae 	bl	8008e48 <_calloc_r>
 80082ec:	2800      	cmp	r0, #0
 80082ee:	d00c      	beq.n	800830a <_Balloc+0x6e>
 80082f0:	6044      	str	r4, [r0, #4]
 80082f2:	6085      	str	r5, [r0, #8]
 80082f4:	e00d      	b.n	8008312 <_Balloc+0x76>
 80082f6:	2221      	movs	r2, #33	; 0x21
 80082f8:	2104      	movs	r1, #4
 80082fa:	0030      	movs	r0, r6
 80082fc:	f000 fda4 	bl	8008e48 <_calloc_r>
 8008300:	69f3      	ldr	r3, [r6, #28]
 8008302:	60e8      	str	r0, [r5, #12]
 8008304:	68db      	ldr	r3, [r3, #12]
 8008306:	2b00      	cmp	r3, #0
 8008308:	d1e1      	bne.n	80082ce <_Balloc+0x32>
 800830a:	2000      	movs	r0, #0
 800830c:	bd70      	pop	{r4, r5, r6, pc}
 800830e:	6802      	ldr	r2, [r0, #0]
 8008310:	601a      	str	r2, [r3, #0]
 8008312:	2300      	movs	r3, #0
 8008314:	6103      	str	r3, [r0, #16]
 8008316:	60c3      	str	r3, [r0, #12]
 8008318:	e7f8      	b.n	800830c <_Balloc+0x70>
 800831a:	46c0      	nop			; (mov r8, r8)
 800831c:	0800972e 	.word	0x0800972e
 8008320:	0800981f 	.word	0x0800981f

08008324 <_Bfree>:
 8008324:	b570      	push	{r4, r5, r6, lr}
 8008326:	69c6      	ldr	r6, [r0, #28]
 8008328:	0005      	movs	r5, r0
 800832a:	000c      	movs	r4, r1
 800832c:	2e00      	cmp	r6, #0
 800832e:	d10e      	bne.n	800834e <_Bfree+0x2a>
 8008330:	2010      	movs	r0, #16
 8008332:	f7ff fe2d 	bl	8007f90 <malloc>
 8008336:	1e02      	subs	r2, r0, #0
 8008338:	61e8      	str	r0, [r5, #28]
 800833a:	d104      	bne.n	8008346 <_Bfree+0x22>
 800833c:	218f      	movs	r1, #143	; 0x8f
 800833e:	4b09      	ldr	r3, [pc, #36]	; (8008364 <_Bfree+0x40>)
 8008340:	4809      	ldr	r0, [pc, #36]	; (8008368 <_Bfree+0x44>)
 8008342:	f000 fd63 	bl	8008e0c <__assert_func>
 8008346:	6046      	str	r6, [r0, #4]
 8008348:	6086      	str	r6, [r0, #8]
 800834a:	6006      	str	r6, [r0, #0]
 800834c:	60c6      	str	r6, [r0, #12]
 800834e:	2c00      	cmp	r4, #0
 8008350:	d007      	beq.n	8008362 <_Bfree+0x3e>
 8008352:	69eb      	ldr	r3, [r5, #28]
 8008354:	6862      	ldr	r2, [r4, #4]
 8008356:	68db      	ldr	r3, [r3, #12]
 8008358:	0092      	lsls	r2, r2, #2
 800835a:	189b      	adds	r3, r3, r2
 800835c:	681a      	ldr	r2, [r3, #0]
 800835e:	6022      	str	r2, [r4, #0]
 8008360:	601c      	str	r4, [r3, #0]
 8008362:	bd70      	pop	{r4, r5, r6, pc}
 8008364:	0800972e 	.word	0x0800972e
 8008368:	0800981f 	.word	0x0800981f

0800836c <__multadd>:
 800836c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800836e:	000e      	movs	r6, r1
 8008370:	9001      	str	r0, [sp, #4]
 8008372:	000c      	movs	r4, r1
 8008374:	001d      	movs	r5, r3
 8008376:	2000      	movs	r0, #0
 8008378:	690f      	ldr	r7, [r1, #16]
 800837a:	3614      	adds	r6, #20
 800837c:	6833      	ldr	r3, [r6, #0]
 800837e:	3001      	adds	r0, #1
 8008380:	b299      	uxth	r1, r3
 8008382:	4351      	muls	r1, r2
 8008384:	0c1b      	lsrs	r3, r3, #16
 8008386:	4353      	muls	r3, r2
 8008388:	1949      	adds	r1, r1, r5
 800838a:	0c0d      	lsrs	r5, r1, #16
 800838c:	195b      	adds	r3, r3, r5
 800838e:	0c1d      	lsrs	r5, r3, #16
 8008390:	b289      	uxth	r1, r1
 8008392:	041b      	lsls	r3, r3, #16
 8008394:	185b      	adds	r3, r3, r1
 8008396:	c608      	stmia	r6!, {r3}
 8008398:	4287      	cmp	r7, r0
 800839a:	dcef      	bgt.n	800837c <__multadd+0x10>
 800839c:	2d00      	cmp	r5, #0
 800839e:	d022      	beq.n	80083e6 <__multadd+0x7a>
 80083a0:	68a3      	ldr	r3, [r4, #8]
 80083a2:	42bb      	cmp	r3, r7
 80083a4:	dc19      	bgt.n	80083da <__multadd+0x6e>
 80083a6:	6861      	ldr	r1, [r4, #4]
 80083a8:	9801      	ldr	r0, [sp, #4]
 80083aa:	3101      	adds	r1, #1
 80083ac:	f7ff ff76 	bl	800829c <_Balloc>
 80083b0:	1e06      	subs	r6, r0, #0
 80083b2:	d105      	bne.n	80083c0 <__multadd+0x54>
 80083b4:	0032      	movs	r2, r6
 80083b6:	21ba      	movs	r1, #186	; 0xba
 80083b8:	4b0c      	ldr	r3, [pc, #48]	; (80083ec <__multadd+0x80>)
 80083ba:	480d      	ldr	r0, [pc, #52]	; (80083f0 <__multadd+0x84>)
 80083bc:	f000 fd26 	bl	8008e0c <__assert_func>
 80083c0:	0021      	movs	r1, r4
 80083c2:	6922      	ldr	r2, [r4, #16]
 80083c4:	310c      	adds	r1, #12
 80083c6:	3202      	adds	r2, #2
 80083c8:	0092      	lsls	r2, r2, #2
 80083ca:	300c      	adds	r0, #12
 80083cc:	f7fe fa71 	bl	80068b2 <memcpy>
 80083d0:	0021      	movs	r1, r4
 80083d2:	9801      	ldr	r0, [sp, #4]
 80083d4:	f7ff ffa6 	bl	8008324 <_Bfree>
 80083d8:	0034      	movs	r4, r6
 80083da:	1d3b      	adds	r3, r7, #4
 80083dc:	009b      	lsls	r3, r3, #2
 80083de:	18e3      	adds	r3, r4, r3
 80083e0:	605d      	str	r5, [r3, #4]
 80083e2:	1c7b      	adds	r3, r7, #1
 80083e4:	6123      	str	r3, [r4, #16]
 80083e6:	0020      	movs	r0, r4
 80083e8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80083ea:	46c0      	nop			; (mov r8, r8)
 80083ec:	0800979d 	.word	0x0800979d
 80083f0:	0800981f 	.word	0x0800981f

080083f4 <__s2b>:
 80083f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80083f6:	0006      	movs	r6, r0
 80083f8:	0018      	movs	r0, r3
 80083fa:	000c      	movs	r4, r1
 80083fc:	3008      	adds	r0, #8
 80083fe:	2109      	movs	r1, #9
 8008400:	9301      	str	r3, [sp, #4]
 8008402:	0015      	movs	r5, r2
 8008404:	f7f7 ff26 	bl	8000254 <__divsi3>
 8008408:	2301      	movs	r3, #1
 800840a:	2100      	movs	r1, #0
 800840c:	4283      	cmp	r3, r0
 800840e:	db0a      	blt.n	8008426 <__s2b+0x32>
 8008410:	0030      	movs	r0, r6
 8008412:	f7ff ff43 	bl	800829c <_Balloc>
 8008416:	1e01      	subs	r1, r0, #0
 8008418:	d108      	bne.n	800842c <__s2b+0x38>
 800841a:	000a      	movs	r2, r1
 800841c:	4b19      	ldr	r3, [pc, #100]	; (8008484 <__s2b+0x90>)
 800841e:	481a      	ldr	r0, [pc, #104]	; (8008488 <__s2b+0x94>)
 8008420:	31d3      	adds	r1, #211	; 0xd3
 8008422:	f000 fcf3 	bl	8008e0c <__assert_func>
 8008426:	005b      	lsls	r3, r3, #1
 8008428:	3101      	adds	r1, #1
 800842a:	e7ef      	b.n	800840c <__s2b+0x18>
 800842c:	9b08      	ldr	r3, [sp, #32]
 800842e:	6143      	str	r3, [r0, #20]
 8008430:	2301      	movs	r3, #1
 8008432:	6103      	str	r3, [r0, #16]
 8008434:	2d09      	cmp	r5, #9
 8008436:	dd18      	ble.n	800846a <__s2b+0x76>
 8008438:	0023      	movs	r3, r4
 800843a:	3309      	adds	r3, #9
 800843c:	001f      	movs	r7, r3
 800843e:	9300      	str	r3, [sp, #0]
 8008440:	1964      	adds	r4, r4, r5
 8008442:	783b      	ldrb	r3, [r7, #0]
 8008444:	220a      	movs	r2, #10
 8008446:	0030      	movs	r0, r6
 8008448:	3b30      	subs	r3, #48	; 0x30
 800844a:	f7ff ff8f 	bl	800836c <__multadd>
 800844e:	3701      	adds	r7, #1
 8008450:	0001      	movs	r1, r0
 8008452:	42a7      	cmp	r7, r4
 8008454:	d1f5      	bne.n	8008442 <__s2b+0x4e>
 8008456:	002c      	movs	r4, r5
 8008458:	9b00      	ldr	r3, [sp, #0]
 800845a:	3c08      	subs	r4, #8
 800845c:	191c      	adds	r4, r3, r4
 800845e:	002f      	movs	r7, r5
 8008460:	9b01      	ldr	r3, [sp, #4]
 8008462:	429f      	cmp	r7, r3
 8008464:	db04      	blt.n	8008470 <__s2b+0x7c>
 8008466:	0008      	movs	r0, r1
 8008468:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800846a:	2509      	movs	r5, #9
 800846c:	340a      	adds	r4, #10
 800846e:	e7f6      	b.n	800845e <__s2b+0x6a>
 8008470:	1b63      	subs	r3, r4, r5
 8008472:	5ddb      	ldrb	r3, [r3, r7]
 8008474:	220a      	movs	r2, #10
 8008476:	0030      	movs	r0, r6
 8008478:	3b30      	subs	r3, #48	; 0x30
 800847a:	f7ff ff77 	bl	800836c <__multadd>
 800847e:	3701      	adds	r7, #1
 8008480:	0001      	movs	r1, r0
 8008482:	e7ed      	b.n	8008460 <__s2b+0x6c>
 8008484:	0800979d 	.word	0x0800979d
 8008488:	0800981f 	.word	0x0800981f

0800848c <__hi0bits>:
 800848c:	0003      	movs	r3, r0
 800848e:	0c02      	lsrs	r2, r0, #16
 8008490:	2000      	movs	r0, #0
 8008492:	4282      	cmp	r2, r0
 8008494:	d101      	bne.n	800849a <__hi0bits+0xe>
 8008496:	041b      	lsls	r3, r3, #16
 8008498:	3010      	adds	r0, #16
 800849a:	0e1a      	lsrs	r2, r3, #24
 800849c:	d101      	bne.n	80084a2 <__hi0bits+0x16>
 800849e:	3008      	adds	r0, #8
 80084a0:	021b      	lsls	r3, r3, #8
 80084a2:	0f1a      	lsrs	r2, r3, #28
 80084a4:	d101      	bne.n	80084aa <__hi0bits+0x1e>
 80084a6:	3004      	adds	r0, #4
 80084a8:	011b      	lsls	r3, r3, #4
 80084aa:	0f9a      	lsrs	r2, r3, #30
 80084ac:	d101      	bne.n	80084b2 <__hi0bits+0x26>
 80084ae:	3002      	adds	r0, #2
 80084b0:	009b      	lsls	r3, r3, #2
 80084b2:	2b00      	cmp	r3, #0
 80084b4:	db03      	blt.n	80084be <__hi0bits+0x32>
 80084b6:	3001      	adds	r0, #1
 80084b8:	005b      	lsls	r3, r3, #1
 80084ba:	d400      	bmi.n	80084be <__hi0bits+0x32>
 80084bc:	2020      	movs	r0, #32
 80084be:	4770      	bx	lr

080084c0 <__lo0bits>:
 80084c0:	6803      	ldr	r3, [r0, #0]
 80084c2:	0001      	movs	r1, r0
 80084c4:	2207      	movs	r2, #7
 80084c6:	0018      	movs	r0, r3
 80084c8:	4010      	ands	r0, r2
 80084ca:	4213      	tst	r3, r2
 80084cc:	d00d      	beq.n	80084ea <__lo0bits+0x2a>
 80084ce:	3a06      	subs	r2, #6
 80084d0:	2000      	movs	r0, #0
 80084d2:	4213      	tst	r3, r2
 80084d4:	d105      	bne.n	80084e2 <__lo0bits+0x22>
 80084d6:	3002      	adds	r0, #2
 80084d8:	4203      	tst	r3, r0
 80084da:	d003      	beq.n	80084e4 <__lo0bits+0x24>
 80084dc:	40d3      	lsrs	r3, r2
 80084de:	0010      	movs	r0, r2
 80084e0:	600b      	str	r3, [r1, #0]
 80084e2:	4770      	bx	lr
 80084e4:	089b      	lsrs	r3, r3, #2
 80084e6:	600b      	str	r3, [r1, #0]
 80084e8:	e7fb      	b.n	80084e2 <__lo0bits+0x22>
 80084ea:	b29a      	uxth	r2, r3
 80084ec:	2a00      	cmp	r2, #0
 80084ee:	d101      	bne.n	80084f4 <__lo0bits+0x34>
 80084f0:	2010      	movs	r0, #16
 80084f2:	0c1b      	lsrs	r3, r3, #16
 80084f4:	b2da      	uxtb	r2, r3
 80084f6:	2a00      	cmp	r2, #0
 80084f8:	d101      	bne.n	80084fe <__lo0bits+0x3e>
 80084fa:	3008      	adds	r0, #8
 80084fc:	0a1b      	lsrs	r3, r3, #8
 80084fe:	071a      	lsls	r2, r3, #28
 8008500:	d101      	bne.n	8008506 <__lo0bits+0x46>
 8008502:	3004      	adds	r0, #4
 8008504:	091b      	lsrs	r3, r3, #4
 8008506:	079a      	lsls	r2, r3, #30
 8008508:	d101      	bne.n	800850e <__lo0bits+0x4e>
 800850a:	3002      	adds	r0, #2
 800850c:	089b      	lsrs	r3, r3, #2
 800850e:	07da      	lsls	r2, r3, #31
 8008510:	d4e9      	bmi.n	80084e6 <__lo0bits+0x26>
 8008512:	3001      	adds	r0, #1
 8008514:	085b      	lsrs	r3, r3, #1
 8008516:	d1e6      	bne.n	80084e6 <__lo0bits+0x26>
 8008518:	2020      	movs	r0, #32
 800851a:	e7e2      	b.n	80084e2 <__lo0bits+0x22>

0800851c <__i2b>:
 800851c:	b510      	push	{r4, lr}
 800851e:	000c      	movs	r4, r1
 8008520:	2101      	movs	r1, #1
 8008522:	f7ff febb 	bl	800829c <_Balloc>
 8008526:	2800      	cmp	r0, #0
 8008528:	d107      	bne.n	800853a <__i2b+0x1e>
 800852a:	2146      	movs	r1, #70	; 0x46
 800852c:	4c05      	ldr	r4, [pc, #20]	; (8008544 <__i2b+0x28>)
 800852e:	0002      	movs	r2, r0
 8008530:	4b05      	ldr	r3, [pc, #20]	; (8008548 <__i2b+0x2c>)
 8008532:	0020      	movs	r0, r4
 8008534:	31ff      	adds	r1, #255	; 0xff
 8008536:	f000 fc69 	bl	8008e0c <__assert_func>
 800853a:	2301      	movs	r3, #1
 800853c:	6144      	str	r4, [r0, #20]
 800853e:	6103      	str	r3, [r0, #16]
 8008540:	bd10      	pop	{r4, pc}
 8008542:	46c0      	nop			; (mov r8, r8)
 8008544:	0800981f 	.word	0x0800981f
 8008548:	0800979d 	.word	0x0800979d

0800854c <__multiply>:
 800854c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800854e:	0015      	movs	r5, r2
 8008550:	690a      	ldr	r2, [r1, #16]
 8008552:	692b      	ldr	r3, [r5, #16]
 8008554:	000c      	movs	r4, r1
 8008556:	b08b      	sub	sp, #44	; 0x2c
 8008558:	429a      	cmp	r2, r3
 800855a:	da01      	bge.n	8008560 <__multiply+0x14>
 800855c:	002c      	movs	r4, r5
 800855e:	000d      	movs	r5, r1
 8008560:	6927      	ldr	r7, [r4, #16]
 8008562:	692e      	ldr	r6, [r5, #16]
 8008564:	6861      	ldr	r1, [r4, #4]
 8008566:	19bb      	adds	r3, r7, r6
 8008568:	9303      	str	r3, [sp, #12]
 800856a:	68a3      	ldr	r3, [r4, #8]
 800856c:	19ba      	adds	r2, r7, r6
 800856e:	4293      	cmp	r3, r2
 8008570:	da00      	bge.n	8008574 <__multiply+0x28>
 8008572:	3101      	adds	r1, #1
 8008574:	f7ff fe92 	bl	800829c <_Balloc>
 8008578:	9002      	str	r0, [sp, #8]
 800857a:	2800      	cmp	r0, #0
 800857c:	d106      	bne.n	800858c <__multiply+0x40>
 800857e:	21b1      	movs	r1, #177	; 0xb1
 8008580:	4b48      	ldr	r3, [pc, #288]	; (80086a4 <__multiply+0x158>)
 8008582:	4849      	ldr	r0, [pc, #292]	; (80086a8 <__multiply+0x15c>)
 8008584:	9a02      	ldr	r2, [sp, #8]
 8008586:	0049      	lsls	r1, r1, #1
 8008588:	f000 fc40 	bl	8008e0c <__assert_func>
 800858c:	9b02      	ldr	r3, [sp, #8]
 800858e:	2200      	movs	r2, #0
 8008590:	3314      	adds	r3, #20
 8008592:	469c      	mov	ip, r3
 8008594:	19bb      	adds	r3, r7, r6
 8008596:	009b      	lsls	r3, r3, #2
 8008598:	4463      	add	r3, ip
 800859a:	9304      	str	r3, [sp, #16]
 800859c:	4663      	mov	r3, ip
 800859e:	9904      	ldr	r1, [sp, #16]
 80085a0:	428b      	cmp	r3, r1
 80085a2:	d32a      	bcc.n	80085fa <__multiply+0xae>
 80085a4:	0023      	movs	r3, r4
 80085a6:	00bf      	lsls	r7, r7, #2
 80085a8:	3314      	adds	r3, #20
 80085aa:	3514      	adds	r5, #20
 80085ac:	9308      	str	r3, [sp, #32]
 80085ae:	00b6      	lsls	r6, r6, #2
 80085b0:	19db      	adds	r3, r3, r7
 80085b2:	9305      	str	r3, [sp, #20]
 80085b4:	19ab      	adds	r3, r5, r6
 80085b6:	9309      	str	r3, [sp, #36]	; 0x24
 80085b8:	2304      	movs	r3, #4
 80085ba:	9306      	str	r3, [sp, #24]
 80085bc:	0023      	movs	r3, r4
 80085be:	9a05      	ldr	r2, [sp, #20]
 80085c0:	3315      	adds	r3, #21
 80085c2:	9501      	str	r5, [sp, #4]
 80085c4:	429a      	cmp	r2, r3
 80085c6:	d305      	bcc.n	80085d4 <__multiply+0x88>
 80085c8:	1b13      	subs	r3, r2, r4
 80085ca:	3b15      	subs	r3, #21
 80085cc:	089b      	lsrs	r3, r3, #2
 80085ce:	3301      	adds	r3, #1
 80085d0:	009b      	lsls	r3, r3, #2
 80085d2:	9306      	str	r3, [sp, #24]
 80085d4:	9b01      	ldr	r3, [sp, #4]
 80085d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80085d8:	4293      	cmp	r3, r2
 80085da:	d310      	bcc.n	80085fe <__multiply+0xb2>
 80085dc:	9b03      	ldr	r3, [sp, #12]
 80085de:	2b00      	cmp	r3, #0
 80085e0:	dd05      	ble.n	80085ee <__multiply+0xa2>
 80085e2:	9b04      	ldr	r3, [sp, #16]
 80085e4:	3b04      	subs	r3, #4
 80085e6:	9304      	str	r3, [sp, #16]
 80085e8:	681b      	ldr	r3, [r3, #0]
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d056      	beq.n	800869c <__multiply+0x150>
 80085ee:	9b02      	ldr	r3, [sp, #8]
 80085f0:	9a03      	ldr	r2, [sp, #12]
 80085f2:	0018      	movs	r0, r3
 80085f4:	611a      	str	r2, [r3, #16]
 80085f6:	b00b      	add	sp, #44	; 0x2c
 80085f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80085fa:	c304      	stmia	r3!, {r2}
 80085fc:	e7cf      	b.n	800859e <__multiply+0x52>
 80085fe:	9b01      	ldr	r3, [sp, #4]
 8008600:	6818      	ldr	r0, [r3, #0]
 8008602:	b280      	uxth	r0, r0
 8008604:	2800      	cmp	r0, #0
 8008606:	d01e      	beq.n	8008646 <__multiply+0xfa>
 8008608:	4667      	mov	r7, ip
 800860a:	2500      	movs	r5, #0
 800860c:	9e08      	ldr	r6, [sp, #32]
 800860e:	ce02      	ldmia	r6!, {r1}
 8008610:	683b      	ldr	r3, [r7, #0]
 8008612:	9307      	str	r3, [sp, #28]
 8008614:	b28b      	uxth	r3, r1
 8008616:	4343      	muls	r3, r0
 8008618:	001a      	movs	r2, r3
 800861a:	466b      	mov	r3, sp
 800861c:	8b9b      	ldrh	r3, [r3, #28]
 800861e:	18d3      	adds	r3, r2, r3
 8008620:	195b      	adds	r3, r3, r5
 8008622:	0c0d      	lsrs	r5, r1, #16
 8008624:	4345      	muls	r5, r0
 8008626:	9a07      	ldr	r2, [sp, #28]
 8008628:	0c11      	lsrs	r1, r2, #16
 800862a:	1869      	adds	r1, r5, r1
 800862c:	0c1a      	lsrs	r2, r3, #16
 800862e:	188a      	adds	r2, r1, r2
 8008630:	b29b      	uxth	r3, r3
 8008632:	0c15      	lsrs	r5, r2, #16
 8008634:	0412      	lsls	r2, r2, #16
 8008636:	431a      	orrs	r2, r3
 8008638:	9b05      	ldr	r3, [sp, #20]
 800863a:	c704      	stmia	r7!, {r2}
 800863c:	42b3      	cmp	r3, r6
 800863e:	d8e6      	bhi.n	800860e <__multiply+0xc2>
 8008640:	4663      	mov	r3, ip
 8008642:	9a06      	ldr	r2, [sp, #24]
 8008644:	509d      	str	r5, [r3, r2]
 8008646:	9b01      	ldr	r3, [sp, #4]
 8008648:	6818      	ldr	r0, [r3, #0]
 800864a:	0c00      	lsrs	r0, r0, #16
 800864c:	d020      	beq.n	8008690 <__multiply+0x144>
 800864e:	4663      	mov	r3, ip
 8008650:	0025      	movs	r5, r4
 8008652:	4661      	mov	r1, ip
 8008654:	2700      	movs	r7, #0
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	3514      	adds	r5, #20
 800865a:	682a      	ldr	r2, [r5, #0]
 800865c:	680e      	ldr	r6, [r1, #0]
 800865e:	b292      	uxth	r2, r2
 8008660:	4342      	muls	r2, r0
 8008662:	0c36      	lsrs	r6, r6, #16
 8008664:	1992      	adds	r2, r2, r6
 8008666:	19d2      	adds	r2, r2, r7
 8008668:	0416      	lsls	r6, r2, #16
 800866a:	b29b      	uxth	r3, r3
 800866c:	431e      	orrs	r6, r3
 800866e:	600e      	str	r6, [r1, #0]
 8008670:	cd40      	ldmia	r5!, {r6}
 8008672:	684b      	ldr	r3, [r1, #4]
 8008674:	0c36      	lsrs	r6, r6, #16
 8008676:	4346      	muls	r6, r0
 8008678:	b29b      	uxth	r3, r3
 800867a:	0c12      	lsrs	r2, r2, #16
 800867c:	18f3      	adds	r3, r6, r3
 800867e:	189b      	adds	r3, r3, r2
 8008680:	9a05      	ldr	r2, [sp, #20]
 8008682:	0c1f      	lsrs	r7, r3, #16
 8008684:	3104      	adds	r1, #4
 8008686:	42aa      	cmp	r2, r5
 8008688:	d8e7      	bhi.n	800865a <__multiply+0x10e>
 800868a:	4662      	mov	r2, ip
 800868c:	9906      	ldr	r1, [sp, #24]
 800868e:	5053      	str	r3, [r2, r1]
 8008690:	9b01      	ldr	r3, [sp, #4]
 8008692:	3304      	adds	r3, #4
 8008694:	9301      	str	r3, [sp, #4]
 8008696:	2304      	movs	r3, #4
 8008698:	449c      	add	ip, r3
 800869a:	e79b      	b.n	80085d4 <__multiply+0x88>
 800869c:	9b03      	ldr	r3, [sp, #12]
 800869e:	3b01      	subs	r3, #1
 80086a0:	9303      	str	r3, [sp, #12]
 80086a2:	e79b      	b.n	80085dc <__multiply+0x90>
 80086a4:	0800979d 	.word	0x0800979d
 80086a8:	0800981f 	.word	0x0800981f

080086ac <__pow5mult>:
 80086ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80086ae:	2303      	movs	r3, #3
 80086b0:	0015      	movs	r5, r2
 80086b2:	0007      	movs	r7, r0
 80086b4:	000e      	movs	r6, r1
 80086b6:	401a      	ands	r2, r3
 80086b8:	421d      	tst	r5, r3
 80086ba:	d008      	beq.n	80086ce <__pow5mult+0x22>
 80086bc:	4925      	ldr	r1, [pc, #148]	; (8008754 <__pow5mult+0xa8>)
 80086be:	3a01      	subs	r2, #1
 80086c0:	0092      	lsls	r2, r2, #2
 80086c2:	5852      	ldr	r2, [r2, r1]
 80086c4:	2300      	movs	r3, #0
 80086c6:	0031      	movs	r1, r6
 80086c8:	f7ff fe50 	bl	800836c <__multadd>
 80086cc:	0006      	movs	r6, r0
 80086ce:	10ad      	asrs	r5, r5, #2
 80086d0:	d03d      	beq.n	800874e <__pow5mult+0xa2>
 80086d2:	69fc      	ldr	r4, [r7, #28]
 80086d4:	2c00      	cmp	r4, #0
 80086d6:	d10f      	bne.n	80086f8 <__pow5mult+0x4c>
 80086d8:	2010      	movs	r0, #16
 80086da:	f7ff fc59 	bl	8007f90 <malloc>
 80086de:	1e02      	subs	r2, r0, #0
 80086e0:	61f8      	str	r0, [r7, #28]
 80086e2:	d105      	bne.n	80086f0 <__pow5mult+0x44>
 80086e4:	21b4      	movs	r1, #180	; 0xb4
 80086e6:	4b1c      	ldr	r3, [pc, #112]	; (8008758 <__pow5mult+0xac>)
 80086e8:	481c      	ldr	r0, [pc, #112]	; (800875c <__pow5mult+0xb0>)
 80086ea:	31ff      	adds	r1, #255	; 0xff
 80086ec:	f000 fb8e 	bl	8008e0c <__assert_func>
 80086f0:	6044      	str	r4, [r0, #4]
 80086f2:	6084      	str	r4, [r0, #8]
 80086f4:	6004      	str	r4, [r0, #0]
 80086f6:	60c4      	str	r4, [r0, #12]
 80086f8:	69fb      	ldr	r3, [r7, #28]
 80086fa:	689c      	ldr	r4, [r3, #8]
 80086fc:	9301      	str	r3, [sp, #4]
 80086fe:	2c00      	cmp	r4, #0
 8008700:	d108      	bne.n	8008714 <__pow5mult+0x68>
 8008702:	0038      	movs	r0, r7
 8008704:	4916      	ldr	r1, [pc, #88]	; (8008760 <__pow5mult+0xb4>)
 8008706:	f7ff ff09 	bl	800851c <__i2b>
 800870a:	9b01      	ldr	r3, [sp, #4]
 800870c:	0004      	movs	r4, r0
 800870e:	6098      	str	r0, [r3, #8]
 8008710:	2300      	movs	r3, #0
 8008712:	6003      	str	r3, [r0, #0]
 8008714:	2301      	movs	r3, #1
 8008716:	421d      	tst	r5, r3
 8008718:	d00a      	beq.n	8008730 <__pow5mult+0x84>
 800871a:	0031      	movs	r1, r6
 800871c:	0022      	movs	r2, r4
 800871e:	0038      	movs	r0, r7
 8008720:	f7ff ff14 	bl	800854c <__multiply>
 8008724:	0031      	movs	r1, r6
 8008726:	9001      	str	r0, [sp, #4]
 8008728:	0038      	movs	r0, r7
 800872a:	f7ff fdfb 	bl	8008324 <_Bfree>
 800872e:	9e01      	ldr	r6, [sp, #4]
 8008730:	106d      	asrs	r5, r5, #1
 8008732:	d00c      	beq.n	800874e <__pow5mult+0xa2>
 8008734:	6820      	ldr	r0, [r4, #0]
 8008736:	2800      	cmp	r0, #0
 8008738:	d107      	bne.n	800874a <__pow5mult+0x9e>
 800873a:	0022      	movs	r2, r4
 800873c:	0021      	movs	r1, r4
 800873e:	0038      	movs	r0, r7
 8008740:	f7ff ff04 	bl	800854c <__multiply>
 8008744:	2300      	movs	r3, #0
 8008746:	6020      	str	r0, [r4, #0]
 8008748:	6003      	str	r3, [r0, #0]
 800874a:	0004      	movs	r4, r0
 800874c:	e7e2      	b.n	8008714 <__pow5mult+0x68>
 800874e:	0030      	movs	r0, r6
 8008750:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008752:	46c0      	nop			; (mov r8, r8)
 8008754:	08009968 	.word	0x08009968
 8008758:	0800972e 	.word	0x0800972e
 800875c:	0800981f 	.word	0x0800981f
 8008760:	00000271 	.word	0x00000271

08008764 <__lshift>:
 8008764:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008766:	000c      	movs	r4, r1
 8008768:	0017      	movs	r7, r2
 800876a:	6923      	ldr	r3, [r4, #16]
 800876c:	1155      	asrs	r5, r2, #5
 800876e:	b087      	sub	sp, #28
 8008770:	18eb      	adds	r3, r5, r3
 8008772:	9302      	str	r3, [sp, #8]
 8008774:	3301      	adds	r3, #1
 8008776:	9301      	str	r3, [sp, #4]
 8008778:	6849      	ldr	r1, [r1, #4]
 800877a:	68a3      	ldr	r3, [r4, #8]
 800877c:	9004      	str	r0, [sp, #16]
 800877e:	9a01      	ldr	r2, [sp, #4]
 8008780:	4293      	cmp	r3, r2
 8008782:	db10      	blt.n	80087a6 <__lshift+0x42>
 8008784:	9804      	ldr	r0, [sp, #16]
 8008786:	f7ff fd89 	bl	800829c <_Balloc>
 800878a:	2300      	movs	r3, #0
 800878c:	0002      	movs	r2, r0
 800878e:	0006      	movs	r6, r0
 8008790:	0019      	movs	r1, r3
 8008792:	3214      	adds	r2, #20
 8008794:	4298      	cmp	r0, r3
 8008796:	d10c      	bne.n	80087b2 <__lshift+0x4e>
 8008798:	31df      	adds	r1, #223	; 0xdf
 800879a:	0032      	movs	r2, r6
 800879c:	4b26      	ldr	r3, [pc, #152]	; (8008838 <__lshift+0xd4>)
 800879e:	4827      	ldr	r0, [pc, #156]	; (800883c <__lshift+0xd8>)
 80087a0:	31ff      	adds	r1, #255	; 0xff
 80087a2:	f000 fb33 	bl	8008e0c <__assert_func>
 80087a6:	3101      	adds	r1, #1
 80087a8:	005b      	lsls	r3, r3, #1
 80087aa:	e7e8      	b.n	800877e <__lshift+0x1a>
 80087ac:	0098      	lsls	r0, r3, #2
 80087ae:	5011      	str	r1, [r2, r0]
 80087b0:	3301      	adds	r3, #1
 80087b2:	42ab      	cmp	r3, r5
 80087b4:	dbfa      	blt.n	80087ac <__lshift+0x48>
 80087b6:	43eb      	mvns	r3, r5
 80087b8:	17db      	asrs	r3, r3, #31
 80087ba:	401d      	ands	r5, r3
 80087bc:	211f      	movs	r1, #31
 80087be:	0023      	movs	r3, r4
 80087c0:	0038      	movs	r0, r7
 80087c2:	00ad      	lsls	r5, r5, #2
 80087c4:	1955      	adds	r5, r2, r5
 80087c6:	6922      	ldr	r2, [r4, #16]
 80087c8:	3314      	adds	r3, #20
 80087ca:	0092      	lsls	r2, r2, #2
 80087cc:	4008      	ands	r0, r1
 80087ce:	4684      	mov	ip, r0
 80087d0:	189a      	adds	r2, r3, r2
 80087d2:	420f      	tst	r7, r1
 80087d4:	d02a      	beq.n	800882c <__lshift+0xc8>
 80087d6:	3101      	adds	r1, #1
 80087d8:	1a09      	subs	r1, r1, r0
 80087da:	9105      	str	r1, [sp, #20]
 80087dc:	2100      	movs	r1, #0
 80087de:	9503      	str	r5, [sp, #12]
 80087e0:	4667      	mov	r7, ip
 80087e2:	6818      	ldr	r0, [r3, #0]
 80087e4:	40b8      	lsls	r0, r7
 80087e6:	4308      	orrs	r0, r1
 80087e8:	9903      	ldr	r1, [sp, #12]
 80087ea:	c101      	stmia	r1!, {r0}
 80087ec:	9103      	str	r1, [sp, #12]
 80087ee:	9805      	ldr	r0, [sp, #20]
 80087f0:	cb02      	ldmia	r3!, {r1}
 80087f2:	40c1      	lsrs	r1, r0
 80087f4:	429a      	cmp	r2, r3
 80087f6:	d8f3      	bhi.n	80087e0 <__lshift+0x7c>
 80087f8:	0020      	movs	r0, r4
 80087fa:	3015      	adds	r0, #21
 80087fc:	2304      	movs	r3, #4
 80087fe:	4282      	cmp	r2, r0
 8008800:	d304      	bcc.n	800880c <__lshift+0xa8>
 8008802:	1b13      	subs	r3, r2, r4
 8008804:	3b15      	subs	r3, #21
 8008806:	089b      	lsrs	r3, r3, #2
 8008808:	3301      	adds	r3, #1
 800880a:	009b      	lsls	r3, r3, #2
 800880c:	50e9      	str	r1, [r5, r3]
 800880e:	2900      	cmp	r1, #0
 8008810:	d002      	beq.n	8008818 <__lshift+0xb4>
 8008812:	9b02      	ldr	r3, [sp, #8]
 8008814:	3302      	adds	r3, #2
 8008816:	9301      	str	r3, [sp, #4]
 8008818:	9b01      	ldr	r3, [sp, #4]
 800881a:	9804      	ldr	r0, [sp, #16]
 800881c:	3b01      	subs	r3, #1
 800881e:	0021      	movs	r1, r4
 8008820:	6133      	str	r3, [r6, #16]
 8008822:	f7ff fd7f 	bl	8008324 <_Bfree>
 8008826:	0030      	movs	r0, r6
 8008828:	b007      	add	sp, #28
 800882a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800882c:	cb02      	ldmia	r3!, {r1}
 800882e:	c502      	stmia	r5!, {r1}
 8008830:	429a      	cmp	r2, r3
 8008832:	d8fb      	bhi.n	800882c <__lshift+0xc8>
 8008834:	e7f0      	b.n	8008818 <__lshift+0xb4>
 8008836:	46c0      	nop			; (mov r8, r8)
 8008838:	0800979d 	.word	0x0800979d
 800883c:	0800981f 	.word	0x0800981f

08008840 <__mcmp>:
 8008840:	b530      	push	{r4, r5, lr}
 8008842:	690b      	ldr	r3, [r1, #16]
 8008844:	6904      	ldr	r4, [r0, #16]
 8008846:	0002      	movs	r2, r0
 8008848:	1ae0      	subs	r0, r4, r3
 800884a:	429c      	cmp	r4, r3
 800884c:	d10e      	bne.n	800886c <__mcmp+0x2c>
 800884e:	3214      	adds	r2, #20
 8008850:	009b      	lsls	r3, r3, #2
 8008852:	3114      	adds	r1, #20
 8008854:	0014      	movs	r4, r2
 8008856:	18c9      	adds	r1, r1, r3
 8008858:	18d2      	adds	r2, r2, r3
 800885a:	3a04      	subs	r2, #4
 800885c:	3904      	subs	r1, #4
 800885e:	6815      	ldr	r5, [r2, #0]
 8008860:	680b      	ldr	r3, [r1, #0]
 8008862:	429d      	cmp	r5, r3
 8008864:	d003      	beq.n	800886e <__mcmp+0x2e>
 8008866:	2001      	movs	r0, #1
 8008868:	429d      	cmp	r5, r3
 800886a:	d303      	bcc.n	8008874 <__mcmp+0x34>
 800886c:	bd30      	pop	{r4, r5, pc}
 800886e:	4294      	cmp	r4, r2
 8008870:	d3f3      	bcc.n	800885a <__mcmp+0x1a>
 8008872:	e7fb      	b.n	800886c <__mcmp+0x2c>
 8008874:	4240      	negs	r0, r0
 8008876:	e7f9      	b.n	800886c <__mcmp+0x2c>

08008878 <__mdiff>:
 8008878:	b5f0      	push	{r4, r5, r6, r7, lr}
 800887a:	000e      	movs	r6, r1
 800887c:	0007      	movs	r7, r0
 800887e:	0011      	movs	r1, r2
 8008880:	0030      	movs	r0, r6
 8008882:	b087      	sub	sp, #28
 8008884:	0014      	movs	r4, r2
 8008886:	f7ff ffdb 	bl	8008840 <__mcmp>
 800888a:	1e05      	subs	r5, r0, #0
 800888c:	d110      	bne.n	80088b0 <__mdiff+0x38>
 800888e:	0001      	movs	r1, r0
 8008890:	0038      	movs	r0, r7
 8008892:	f7ff fd03 	bl	800829c <_Balloc>
 8008896:	1e02      	subs	r2, r0, #0
 8008898:	d104      	bne.n	80088a4 <__mdiff+0x2c>
 800889a:	4b3f      	ldr	r3, [pc, #252]	; (8008998 <__mdiff+0x120>)
 800889c:	483f      	ldr	r0, [pc, #252]	; (800899c <__mdiff+0x124>)
 800889e:	4940      	ldr	r1, [pc, #256]	; (80089a0 <__mdiff+0x128>)
 80088a0:	f000 fab4 	bl	8008e0c <__assert_func>
 80088a4:	2301      	movs	r3, #1
 80088a6:	6145      	str	r5, [r0, #20]
 80088a8:	6103      	str	r3, [r0, #16]
 80088aa:	0010      	movs	r0, r2
 80088ac:	b007      	add	sp, #28
 80088ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088b0:	2301      	movs	r3, #1
 80088b2:	9301      	str	r3, [sp, #4]
 80088b4:	2800      	cmp	r0, #0
 80088b6:	db04      	blt.n	80088c2 <__mdiff+0x4a>
 80088b8:	0023      	movs	r3, r4
 80088ba:	0034      	movs	r4, r6
 80088bc:	001e      	movs	r6, r3
 80088be:	2300      	movs	r3, #0
 80088c0:	9301      	str	r3, [sp, #4]
 80088c2:	0038      	movs	r0, r7
 80088c4:	6861      	ldr	r1, [r4, #4]
 80088c6:	f7ff fce9 	bl	800829c <_Balloc>
 80088ca:	1e02      	subs	r2, r0, #0
 80088cc:	d103      	bne.n	80088d6 <__mdiff+0x5e>
 80088ce:	4b32      	ldr	r3, [pc, #200]	; (8008998 <__mdiff+0x120>)
 80088d0:	4832      	ldr	r0, [pc, #200]	; (800899c <__mdiff+0x124>)
 80088d2:	4934      	ldr	r1, [pc, #208]	; (80089a4 <__mdiff+0x12c>)
 80088d4:	e7e4      	b.n	80088a0 <__mdiff+0x28>
 80088d6:	9b01      	ldr	r3, [sp, #4]
 80088d8:	2700      	movs	r7, #0
 80088da:	60c3      	str	r3, [r0, #12]
 80088dc:	6920      	ldr	r0, [r4, #16]
 80088de:	3414      	adds	r4, #20
 80088e0:	0083      	lsls	r3, r0, #2
 80088e2:	18e3      	adds	r3, r4, r3
 80088e4:	0021      	movs	r1, r4
 80088e6:	9401      	str	r4, [sp, #4]
 80088e8:	0034      	movs	r4, r6
 80088ea:	9302      	str	r3, [sp, #8]
 80088ec:	6933      	ldr	r3, [r6, #16]
 80088ee:	3414      	adds	r4, #20
 80088f0:	009b      	lsls	r3, r3, #2
 80088f2:	18e3      	adds	r3, r4, r3
 80088f4:	9303      	str	r3, [sp, #12]
 80088f6:	0013      	movs	r3, r2
 80088f8:	3314      	adds	r3, #20
 80088fa:	469c      	mov	ip, r3
 80088fc:	9305      	str	r3, [sp, #20]
 80088fe:	9104      	str	r1, [sp, #16]
 8008900:	9b04      	ldr	r3, [sp, #16]
 8008902:	cc02      	ldmia	r4!, {r1}
 8008904:	cb20      	ldmia	r3!, {r5}
 8008906:	9304      	str	r3, [sp, #16]
 8008908:	b2ab      	uxth	r3, r5
 800890a:	19df      	adds	r7, r3, r7
 800890c:	b28b      	uxth	r3, r1
 800890e:	1afb      	subs	r3, r7, r3
 8008910:	0c09      	lsrs	r1, r1, #16
 8008912:	0c2d      	lsrs	r5, r5, #16
 8008914:	1a6d      	subs	r5, r5, r1
 8008916:	1419      	asrs	r1, r3, #16
 8008918:	1869      	adds	r1, r5, r1
 800891a:	b29b      	uxth	r3, r3
 800891c:	140f      	asrs	r7, r1, #16
 800891e:	0409      	lsls	r1, r1, #16
 8008920:	4319      	orrs	r1, r3
 8008922:	4663      	mov	r3, ip
 8008924:	c302      	stmia	r3!, {r1}
 8008926:	469c      	mov	ip, r3
 8008928:	9b03      	ldr	r3, [sp, #12]
 800892a:	42a3      	cmp	r3, r4
 800892c:	d8e8      	bhi.n	8008900 <__mdiff+0x88>
 800892e:	0031      	movs	r1, r6
 8008930:	9c03      	ldr	r4, [sp, #12]
 8008932:	3115      	adds	r1, #21
 8008934:	2304      	movs	r3, #4
 8008936:	428c      	cmp	r4, r1
 8008938:	d304      	bcc.n	8008944 <__mdiff+0xcc>
 800893a:	1ba3      	subs	r3, r4, r6
 800893c:	3b15      	subs	r3, #21
 800893e:	089b      	lsrs	r3, r3, #2
 8008940:	3301      	adds	r3, #1
 8008942:	009b      	lsls	r3, r3, #2
 8008944:	9901      	ldr	r1, [sp, #4]
 8008946:	18cd      	adds	r5, r1, r3
 8008948:	9905      	ldr	r1, [sp, #20]
 800894a:	002e      	movs	r6, r5
 800894c:	18cb      	adds	r3, r1, r3
 800894e:	469c      	mov	ip, r3
 8008950:	9902      	ldr	r1, [sp, #8]
 8008952:	428e      	cmp	r6, r1
 8008954:	d310      	bcc.n	8008978 <__mdiff+0x100>
 8008956:	9e02      	ldr	r6, [sp, #8]
 8008958:	1ee9      	subs	r1, r5, #3
 800895a:	2400      	movs	r4, #0
 800895c:	428e      	cmp	r6, r1
 800895e:	d304      	bcc.n	800896a <__mdiff+0xf2>
 8008960:	0031      	movs	r1, r6
 8008962:	3103      	adds	r1, #3
 8008964:	1b49      	subs	r1, r1, r5
 8008966:	0889      	lsrs	r1, r1, #2
 8008968:	008c      	lsls	r4, r1, #2
 800896a:	191b      	adds	r3, r3, r4
 800896c:	3b04      	subs	r3, #4
 800896e:	6819      	ldr	r1, [r3, #0]
 8008970:	2900      	cmp	r1, #0
 8008972:	d00f      	beq.n	8008994 <__mdiff+0x11c>
 8008974:	6110      	str	r0, [r2, #16]
 8008976:	e798      	b.n	80088aa <__mdiff+0x32>
 8008978:	ce02      	ldmia	r6!, {r1}
 800897a:	b28c      	uxth	r4, r1
 800897c:	19e4      	adds	r4, r4, r7
 800897e:	0c0f      	lsrs	r7, r1, #16
 8008980:	1421      	asrs	r1, r4, #16
 8008982:	1879      	adds	r1, r7, r1
 8008984:	b2a4      	uxth	r4, r4
 8008986:	140f      	asrs	r7, r1, #16
 8008988:	0409      	lsls	r1, r1, #16
 800898a:	4321      	orrs	r1, r4
 800898c:	4664      	mov	r4, ip
 800898e:	c402      	stmia	r4!, {r1}
 8008990:	46a4      	mov	ip, r4
 8008992:	e7dd      	b.n	8008950 <__mdiff+0xd8>
 8008994:	3801      	subs	r0, #1
 8008996:	e7e9      	b.n	800896c <__mdiff+0xf4>
 8008998:	0800979d 	.word	0x0800979d
 800899c:	0800981f 	.word	0x0800981f
 80089a0:	00000237 	.word	0x00000237
 80089a4:	00000245 	.word	0x00000245

080089a8 <__ulp>:
 80089a8:	2000      	movs	r0, #0
 80089aa:	4b0b      	ldr	r3, [pc, #44]	; (80089d8 <__ulp+0x30>)
 80089ac:	4019      	ands	r1, r3
 80089ae:	4b0b      	ldr	r3, [pc, #44]	; (80089dc <__ulp+0x34>)
 80089b0:	18c9      	adds	r1, r1, r3
 80089b2:	4281      	cmp	r1, r0
 80089b4:	dc06      	bgt.n	80089c4 <__ulp+0x1c>
 80089b6:	4249      	negs	r1, r1
 80089b8:	150b      	asrs	r3, r1, #20
 80089ba:	2b13      	cmp	r3, #19
 80089bc:	dc03      	bgt.n	80089c6 <__ulp+0x1e>
 80089be:	2180      	movs	r1, #128	; 0x80
 80089c0:	0309      	lsls	r1, r1, #12
 80089c2:	4119      	asrs	r1, r3
 80089c4:	4770      	bx	lr
 80089c6:	3b14      	subs	r3, #20
 80089c8:	2001      	movs	r0, #1
 80089ca:	2b1e      	cmp	r3, #30
 80089cc:	dc02      	bgt.n	80089d4 <__ulp+0x2c>
 80089ce:	2080      	movs	r0, #128	; 0x80
 80089d0:	0600      	lsls	r0, r0, #24
 80089d2:	40d8      	lsrs	r0, r3
 80089d4:	2100      	movs	r1, #0
 80089d6:	e7f5      	b.n	80089c4 <__ulp+0x1c>
 80089d8:	7ff00000 	.word	0x7ff00000
 80089dc:	fcc00000 	.word	0xfcc00000

080089e0 <__b2d>:
 80089e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80089e2:	0006      	movs	r6, r0
 80089e4:	6903      	ldr	r3, [r0, #16]
 80089e6:	3614      	adds	r6, #20
 80089e8:	009b      	lsls	r3, r3, #2
 80089ea:	18f3      	adds	r3, r6, r3
 80089ec:	1f1d      	subs	r5, r3, #4
 80089ee:	682c      	ldr	r4, [r5, #0]
 80089f0:	000f      	movs	r7, r1
 80089f2:	0020      	movs	r0, r4
 80089f4:	9301      	str	r3, [sp, #4]
 80089f6:	f7ff fd49 	bl	800848c <__hi0bits>
 80089fa:	2220      	movs	r2, #32
 80089fc:	1a12      	subs	r2, r2, r0
 80089fe:	603a      	str	r2, [r7, #0]
 8008a00:	0003      	movs	r3, r0
 8008a02:	4a1c      	ldr	r2, [pc, #112]	; (8008a74 <__b2d+0x94>)
 8008a04:	280a      	cmp	r0, #10
 8008a06:	dc15      	bgt.n	8008a34 <__b2d+0x54>
 8008a08:	210b      	movs	r1, #11
 8008a0a:	0027      	movs	r7, r4
 8008a0c:	1a09      	subs	r1, r1, r0
 8008a0e:	40cf      	lsrs	r7, r1
 8008a10:	433a      	orrs	r2, r7
 8008a12:	468c      	mov	ip, r1
 8008a14:	0011      	movs	r1, r2
 8008a16:	2200      	movs	r2, #0
 8008a18:	42ae      	cmp	r6, r5
 8008a1a:	d202      	bcs.n	8008a22 <__b2d+0x42>
 8008a1c:	9a01      	ldr	r2, [sp, #4]
 8008a1e:	3a08      	subs	r2, #8
 8008a20:	6812      	ldr	r2, [r2, #0]
 8008a22:	3315      	adds	r3, #21
 8008a24:	409c      	lsls	r4, r3
 8008a26:	4663      	mov	r3, ip
 8008a28:	0027      	movs	r7, r4
 8008a2a:	40da      	lsrs	r2, r3
 8008a2c:	4317      	orrs	r7, r2
 8008a2e:	0038      	movs	r0, r7
 8008a30:	b003      	add	sp, #12
 8008a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a34:	2700      	movs	r7, #0
 8008a36:	42ae      	cmp	r6, r5
 8008a38:	d202      	bcs.n	8008a40 <__b2d+0x60>
 8008a3a:	9d01      	ldr	r5, [sp, #4]
 8008a3c:	3d08      	subs	r5, #8
 8008a3e:	682f      	ldr	r7, [r5, #0]
 8008a40:	210b      	movs	r1, #11
 8008a42:	4249      	negs	r1, r1
 8008a44:	468c      	mov	ip, r1
 8008a46:	449c      	add	ip, r3
 8008a48:	2b0b      	cmp	r3, #11
 8008a4a:	d010      	beq.n	8008a6e <__b2d+0x8e>
 8008a4c:	4661      	mov	r1, ip
 8008a4e:	2320      	movs	r3, #32
 8008a50:	408c      	lsls	r4, r1
 8008a52:	1a5b      	subs	r3, r3, r1
 8008a54:	0039      	movs	r1, r7
 8008a56:	40d9      	lsrs	r1, r3
 8008a58:	430c      	orrs	r4, r1
 8008a5a:	4322      	orrs	r2, r4
 8008a5c:	0011      	movs	r1, r2
 8008a5e:	2200      	movs	r2, #0
 8008a60:	42b5      	cmp	r5, r6
 8008a62:	d901      	bls.n	8008a68 <__b2d+0x88>
 8008a64:	3d04      	subs	r5, #4
 8008a66:	682a      	ldr	r2, [r5, #0]
 8008a68:	4664      	mov	r4, ip
 8008a6a:	40a7      	lsls	r7, r4
 8008a6c:	e7dd      	b.n	8008a2a <__b2d+0x4a>
 8008a6e:	4322      	orrs	r2, r4
 8008a70:	0011      	movs	r1, r2
 8008a72:	e7dc      	b.n	8008a2e <__b2d+0x4e>
 8008a74:	3ff00000 	.word	0x3ff00000

08008a78 <__d2b>:
 8008a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008a7a:	2101      	movs	r1, #1
 8008a7c:	0014      	movs	r4, r2
 8008a7e:	001d      	movs	r5, r3
 8008a80:	9f08      	ldr	r7, [sp, #32]
 8008a82:	f7ff fc0b 	bl	800829c <_Balloc>
 8008a86:	1e06      	subs	r6, r0, #0
 8008a88:	d105      	bne.n	8008a96 <__d2b+0x1e>
 8008a8a:	0032      	movs	r2, r6
 8008a8c:	4b24      	ldr	r3, [pc, #144]	; (8008b20 <__d2b+0xa8>)
 8008a8e:	4825      	ldr	r0, [pc, #148]	; (8008b24 <__d2b+0xac>)
 8008a90:	4925      	ldr	r1, [pc, #148]	; (8008b28 <__d2b+0xb0>)
 8008a92:	f000 f9bb 	bl	8008e0c <__assert_func>
 8008a96:	032b      	lsls	r3, r5, #12
 8008a98:	006d      	lsls	r5, r5, #1
 8008a9a:	0b1b      	lsrs	r3, r3, #12
 8008a9c:	0d6d      	lsrs	r5, r5, #21
 8008a9e:	d125      	bne.n	8008aec <__d2b+0x74>
 8008aa0:	9301      	str	r3, [sp, #4]
 8008aa2:	2c00      	cmp	r4, #0
 8008aa4:	d028      	beq.n	8008af8 <__d2b+0x80>
 8008aa6:	4668      	mov	r0, sp
 8008aa8:	9400      	str	r4, [sp, #0]
 8008aaa:	f7ff fd09 	bl	80084c0 <__lo0bits>
 8008aae:	9b01      	ldr	r3, [sp, #4]
 8008ab0:	9900      	ldr	r1, [sp, #0]
 8008ab2:	2800      	cmp	r0, #0
 8008ab4:	d01e      	beq.n	8008af4 <__d2b+0x7c>
 8008ab6:	2220      	movs	r2, #32
 8008ab8:	001c      	movs	r4, r3
 8008aba:	1a12      	subs	r2, r2, r0
 8008abc:	4094      	lsls	r4, r2
 8008abe:	0022      	movs	r2, r4
 8008ac0:	40c3      	lsrs	r3, r0
 8008ac2:	430a      	orrs	r2, r1
 8008ac4:	6172      	str	r2, [r6, #20]
 8008ac6:	9301      	str	r3, [sp, #4]
 8008ac8:	9c01      	ldr	r4, [sp, #4]
 8008aca:	61b4      	str	r4, [r6, #24]
 8008acc:	1e63      	subs	r3, r4, #1
 8008ace:	419c      	sbcs	r4, r3
 8008ad0:	3401      	adds	r4, #1
 8008ad2:	6134      	str	r4, [r6, #16]
 8008ad4:	2d00      	cmp	r5, #0
 8008ad6:	d017      	beq.n	8008b08 <__d2b+0x90>
 8008ad8:	2435      	movs	r4, #53	; 0x35
 8008ada:	4b14      	ldr	r3, [pc, #80]	; (8008b2c <__d2b+0xb4>)
 8008adc:	18ed      	adds	r5, r5, r3
 8008ade:	182d      	adds	r5, r5, r0
 8008ae0:	603d      	str	r5, [r7, #0]
 8008ae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ae4:	1a24      	subs	r4, r4, r0
 8008ae6:	601c      	str	r4, [r3, #0]
 8008ae8:	0030      	movs	r0, r6
 8008aea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008aec:	2280      	movs	r2, #128	; 0x80
 8008aee:	0352      	lsls	r2, r2, #13
 8008af0:	4313      	orrs	r3, r2
 8008af2:	e7d5      	b.n	8008aa0 <__d2b+0x28>
 8008af4:	6171      	str	r1, [r6, #20]
 8008af6:	e7e7      	b.n	8008ac8 <__d2b+0x50>
 8008af8:	a801      	add	r0, sp, #4
 8008afa:	f7ff fce1 	bl	80084c0 <__lo0bits>
 8008afe:	9b01      	ldr	r3, [sp, #4]
 8008b00:	2401      	movs	r4, #1
 8008b02:	6173      	str	r3, [r6, #20]
 8008b04:	3020      	adds	r0, #32
 8008b06:	e7e4      	b.n	8008ad2 <__d2b+0x5a>
 8008b08:	4b09      	ldr	r3, [pc, #36]	; (8008b30 <__d2b+0xb8>)
 8008b0a:	18c0      	adds	r0, r0, r3
 8008b0c:	4b09      	ldr	r3, [pc, #36]	; (8008b34 <__d2b+0xbc>)
 8008b0e:	6038      	str	r0, [r7, #0]
 8008b10:	18e3      	adds	r3, r4, r3
 8008b12:	009b      	lsls	r3, r3, #2
 8008b14:	18f3      	adds	r3, r6, r3
 8008b16:	6958      	ldr	r0, [r3, #20]
 8008b18:	f7ff fcb8 	bl	800848c <__hi0bits>
 8008b1c:	0164      	lsls	r4, r4, #5
 8008b1e:	e7e0      	b.n	8008ae2 <__d2b+0x6a>
 8008b20:	0800979d 	.word	0x0800979d
 8008b24:	0800981f 	.word	0x0800981f
 8008b28:	0000030f 	.word	0x0000030f
 8008b2c:	fffffbcd 	.word	0xfffffbcd
 8008b30:	fffffbce 	.word	0xfffffbce
 8008b34:	3fffffff 	.word	0x3fffffff

08008b38 <__ratio>:
 8008b38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b3a:	b087      	sub	sp, #28
 8008b3c:	000f      	movs	r7, r1
 8008b3e:	a904      	add	r1, sp, #16
 8008b40:	0006      	movs	r6, r0
 8008b42:	f7ff ff4d 	bl	80089e0 <__b2d>
 8008b46:	9000      	str	r0, [sp, #0]
 8008b48:	9101      	str	r1, [sp, #4]
 8008b4a:	9c00      	ldr	r4, [sp, #0]
 8008b4c:	9d01      	ldr	r5, [sp, #4]
 8008b4e:	0038      	movs	r0, r7
 8008b50:	a905      	add	r1, sp, #20
 8008b52:	f7ff ff45 	bl	80089e0 <__b2d>
 8008b56:	9002      	str	r0, [sp, #8]
 8008b58:	9103      	str	r1, [sp, #12]
 8008b5a:	9a02      	ldr	r2, [sp, #8]
 8008b5c:	9b03      	ldr	r3, [sp, #12]
 8008b5e:	6930      	ldr	r0, [r6, #16]
 8008b60:	6939      	ldr	r1, [r7, #16]
 8008b62:	9e04      	ldr	r6, [sp, #16]
 8008b64:	1a40      	subs	r0, r0, r1
 8008b66:	9905      	ldr	r1, [sp, #20]
 8008b68:	0140      	lsls	r0, r0, #5
 8008b6a:	1a71      	subs	r1, r6, r1
 8008b6c:	1841      	adds	r1, r0, r1
 8008b6e:	0508      	lsls	r0, r1, #20
 8008b70:	2900      	cmp	r1, #0
 8008b72:	dd07      	ble.n	8008b84 <__ratio+0x4c>
 8008b74:	9901      	ldr	r1, [sp, #4]
 8008b76:	1845      	adds	r5, r0, r1
 8008b78:	0020      	movs	r0, r4
 8008b7a:	0029      	movs	r1, r5
 8008b7c:	f7f8 f8ac 	bl	8000cd8 <__aeabi_ddiv>
 8008b80:	b007      	add	sp, #28
 8008b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b84:	9903      	ldr	r1, [sp, #12]
 8008b86:	1a0b      	subs	r3, r1, r0
 8008b88:	e7f6      	b.n	8008b78 <__ratio+0x40>

08008b8a <__copybits>:
 8008b8a:	b570      	push	{r4, r5, r6, lr}
 8008b8c:	0014      	movs	r4, r2
 8008b8e:	0005      	movs	r5, r0
 8008b90:	3901      	subs	r1, #1
 8008b92:	6913      	ldr	r3, [r2, #16]
 8008b94:	1149      	asrs	r1, r1, #5
 8008b96:	3101      	adds	r1, #1
 8008b98:	0089      	lsls	r1, r1, #2
 8008b9a:	3414      	adds	r4, #20
 8008b9c:	009b      	lsls	r3, r3, #2
 8008b9e:	1841      	adds	r1, r0, r1
 8008ba0:	18e3      	adds	r3, r4, r3
 8008ba2:	42a3      	cmp	r3, r4
 8008ba4:	d80d      	bhi.n	8008bc2 <__copybits+0x38>
 8008ba6:	0014      	movs	r4, r2
 8008ba8:	3411      	adds	r4, #17
 8008baa:	2500      	movs	r5, #0
 8008bac:	429c      	cmp	r4, r3
 8008bae:	d803      	bhi.n	8008bb8 <__copybits+0x2e>
 8008bb0:	1a9b      	subs	r3, r3, r2
 8008bb2:	3b11      	subs	r3, #17
 8008bb4:	089b      	lsrs	r3, r3, #2
 8008bb6:	009d      	lsls	r5, r3, #2
 8008bb8:	2300      	movs	r3, #0
 8008bba:	1940      	adds	r0, r0, r5
 8008bbc:	4281      	cmp	r1, r0
 8008bbe:	d803      	bhi.n	8008bc8 <__copybits+0x3e>
 8008bc0:	bd70      	pop	{r4, r5, r6, pc}
 8008bc2:	cc40      	ldmia	r4!, {r6}
 8008bc4:	c540      	stmia	r5!, {r6}
 8008bc6:	e7ec      	b.n	8008ba2 <__copybits+0x18>
 8008bc8:	c008      	stmia	r0!, {r3}
 8008bca:	e7f7      	b.n	8008bbc <__copybits+0x32>

08008bcc <__any_on>:
 8008bcc:	0002      	movs	r2, r0
 8008bce:	6900      	ldr	r0, [r0, #16]
 8008bd0:	b510      	push	{r4, lr}
 8008bd2:	3214      	adds	r2, #20
 8008bd4:	114b      	asrs	r3, r1, #5
 8008bd6:	4298      	cmp	r0, r3
 8008bd8:	db13      	blt.n	8008c02 <__any_on+0x36>
 8008bda:	dd0c      	ble.n	8008bf6 <__any_on+0x2a>
 8008bdc:	241f      	movs	r4, #31
 8008bde:	0008      	movs	r0, r1
 8008be0:	4020      	ands	r0, r4
 8008be2:	4221      	tst	r1, r4
 8008be4:	d007      	beq.n	8008bf6 <__any_on+0x2a>
 8008be6:	0099      	lsls	r1, r3, #2
 8008be8:	588c      	ldr	r4, [r1, r2]
 8008bea:	0021      	movs	r1, r4
 8008bec:	40c1      	lsrs	r1, r0
 8008bee:	4081      	lsls	r1, r0
 8008bf0:	2001      	movs	r0, #1
 8008bf2:	428c      	cmp	r4, r1
 8008bf4:	d104      	bne.n	8008c00 <__any_on+0x34>
 8008bf6:	009b      	lsls	r3, r3, #2
 8008bf8:	18d3      	adds	r3, r2, r3
 8008bfa:	4293      	cmp	r3, r2
 8008bfc:	d803      	bhi.n	8008c06 <__any_on+0x3a>
 8008bfe:	2000      	movs	r0, #0
 8008c00:	bd10      	pop	{r4, pc}
 8008c02:	0003      	movs	r3, r0
 8008c04:	e7f7      	b.n	8008bf6 <__any_on+0x2a>
 8008c06:	3b04      	subs	r3, #4
 8008c08:	6819      	ldr	r1, [r3, #0]
 8008c0a:	2900      	cmp	r1, #0
 8008c0c:	d0f5      	beq.n	8008bfa <__any_on+0x2e>
 8008c0e:	2001      	movs	r0, #1
 8008c10:	e7f6      	b.n	8008c00 <__any_on+0x34>
	...

08008c14 <__sread>:
 8008c14:	b570      	push	{r4, r5, r6, lr}
 8008c16:	000c      	movs	r4, r1
 8008c18:	250e      	movs	r5, #14
 8008c1a:	5f49      	ldrsh	r1, [r1, r5]
 8008c1c:	f000 f8bc 	bl	8008d98 <_read_r>
 8008c20:	2800      	cmp	r0, #0
 8008c22:	db03      	blt.n	8008c2c <__sread+0x18>
 8008c24:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008c26:	181b      	adds	r3, r3, r0
 8008c28:	6563      	str	r3, [r4, #84]	; 0x54
 8008c2a:	bd70      	pop	{r4, r5, r6, pc}
 8008c2c:	89a3      	ldrh	r3, [r4, #12]
 8008c2e:	4a02      	ldr	r2, [pc, #8]	; (8008c38 <__sread+0x24>)
 8008c30:	4013      	ands	r3, r2
 8008c32:	81a3      	strh	r3, [r4, #12]
 8008c34:	e7f9      	b.n	8008c2a <__sread+0x16>
 8008c36:	46c0      	nop			; (mov r8, r8)
 8008c38:	ffffefff 	.word	0xffffefff

08008c3c <__swrite>:
 8008c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c3e:	001f      	movs	r7, r3
 8008c40:	898b      	ldrh	r3, [r1, #12]
 8008c42:	0005      	movs	r5, r0
 8008c44:	000c      	movs	r4, r1
 8008c46:	0016      	movs	r6, r2
 8008c48:	05db      	lsls	r3, r3, #23
 8008c4a:	d505      	bpl.n	8008c58 <__swrite+0x1c>
 8008c4c:	230e      	movs	r3, #14
 8008c4e:	5ec9      	ldrsh	r1, [r1, r3]
 8008c50:	2200      	movs	r2, #0
 8008c52:	2302      	movs	r3, #2
 8008c54:	f000 f88c 	bl	8008d70 <_lseek_r>
 8008c58:	89a3      	ldrh	r3, [r4, #12]
 8008c5a:	4a05      	ldr	r2, [pc, #20]	; (8008c70 <__swrite+0x34>)
 8008c5c:	0028      	movs	r0, r5
 8008c5e:	4013      	ands	r3, r2
 8008c60:	81a3      	strh	r3, [r4, #12]
 8008c62:	0032      	movs	r2, r6
 8008c64:	230e      	movs	r3, #14
 8008c66:	5ee1      	ldrsh	r1, [r4, r3]
 8008c68:	003b      	movs	r3, r7
 8008c6a:	f000 f8bb 	bl	8008de4 <_write_r>
 8008c6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008c70:	ffffefff 	.word	0xffffefff

08008c74 <__sseek>:
 8008c74:	b570      	push	{r4, r5, r6, lr}
 8008c76:	000c      	movs	r4, r1
 8008c78:	250e      	movs	r5, #14
 8008c7a:	5f49      	ldrsh	r1, [r1, r5]
 8008c7c:	f000 f878 	bl	8008d70 <_lseek_r>
 8008c80:	89a3      	ldrh	r3, [r4, #12]
 8008c82:	1c42      	adds	r2, r0, #1
 8008c84:	d103      	bne.n	8008c8e <__sseek+0x1a>
 8008c86:	4a05      	ldr	r2, [pc, #20]	; (8008c9c <__sseek+0x28>)
 8008c88:	4013      	ands	r3, r2
 8008c8a:	81a3      	strh	r3, [r4, #12]
 8008c8c:	bd70      	pop	{r4, r5, r6, pc}
 8008c8e:	2280      	movs	r2, #128	; 0x80
 8008c90:	0152      	lsls	r2, r2, #5
 8008c92:	4313      	orrs	r3, r2
 8008c94:	81a3      	strh	r3, [r4, #12]
 8008c96:	6560      	str	r0, [r4, #84]	; 0x54
 8008c98:	e7f8      	b.n	8008c8c <__sseek+0x18>
 8008c9a:	46c0      	nop			; (mov r8, r8)
 8008c9c:	ffffefff 	.word	0xffffefff

08008ca0 <__sclose>:
 8008ca0:	b510      	push	{r4, lr}
 8008ca2:	230e      	movs	r3, #14
 8008ca4:	5ec9      	ldrsh	r1, [r1, r3]
 8008ca6:	f000 f851 	bl	8008d4c <_close_r>
 8008caa:	bd10      	pop	{r4, pc}

08008cac <_realloc_r>:
 8008cac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008cae:	0007      	movs	r7, r0
 8008cb0:	000e      	movs	r6, r1
 8008cb2:	0014      	movs	r4, r2
 8008cb4:	2900      	cmp	r1, #0
 8008cb6:	d105      	bne.n	8008cc4 <_realloc_r+0x18>
 8008cb8:	0011      	movs	r1, r2
 8008cba:	f7ff f995 	bl	8007fe8 <_malloc_r>
 8008cbe:	0005      	movs	r5, r0
 8008cc0:	0028      	movs	r0, r5
 8008cc2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008cc4:	2a00      	cmp	r2, #0
 8008cc6:	d103      	bne.n	8008cd0 <_realloc_r+0x24>
 8008cc8:	f000 f8ec 	bl	8008ea4 <_free_r>
 8008ccc:	0025      	movs	r5, r4
 8008cce:	e7f7      	b.n	8008cc0 <_realloc_r+0x14>
 8008cd0:	f000 f932 	bl	8008f38 <_malloc_usable_size_r>
 8008cd4:	9001      	str	r0, [sp, #4]
 8008cd6:	4284      	cmp	r4, r0
 8008cd8:	d803      	bhi.n	8008ce2 <_realloc_r+0x36>
 8008cda:	0035      	movs	r5, r6
 8008cdc:	0843      	lsrs	r3, r0, #1
 8008cde:	42a3      	cmp	r3, r4
 8008ce0:	d3ee      	bcc.n	8008cc0 <_realloc_r+0x14>
 8008ce2:	0021      	movs	r1, r4
 8008ce4:	0038      	movs	r0, r7
 8008ce6:	f7ff f97f 	bl	8007fe8 <_malloc_r>
 8008cea:	1e05      	subs	r5, r0, #0
 8008cec:	d0e8      	beq.n	8008cc0 <_realloc_r+0x14>
 8008cee:	9b01      	ldr	r3, [sp, #4]
 8008cf0:	0022      	movs	r2, r4
 8008cf2:	429c      	cmp	r4, r3
 8008cf4:	d900      	bls.n	8008cf8 <_realloc_r+0x4c>
 8008cf6:	001a      	movs	r2, r3
 8008cf8:	0031      	movs	r1, r6
 8008cfa:	0028      	movs	r0, r5
 8008cfc:	f7fd fdd9 	bl	80068b2 <memcpy>
 8008d00:	0031      	movs	r1, r6
 8008d02:	0038      	movs	r0, r7
 8008d04:	f000 f8ce 	bl	8008ea4 <_free_r>
 8008d08:	e7da      	b.n	8008cc0 <_realloc_r+0x14>

08008d0a <__ascii_wctomb>:
 8008d0a:	0003      	movs	r3, r0
 8008d0c:	1e08      	subs	r0, r1, #0
 8008d0e:	d005      	beq.n	8008d1c <__ascii_wctomb+0x12>
 8008d10:	2aff      	cmp	r2, #255	; 0xff
 8008d12:	d904      	bls.n	8008d1e <__ascii_wctomb+0x14>
 8008d14:	228a      	movs	r2, #138	; 0x8a
 8008d16:	2001      	movs	r0, #1
 8008d18:	601a      	str	r2, [r3, #0]
 8008d1a:	4240      	negs	r0, r0
 8008d1c:	4770      	bx	lr
 8008d1e:	2001      	movs	r0, #1
 8008d20:	700a      	strb	r2, [r1, #0]
 8008d22:	e7fb      	b.n	8008d1c <__ascii_wctomb+0x12>

08008d24 <memmove>:
 8008d24:	b510      	push	{r4, lr}
 8008d26:	4288      	cmp	r0, r1
 8008d28:	d902      	bls.n	8008d30 <memmove+0xc>
 8008d2a:	188b      	adds	r3, r1, r2
 8008d2c:	4298      	cmp	r0, r3
 8008d2e:	d303      	bcc.n	8008d38 <memmove+0x14>
 8008d30:	2300      	movs	r3, #0
 8008d32:	e007      	b.n	8008d44 <memmove+0x20>
 8008d34:	5c8b      	ldrb	r3, [r1, r2]
 8008d36:	5483      	strb	r3, [r0, r2]
 8008d38:	3a01      	subs	r2, #1
 8008d3a:	d2fb      	bcs.n	8008d34 <memmove+0x10>
 8008d3c:	bd10      	pop	{r4, pc}
 8008d3e:	5ccc      	ldrb	r4, [r1, r3]
 8008d40:	54c4      	strb	r4, [r0, r3]
 8008d42:	3301      	adds	r3, #1
 8008d44:	429a      	cmp	r2, r3
 8008d46:	d1fa      	bne.n	8008d3e <memmove+0x1a>
 8008d48:	e7f8      	b.n	8008d3c <memmove+0x18>
	...

08008d4c <_close_r>:
 8008d4c:	2300      	movs	r3, #0
 8008d4e:	b570      	push	{r4, r5, r6, lr}
 8008d50:	4d06      	ldr	r5, [pc, #24]	; (8008d6c <_close_r+0x20>)
 8008d52:	0004      	movs	r4, r0
 8008d54:	0008      	movs	r0, r1
 8008d56:	602b      	str	r3, [r5, #0]
 8008d58:	f7f9 fe74 	bl	8002a44 <_close>
 8008d5c:	1c43      	adds	r3, r0, #1
 8008d5e:	d103      	bne.n	8008d68 <_close_r+0x1c>
 8008d60:	682b      	ldr	r3, [r5, #0]
 8008d62:	2b00      	cmp	r3, #0
 8008d64:	d000      	beq.n	8008d68 <_close_r+0x1c>
 8008d66:	6023      	str	r3, [r4, #0]
 8008d68:	bd70      	pop	{r4, r5, r6, pc}
 8008d6a:	46c0      	nop			; (mov r8, r8)
 8008d6c:	2000040c 	.word	0x2000040c

08008d70 <_lseek_r>:
 8008d70:	b570      	push	{r4, r5, r6, lr}
 8008d72:	0004      	movs	r4, r0
 8008d74:	0008      	movs	r0, r1
 8008d76:	0011      	movs	r1, r2
 8008d78:	001a      	movs	r2, r3
 8008d7a:	2300      	movs	r3, #0
 8008d7c:	4d05      	ldr	r5, [pc, #20]	; (8008d94 <_lseek_r+0x24>)
 8008d7e:	602b      	str	r3, [r5, #0]
 8008d80:	f7f9 fe81 	bl	8002a86 <_lseek>
 8008d84:	1c43      	adds	r3, r0, #1
 8008d86:	d103      	bne.n	8008d90 <_lseek_r+0x20>
 8008d88:	682b      	ldr	r3, [r5, #0]
 8008d8a:	2b00      	cmp	r3, #0
 8008d8c:	d000      	beq.n	8008d90 <_lseek_r+0x20>
 8008d8e:	6023      	str	r3, [r4, #0]
 8008d90:	bd70      	pop	{r4, r5, r6, pc}
 8008d92:	46c0      	nop			; (mov r8, r8)
 8008d94:	2000040c 	.word	0x2000040c

08008d98 <_read_r>:
 8008d98:	b570      	push	{r4, r5, r6, lr}
 8008d9a:	0004      	movs	r4, r0
 8008d9c:	0008      	movs	r0, r1
 8008d9e:	0011      	movs	r1, r2
 8008da0:	001a      	movs	r2, r3
 8008da2:	2300      	movs	r3, #0
 8008da4:	4d05      	ldr	r5, [pc, #20]	; (8008dbc <_read_r+0x24>)
 8008da6:	602b      	str	r3, [r5, #0]
 8008da8:	f7f9 fe13 	bl	80029d2 <_read>
 8008dac:	1c43      	adds	r3, r0, #1
 8008dae:	d103      	bne.n	8008db8 <_read_r+0x20>
 8008db0:	682b      	ldr	r3, [r5, #0]
 8008db2:	2b00      	cmp	r3, #0
 8008db4:	d000      	beq.n	8008db8 <_read_r+0x20>
 8008db6:	6023      	str	r3, [r4, #0]
 8008db8:	bd70      	pop	{r4, r5, r6, pc}
 8008dba:	46c0      	nop			; (mov r8, r8)
 8008dbc:	2000040c 	.word	0x2000040c

08008dc0 <_sbrk_r>:
 8008dc0:	2300      	movs	r3, #0
 8008dc2:	b570      	push	{r4, r5, r6, lr}
 8008dc4:	4d06      	ldr	r5, [pc, #24]	; (8008de0 <_sbrk_r+0x20>)
 8008dc6:	0004      	movs	r4, r0
 8008dc8:	0008      	movs	r0, r1
 8008dca:	602b      	str	r3, [r5, #0]
 8008dcc:	f7f9 fe66 	bl	8002a9c <_sbrk>
 8008dd0:	1c43      	adds	r3, r0, #1
 8008dd2:	d103      	bne.n	8008ddc <_sbrk_r+0x1c>
 8008dd4:	682b      	ldr	r3, [r5, #0]
 8008dd6:	2b00      	cmp	r3, #0
 8008dd8:	d000      	beq.n	8008ddc <_sbrk_r+0x1c>
 8008dda:	6023      	str	r3, [r4, #0]
 8008ddc:	bd70      	pop	{r4, r5, r6, pc}
 8008dde:	46c0      	nop			; (mov r8, r8)
 8008de0:	2000040c 	.word	0x2000040c

08008de4 <_write_r>:
 8008de4:	b570      	push	{r4, r5, r6, lr}
 8008de6:	0004      	movs	r4, r0
 8008de8:	0008      	movs	r0, r1
 8008dea:	0011      	movs	r1, r2
 8008dec:	001a      	movs	r2, r3
 8008dee:	2300      	movs	r3, #0
 8008df0:	4d05      	ldr	r5, [pc, #20]	; (8008e08 <_write_r+0x24>)
 8008df2:	602b      	str	r3, [r5, #0]
 8008df4:	f7f9 fe0a 	bl	8002a0c <_write>
 8008df8:	1c43      	adds	r3, r0, #1
 8008dfa:	d103      	bne.n	8008e04 <_write_r+0x20>
 8008dfc:	682b      	ldr	r3, [r5, #0]
 8008dfe:	2b00      	cmp	r3, #0
 8008e00:	d000      	beq.n	8008e04 <_write_r+0x20>
 8008e02:	6023      	str	r3, [r4, #0]
 8008e04:	bd70      	pop	{r4, r5, r6, pc}
 8008e06:	46c0      	nop			; (mov r8, r8)
 8008e08:	2000040c 	.word	0x2000040c

08008e0c <__assert_func>:
 8008e0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008e0e:	0014      	movs	r4, r2
 8008e10:	001a      	movs	r2, r3
 8008e12:	4b09      	ldr	r3, [pc, #36]	; (8008e38 <__assert_func+0x2c>)
 8008e14:	0005      	movs	r5, r0
 8008e16:	681b      	ldr	r3, [r3, #0]
 8008e18:	000e      	movs	r6, r1
 8008e1a:	68d8      	ldr	r0, [r3, #12]
 8008e1c:	4b07      	ldr	r3, [pc, #28]	; (8008e3c <__assert_func+0x30>)
 8008e1e:	2c00      	cmp	r4, #0
 8008e20:	d101      	bne.n	8008e26 <__assert_func+0x1a>
 8008e22:	4b07      	ldr	r3, [pc, #28]	; (8008e40 <__assert_func+0x34>)
 8008e24:	001c      	movs	r4, r3
 8008e26:	4907      	ldr	r1, [pc, #28]	; (8008e44 <__assert_func+0x38>)
 8008e28:	9301      	str	r3, [sp, #4]
 8008e2a:	9402      	str	r4, [sp, #8]
 8008e2c:	002b      	movs	r3, r5
 8008e2e:	9600      	str	r6, [sp, #0]
 8008e30:	f000 f88a 	bl	8008f48 <fiprintf>
 8008e34:	f000 f898 	bl	8008f68 <abort>
 8008e38:	200001d0 	.word	0x200001d0
 8008e3c:	08009974 	.word	0x08009974
 8008e40:	080099af 	.word	0x080099af
 8008e44:	08009981 	.word	0x08009981

08008e48 <_calloc_r>:
 8008e48:	b570      	push	{r4, r5, r6, lr}
 8008e4a:	0c0b      	lsrs	r3, r1, #16
 8008e4c:	0c15      	lsrs	r5, r2, #16
 8008e4e:	2b00      	cmp	r3, #0
 8008e50:	d11e      	bne.n	8008e90 <_calloc_r+0x48>
 8008e52:	2d00      	cmp	r5, #0
 8008e54:	d10c      	bne.n	8008e70 <_calloc_r+0x28>
 8008e56:	b289      	uxth	r1, r1
 8008e58:	b294      	uxth	r4, r2
 8008e5a:	434c      	muls	r4, r1
 8008e5c:	0021      	movs	r1, r4
 8008e5e:	f7ff f8c3 	bl	8007fe8 <_malloc_r>
 8008e62:	1e05      	subs	r5, r0, #0
 8008e64:	d01b      	beq.n	8008e9e <_calloc_r+0x56>
 8008e66:	0022      	movs	r2, r4
 8008e68:	2100      	movs	r1, #0
 8008e6a:	f7fd fcde 	bl	800682a <memset>
 8008e6e:	e016      	b.n	8008e9e <_calloc_r+0x56>
 8008e70:	1c2b      	adds	r3, r5, #0
 8008e72:	1c0c      	adds	r4, r1, #0
 8008e74:	b289      	uxth	r1, r1
 8008e76:	b292      	uxth	r2, r2
 8008e78:	434a      	muls	r2, r1
 8008e7a:	b2a1      	uxth	r1, r4
 8008e7c:	b29c      	uxth	r4, r3
 8008e7e:	434c      	muls	r4, r1
 8008e80:	0c13      	lsrs	r3, r2, #16
 8008e82:	18e4      	adds	r4, r4, r3
 8008e84:	0c23      	lsrs	r3, r4, #16
 8008e86:	d107      	bne.n	8008e98 <_calloc_r+0x50>
 8008e88:	0424      	lsls	r4, r4, #16
 8008e8a:	b292      	uxth	r2, r2
 8008e8c:	4314      	orrs	r4, r2
 8008e8e:	e7e5      	b.n	8008e5c <_calloc_r+0x14>
 8008e90:	2d00      	cmp	r5, #0
 8008e92:	d101      	bne.n	8008e98 <_calloc_r+0x50>
 8008e94:	1c14      	adds	r4, r2, #0
 8008e96:	e7ed      	b.n	8008e74 <_calloc_r+0x2c>
 8008e98:	230c      	movs	r3, #12
 8008e9a:	2500      	movs	r5, #0
 8008e9c:	6003      	str	r3, [r0, #0]
 8008e9e:	0028      	movs	r0, r5
 8008ea0:	bd70      	pop	{r4, r5, r6, pc}
	...

08008ea4 <_free_r>:
 8008ea4:	b570      	push	{r4, r5, r6, lr}
 8008ea6:	0005      	movs	r5, r0
 8008ea8:	2900      	cmp	r1, #0
 8008eaa:	d010      	beq.n	8008ece <_free_r+0x2a>
 8008eac:	1f0c      	subs	r4, r1, #4
 8008eae:	6823      	ldr	r3, [r4, #0]
 8008eb0:	2b00      	cmp	r3, #0
 8008eb2:	da00      	bge.n	8008eb6 <_free_r+0x12>
 8008eb4:	18e4      	adds	r4, r4, r3
 8008eb6:	0028      	movs	r0, r5
 8008eb8:	f7ff f9e0 	bl	800827c <__malloc_lock>
 8008ebc:	4a1d      	ldr	r2, [pc, #116]	; (8008f34 <_free_r+0x90>)
 8008ebe:	6813      	ldr	r3, [r2, #0]
 8008ec0:	2b00      	cmp	r3, #0
 8008ec2:	d105      	bne.n	8008ed0 <_free_r+0x2c>
 8008ec4:	6063      	str	r3, [r4, #4]
 8008ec6:	6014      	str	r4, [r2, #0]
 8008ec8:	0028      	movs	r0, r5
 8008eca:	f7ff f9df 	bl	800828c <__malloc_unlock>
 8008ece:	bd70      	pop	{r4, r5, r6, pc}
 8008ed0:	42a3      	cmp	r3, r4
 8008ed2:	d908      	bls.n	8008ee6 <_free_r+0x42>
 8008ed4:	6820      	ldr	r0, [r4, #0]
 8008ed6:	1821      	adds	r1, r4, r0
 8008ed8:	428b      	cmp	r3, r1
 8008eda:	d1f3      	bne.n	8008ec4 <_free_r+0x20>
 8008edc:	6819      	ldr	r1, [r3, #0]
 8008ede:	685b      	ldr	r3, [r3, #4]
 8008ee0:	1809      	adds	r1, r1, r0
 8008ee2:	6021      	str	r1, [r4, #0]
 8008ee4:	e7ee      	b.n	8008ec4 <_free_r+0x20>
 8008ee6:	001a      	movs	r2, r3
 8008ee8:	685b      	ldr	r3, [r3, #4]
 8008eea:	2b00      	cmp	r3, #0
 8008eec:	d001      	beq.n	8008ef2 <_free_r+0x4e>
 8008eee:	42a3      	cmp	r3, r4
 8008ef0:	d9f9      	bls.n	8008ee6 <_free_r+0x42>
 8008ef2:	6811      	ldr	r1, [r2, #0]
 8008ef4:	1850      	adds	r0, r2, r1
 8008ef6:	42a0      	cmp	r0, r4
 8008ef8:	d10b      	bne.n	8008f12 <_free_r+0x6e>
 8008efa:	6820      	ldr	r0, [r4, #0]
 8008efc:	1809      	adds	r1, r1, r0
 8008efe:	1850      	adds	r0, r2, r1
 8008f00:	6011      	str	r1, [r2, #0]
 8008f02:	4283      	cmp	r3, r0
 8008f04:	d1e0      	bne.n	8008ec8 <_free_r+0x24>
 8008f06:	6818      	ldr	r0, [r3, #0]
 8008f08:	685b      	ldr	r3, [r3, #4]
 8008f0a:	1841      	adds	r1, r0, r1
 8008f0c:	6011      	str	r1, [r2, #0]
 8008f0e:	6053      	str	r3, [r2, #4]
 8008f10:	e7da      	b.n	8008ec8 <_free_r+0x24>
 8008f12:	42a0      	cmp	r0, r4
 8008f14:	d902      	bls.n	8008f1c <_free_r+0x78>
 8008f16:	230c      	movs	r3, #12
 8008f18:	602b      	str	r3, [r5, #0]
 8008f1a:	e7d5      	b.n	8008ec8 <_free_r+0x24>
 8008f1c:	6820      	ldr	r0, [r4, #0]
 8008f1e:	1821      	adds	r1, r4, r0
 8008f20:	428b      	cmp	r3, r1
 8008f22:	d103      	bne.n	8008f2c <_free_r+0x88>
 8008f24:	6819      	ldr	r1, [r3, #0]
 8008f26:	685b      	ldr	r3, [r3, #4]
 8008f28:	1809      	adds	r1, r1, r0
 8008f2a:	6021      	str	r1, [r4, #0]
 8008f2c:	6063      	str	r3, [r4, #4]
 8008f2e:	6054      	str	r4, [r2, #4]
 8008f30:	e7ca      	b.n	8008ec8 <_free_r+0x24>
 8008f32:	46c0      	nop			; (mov r8, r8)
 8008f34:	20000404 	.word	0x20000404

08008f38 <_malloc_usable_size_r>:
 8008f38:	1f0b      	subs	r3, r1, #4
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	1f18      	subs	r0, r3, #4
 8008f3e:	2b00      	cmp	r3, #0
 8008f40:	da01      	bge.n	8008f46 <_malloc_usable_size_r+0xe>
 8008f42:	580b      	ldr	r3, [r1, r0]
 8008f44:	18c0      	adds	r0, r0, r3
 8008f46:	4770      	bx	lr

08008f48 <fiprintf>:
 8008f48:	b40e      	push	{r1, r2, r3}
 8008f4a:	b517      	push	{r0, r1, r2, r4, lr}
 8008f4c:	4c05      	ldr	r4, [pc, #20]	; (8008f64 <fiprintf+0x1c>)
 8008f4e:	ab05      	add	r3, sp, #20
 8008f50:	cb04      	ldmia	r3!, {r2}
 8008f52:	0001      	movs	r1, r0
 8008f54:	6820      	ldr	r0, [r4, #0]
 8008f56:	9301      	str	r3, [sp, #4]
 8008f58:	f000 f834 	bl	8008fc4 <_vfiprintf_r>
 8008f5c:	bc1e      	pop	{r1, r2, r3, r4}
 8008f5e:	bc08      	pop	{r3}
 8008f60:	b003      	add	sp, #12
 8008f62:	4718      	bx	r3
 8008f64:	200001d0 	.word	0x200001d0

08008f68 <abort>:
 8008f68:	2006      	movs	r0, #6
 8008f6a:	b510      	push	{r4, lr}
 8008f6c:	f000 faa0 	bl	80094b0 <raise>
 8008f70:	2001      	movs	r0, #1
 8008f72:	f7f9 fd22 	bl	80029ba <_exit>

08008f76 <__sfputc_r>:
 8008f76:	6893      	ldr	r3, [r2, #8]
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	3b01      	subs	r3, #1
 8008f7c:	6093      	str	r3, [r2, #8]
 8008f7e:	2b00      	cmp	r3, #0
 8008f80:	da04      	bge.n	8008f8c <__sfputc_r+0x16>
 8008f82:	6994      	ldr	r4, [r2, #24]
 8008f84:	42a3      	cmp	r3, r4
 8008f86:	db07      	blt.n	8008f98 <__sfputc_r+0x22>
 8008f88:	290a      	cmp	r1, #10
 8008f8a:	d005      	beq.n	8008f98 <__sfputc_r+0x22>
 8008f8c:	6813      	ldr	r3, [r2, #0]
 8008f8e:	1c58      	adds	r0, r3, #1
 8008f90:	6010      	str	r0, [r2, #0]
 8008f92:	7019      	strb	r1, [r3, #0]
 8008f94:	0008      	movs	r0, r1
 8008f96:	bd10      	pop	{r4, pc}
 8008f98:	f000 f930 	bl	80091fc <__swbuf_r>
 8008f9c:	0001      	movs	r1, r0
 8008f9e:	e7f9      	b.n	8008f94 <__sfputc_r+0x1e>

08008fa0 <__sfputs_r>:
 8008fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008fa2:	0006      	movs	r6, r0
 8008fa4:	000f      	movs	r7, r1
 8008fa6:	0014      	movs	r4, r2
 8008fa8:	18d5      	adds	r5, r2, r3
 8008faa:	42ac      	cmp	r4, r5
 8008fac:	d101      	bne.n	8008fb2 <__sfputs_r+0x12>
 8008fae:	2000      	movs	r0, #0
 8008fb0:	e007      	b.n	8008fc2 <__sfputs_r+0x22>
 8008fb2:	7821      	ldrb	r1, [r4, #0]
 8008fb4:	003a      	movs	r2, r7
 8008fb6:	0030      	movs	r0, r6
 8008fb8:	f7ff ffdd 	bl	8008f76 <__sfputc_r>
 8008fbc:	3401      	adds	r4, #1
 8008fbe:	1c43      	adds	r3, r0, #1
 8008fc0:	d1f3      	bne.n	8008faa <__sfputs_r+0xa>
 8008fc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008fc4 <_vfiprintf_r>:
 8008fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fc6:	b0a1      	sub	sp, #132	; 0x84
 8008fc8:	000f      	movs	r7, r1
 8008fca:	0015      	movs	r5, r2
 8008fcc:	001e      	movs	r6, r3
 8008fce:	9003      	str	r0, [sp, #12]
 8008fd0:	2800      	cmp	r0, #0
 8008fd2:	d004      	beq.n	8008fde <_vfiprintf_r+0x1a>
 8008fd4:	6a03      	ldr	r3, [r0, #32]
 8008fd6:	2b00      	cmp	r3, #0
 8008fd8:	d101      	bne.n	8008fde <_vfiprintf_r+0x1a>
 8008fda:	f7fc fd2d 	bl	8005a38 <__sinit>
 8008fde:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008fe0:	07db      	lsls	r3, r3, #31
 8008fe2:	d405      	bmi.n	8008ff0 <_vfiprintf_r+0x2c>
 8008fe4:	89bb      	ldrh	r3, [r7, #12]
 8008fe6:	059b      	lsls	r3, r3, #22
 8008fe8:	d402      	bmi.n	8008ff0 <_vfiprintf_r+0x2c>
 8008fea:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8008fec:	f7fd fc54 	bl	8006898 <__retarget_lock_acquire_recursive>
 8008ff0:	89bb      	ldrh	r3, [r7, #12]
 8008ff2:	071b      	lsls	r3, r3, #28
 8008ff4:	d502      	bpl.n	8008ffc <_vfiprintf_r+0x38>
 8008ff6:	693b      	ldr	r3, [r7, #16]
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d113      	bne.n	8009024 <_vfiprintf_r+0x60>
 8008ffc:	0039      	movs	r1, r7
 8008ffe:	9803      	ldr	r0, [sp, #12]
 8009000:	f000 f93e 	bl	8009280 <__swsetup_r>
 8009004:	2800      	cmp	r0, #0
 8009006:	d00d      	beq.n	8009024 <_vfiprintf_r+0x60>
 8009008:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800900a:	07db      	lsls	r3, r3, #31
 800900c:	d503      	bpl.n	8009016 <_vfiprintf_r+0x52>
 800900e:	2001      	movs	r0, #1
 8009010:	4240      	negs	r0, r0
 8009012:	b021      	add	sp, #132	; 0x84
 8009014:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009016:	89bb      	ldrh	r3, [r7, #12]
 8009018:	059b      	lsls	r3, r3, #22
 800901a:	d4f8      	bmi.n	800900e <_vfiprintf_r+0x4a>
 800901c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800901e:	f7fd fc3c 	bl	800689a <__retarget_lock_release_recursive>
 8009022:	e7f4      	b.n	800900e <_vfiprintf_r+0x4a>
 8009024:	2300      	movs	r3, #0
 8009026:	ac08      	add	r4, sp, #32
 8009028:	6163      	str	r3, [r4, #20]
 800902a:	3320      	adds	r3, #32
 800902c:	7663      	strb	r3, [r4, #25]
 800902e:	3310      	adds	r3, #16
 8009030:	76a3      	strb	r3, [r4, #26]
 8009032:	9607      	str	r6, [sp, #28]
 8009034:	002e      	movs	r6, r5
 8009036:	7833      	ldrb	r3, [r6, #0]
 8009038:	2b00      	cmp	r3, #0
 800903a:	d001      	beq.n	8009040 <_vfiprintf_r+0x7c>
 800903c:	2b25      	cmp	r3, #37	; 0x25
 800903e:	d148      	bne.n	80090d2 <_vfiprintf_r+0x10e>
 8009040:	1b73      	subs	r3, r6, r5
 8009042:	9305      	str	r3, [sp, #20]
 8009044:	42ae      	cmp	r6, r5
 8009046:	d00b      	beq.n	8009060 <_vfiprintf_r+0x9c>
 8009048:	002a      	movs	r2, r5
 800904a:	0039      	movs	r1, r7
 800904c:	9803      	ldr	r0, [sp, #12]
 800904e:	f7ff ffa7 	bl	8008fa0 <__sfputs_r>
 8009052:	3001      	adds	r0, #1
 8009054:	d100      	bne.n	8009058 <_vfiprintf_r+0x94>
 8009056:	e0af      	b.n	80091b8 <_vfiprintf_r+0x1f4>
 8009058:	6963      	ldr	r3, [r4, #20]
 800905a:	9a05      	ldr	r2, [sp, #20]
 800905c:	189b      	adds	r3, r3, r2
 800905e:	6163      	str	r3, [r4, #20]
 8009060:	7833      	ldrb	r3, [r6, #0]
 8009062:	2b00      	cmp	r3, #0
 8009064:	d100      	bne.n	8009068 <_vfiprintf_r+0xa4>
 8009066:	e0a7      	b.n	80091b8 <_vfiprintf_r+0x1f4>
 8009068:	2201      	movs	r2, #1
 800906a:	2300      	movs	r3, #0
 800906c:	4252      	negs	r2, r2
 800906e:	6062      	str	r2, [r4, #4]
 8009070:	a904      	add	r1, sp, #16
 8009072:	3254      	adds	r2, #84	; 0x54
 8009074:	1852      	adds	r2, r2, r1
 8009076:	1c75      	adds	r5, r6, #1
 8009078:	6023      	str	r3, [r4, #0]
 800907a:	60e3      	str	r3, [r4, #12]
 800907c:	60a3      	str	r3, [r4, #8]
 800907e:	7013      	strb	r3, [r2, #0]
 8009080:	65a3      	str	r3, [r4, #88]	; 0x58
 8009082:	4b59      	ldr	r3, [pc, #356]	; (80091e8 <_vfiprintf_r+0x224>)
 8009084:	2205      	movs	r2, #5
 8009086:	0018      	movs	r0, r3
 8009088:	7829      	ldrb	r1, [r5, #0]
 800908a:	9305      	str	r3, [sp, #20]
 800908c:	f7fd fc06 	bl	800689c <memchr>
 8009090:	1c6e      	adds	r6, r5, #1
 8009092:	2800      	cmp	r0, #0
 8009094:	d11f      	bne.n	80090d6 <_vfiprintf_r+0x112>
 8009096:	6822      	ldr	r2, [r4, #0]
 8009098:	06d3      	lsls	r3, r2, #27
 800909a:	d504      	bpl.n	80090a6 <_vfiprintf_r+0xe2>
 800909c:	2353      	movs	r3, #83	; 0x53
 800909e:	a904      	add	r1, sp, #16
 80090a0:	185b      	adds	r3, r3, r1
 80090a2:	2120      	movs	r1, #32
 80090a4:	7019      	strb	r1, [r3, #0]
 80090a6:	0713      	lsls	r3, r2, #28
 80090a8:	d504      	bpl.n	80090b4 <_vfiprintf_r+0xf0>
 80090aa:	2353      	movs	r3, #83	; 0x53
 80090ac:	a904      	add	r1, sp, #16
 80090ae:	185b      	adds	r3, r3, r1
 80090b0:	212b      	movs	r1, #43	; 0x2b
 80090b2:	7019      	strb	r1, [r3, #0]
 80090b4:	782b      	ldrb	r3, [r5, #0]
 80090b6:	2b2a      	cmp	r3, #42	; 0x2a
 80090b8:	d016      	beq.n	80090e8 <_vfiprintf_r+0x124>
 80090ba:	002e      	movs	r6, r5
 80090bc:	2100      	movs	r1, #0
 80090be:	200a      	movs	r0, #10
 80090c0:	68e3      	ldr	r3, [r4, #12]
 80090c2:	7832      	ldrb	r2, [r6, #0]
 80090c4:	1c75      	adds	r5, r6, #1
 80090c6:	3a30      	subs	r2, #48	; 0x30
 80090c8:	2a09      	cmp	r2, #9
 80090ca:	d94e      	bls.n	800916a <_vfiprintf_r+0x1a6>
 80090cc:	2900      	cmp	r1, #0
 80090ce:	d111      	bne.n	80090f4 <_vfiprintf_r+0x130>
 80090d0:	e017      	b.n	8009102 <_vfiprintf_r+0x13e>
 80090d2:	3601      	adds	r6, #1
 80090d4:	e7af      	b.n	8009036 <_vfiprintf_r+0x72>
 80090d6:	9b05      	ldr	r3, [sp, #20]
 80090d8:	6822      	ldr	r2, [r4, #0]
 80090da:	1ac0      	subs	r0, r0, r3
 80090dc:	2301      	movs	r3, #1
 80090de:	4083      	lsls	r3, r0
 80090e0:	4313      	orrs	r3, r2
 80090e2:	0035      	movs	r5, r6
 80090e4:	6023      	str	r3, [r4, #0]
 80090e6:	e7cc      	b.n	8009082 <_vfiprintf_r+0xbe>
 80090e8:	9b07      	ldr	r3, [sp, #28]
 80090ea:	1d19      	adds	r1, r3, #4
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	9107      	str	r1, [sp, #28]
 80090f0:	2b00      	cmp	r3, #0
 80090f2:	db01      	blt.n	80090f8 <_vfiprintf_r+0x134>
 80090f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80090f6:	e004      	b.n	8009102 <_vfiprintf_r+0x13e>
 80090f8:	425b      	negs	r3, r3
 80090fa:	60e3      	str	r3, [r4, #12]
 80090fc:	2302      	movs	r3, #2
 80090fe:	4313      	orrs	r3, r2
 8009100:	6023      	str	r3, [r4, #0]
 8009102:	7833      	ldrb	r3, [r6, #0]
 8009104:	2b2e      	cmp	r3, #46	; 0x2e
 8009106:	d10a      	bne.n	800911e <_vfiprintf_r+0x15a>
 8009108:	7873      	ldrb	r3, [r6, #1]
 800910a:	2b2a      	cmp	r3, #42	; 0x2a
 800910c:	d135      	bne.n	800917a <_vfiprintf_r+0x1b6>
 800910e:	9b07      	ldr	r3, [sp, #28]
 8009110:	3602      	adds	r6, #2
 8009112:	1d1a      	adds	r2, r3, #4
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	9207      	str	r2, [sp, #28]
 8009118:	2b00      	cmp	r3, #0
 800911a:	db2b      	blt.n	8009174 <_vfiprintf_r+0x1b0>
 800911c:	9309      	str	r3, [sp, #36]	; 0x24
 800911e:	4d33      	ldr	r5, [pc, #204]	; (80091ec <_vfiprintf_r+0x228>)
 8009120:	2203      	movs	r2, #3
 8009122:	0028      	movs	r0, r5
 8009124:	7831      	ldrb	r1, [r6, #0]
 8009126:	f7fd fbb9 	bl	800689c <memchr>
 800912a:	2800      	cmp	r0, #0
 800912c:	d006      	beq.n	800913c <_vfiprintf_r+0x178>
 800912e:	2340      	movs	r3, #64	; 0x40
 8009130:	1b40      	subs	r0, r0, r5
 8009132:	4083      	lsls	r3, r0
 8009134:	6822      	ldr	r2, [r4, #0]
 8009136:	3601      	adds	r6, #1
 8009138:	4313      	orrs	r3, r2
 800913a:	6023      	str	r3, [r4, #0]
 800913c:	7831      	ldrb	r1, [r6, #0]
 800913e:	2206      	movs	r2, #6
 8009140:	482b      	ldr	r0, [pc, #172]	; (80091f0 <_vfiprintf_r+0x22c>)
 8009142:	1c75      	adds	r5, r6, #1
 8009144:	7621      	strb	r1, [r4, #24]
 8009146:	f7fd fba9 	bl	800689c <memchr>
 800914a:	2800      	cmp	r0, #0
 800914c:	d043      	beq.n	80091d6 <_vfiprintf_r+0x212>
 800914e:	4b29      	ldr	r3, [pc, #164]	; (80091f4 <_vfiprintf_r+0x230>)
 8009150:	2b00      	cmp	r3, #0
 8009152:	d125      	bne.n	80091a0 <_vfiprintf_r+0x1dc>
 8009154:	2207      	movs	r2, #7
 8009156:	9b07      	ldr	r3, [sp, #28]
 8009158:	3307      	adds	r3, #7
 800915a:	4393      	bics	r3, r2
 800915c:	3308      	adds	r3, #8
 800915e:	9307      	str	r3, [sp, #28]
 8009160:	6963      	ldr	r3, [r4, #20]
 8009162:	9a04      	ldr	r2, [sp, #16]
 8009164:	189b      	adds	r3, r3, r2
 8009166:	6163      	str	r3, [r4, #20]
 8009168:	e764      	b.n	8009034 <_vfiprintf_r+0x70>
 800916a:	4343      	muls	r3, r0
 800916c:	002e      	movs	r6, r5
 800916e:	2101      	movs	r1, #1
 8009170:	189b      	adds	r3, r3, r2
 8009172:	e7a6      	b.n	80090c2 <_vfiprintf_r+0xfe>
 8009174:	2301      	movs	r3, #1
 8009176:	425b      	negs	r3, r3
 8009178:	e7d0      	b.n	800911c <_vfiprintf_r+0x158>
 800917a:	2300      	movs	r3, #0
 800917c:	200a      	movs	r0, #10
 800917e:	001a      	movs	r2, r3
 8009180:	3601      	adds	r6, #1
 8009182:	6063      	str	r3, [r4, #4]
 8009184:	7831      	ldrb	r1, [r6, #0]
 8009186:	1c75      	adds	r5, r6, #1
 8009188:	3930      	subs	r1, #48	; 0x30
 800918a:	2909      	cmp	r1, #9
 800918c:	d903      	bls.n	8009196 <_vfiprintf_r+0x1d2>
 800918e:	2b00      	cmp	r3, #0
 8009190:	d0c5      	beq.n	800911e <_vfiprintf_r+0x15a>
 8009192:	9209      	str	r2, [sp, #36]	; 0x24
 8009194:	e7c3      	b.n	800911e <_vfiprintf_r+0x15a>
 8009196:	4342      	muls	r2, r0
 8009198:	002e      	movs	r6, r5
 800919a:	2301      	movs	r3, #1
 800919c:	1852      	adds	r2, r2, r1
 800919e:	e7f1      	b.n	8009184 <_vfiprintf_r+0x1c0>
 80091a0:	aa07      	add	r2, sp, #28
 80091a2:	9200      	str	r2, [sp, #0]
 80091a4:	0021      	movs	r1, r4
 80091a6:	003a      	movs	r2, r7
 80091a8:	4b13      	ldr	r3, [pc, #76]	; (80091f8 <_vfiprintf_r+0x234>)
 80091aa:	9803      	ldr	r0, [sp, #12]
 80091ac:	f7fb fd94 	bl	8004cd8 <_printf_float>
 80091b0:	9004      	str	r0, [sp, #16]
 80091b2:	9b04      	ldr	r3, [sp, #16]
 80091b4:	3301      	adds	r3, #1
 80091b6:	d1d3      	bne.n	8009160 <_vfiprintf_r+0x19c>
 80091b8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80091ba:	07db      	lsls	r3, r3, #31
 80091bc:	d405      	bmi.n	80091ca <_vfiprintf_r+0x206>
 80091be:	89bb      	ldrh	r3, [r7, #12]
 80091c0:	059b      	lsls	r3, r3, #22
 80091c2:	d402      	bmi.n	80091ca <_vfiprintf_r+0x206>
 80091c4:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80091c6:	f7fd fb68 	bl	800689a <__retarget_lock_release_recursive>
 80091ca:	89bb      	ldrh	r3, [r7, #12]
 80091cc:	065b      	lsls	r3, r3, #25
 80091ce:	d500      	bpl.n	80091d2 <_vfiprintf_r+0x20e>
 80091d0:	e71d      	b.n	800900e <_vfiprintf_r+0x4a>
 80091d2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80091d4:	e71d      	b.n	8009012 <_vfiprintf_r+0x4e>
 80091d6:	aa07      	add	r2, sp, #28
 80091d8:	9200      	str	r2, [sp, #0]
 80091da:	0021      	movs	r1, r4
 80091dc:	003a      	movs	r2, r7
 80091de:	4b06      	ldr	r3, [pc, #24]	; (80091f8 <_vfiprintf_r+0x234>)
 80091e0:	9803      	ldr	r0, [sp, #12]
 80091e2:	f7fc f83f 	bl	8005264 <_printf_i>
 80091e6:	e7e3      	b.n	80091b0 <_vfiprintf_r+0x1ec>
 80091e8:	0800980e 	.word	0x0800980e
 80091ec:	08009814 	.word	0x08009814
 80091f0:	08009818 	.word	0x08009818
 80091f4:	08004cd9 	.word	0x08004cd9
 80091f8:	08008fa1 	.word	0x08008fa1

080091fc <__swbuf_r>:
 80091fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80091fe:	0006      	movs	r6, r0
 8009200:	000d      	movs	r5, r1
 8009202:	0014      	movs	r4, r2
 8009204:	2800      	cmp	r0, #0
 8009206:	d004      	beq.n	8009212 <__swbuf_r+0x16>
 8009208:	6a03      	ldr	r3, [r0, #32]
 800920a:	2b00      	cmp	r3, #0
 800920c:	d101      	bne.n	8009212 <__swbuf_r+0x16>
 800920e:	f7fc fc13 	bl	8005a38 <__sinit>
 8009212:	69a3      	ldr	r3, [r4, #24]
 8009214:	60a3      	str	r3, [r4, #8]
 8009216:	89a3      	ldrh	r3, [r4, #12]
 8009218:	071b      	lsls	r3, r3, #28
 800921a:	d528      	bpl.n	800926e <__swbuf_r+0x72>
 800921c:	6923      	ldr	r3, [r4, #16]
 800921e:	2b00      	cmp	r3, #0
 8009220:	d025      	beq.n	800926e <__swbuf_r+0x72>
 8009222:	6923      	ldr	r3, [r4, #16]
 8009224:	6820      	ldr	r0, [r4, #0]
 8009226:	b2ef      	uxtb	r7, r5
 8009228:	1ac0      	subs	r0, r0, r3
 800922a:	6963      	ldr	r3, [r4, #20]
 800922c:	b2ed      	uxtb	r5, r5
 800922e:	4283      	cmp	r3, r0
 8009230:	dc05      	bgt.n	800923e <__swbuf_r+0x42>
 8009232:	0021      	movs	r1, r4
 8009234:	0030      	movs	r0, r6
 8009236:	f7fe fff5 	bl	8008224 <_fflush_r>
 800923a:	2800      	cmp	r0, #0
 800923c:	d11d      	bne.n	800927a <__swbuf_r+0x7e>
 800923e:	68a3      	ldr	r3, [r4, #8]
 8009240:	3001      	adds	r0, #1
 8009242:	3b01      	subs	r3, #1
 8009244:	60a3      	str	r3, [r4, #8]
 8009246:	6823      	ldr	r3, [r4, #0]
 8009248:	1c5a      	adds	r2, r3, #1
 800924a:	6022      	str	r2, [r4, #0]
 800924c:	701f      	strb	r7, [r3, #0]
 800924e:	6963      	ldr	r3, [r4, #20]
 8009250:	4283      	cmp	r3, r0
 8009252:	d004      	beq.n	800925e <__swbuf_r+0x62>
 8009254:	89a3      	ldrh	r3, [r4, #12]
 8009256:	07db      	lsls	r3, r3, #31
 8009258:	d507      	bpl.n	800926a <__swbuf_r+0x6e>
 800925a:	2d0a      	cmp	r5, #10
 800925c:	d105      	bne.n	800926a <__swbuf_r+0x6e>
 800925e:	0021      	movs	r1, r4
 8009260:	0030      	movs	r0, r6
 8009262:	f7fe ffdf 	bl	8008224 <_fflush_r>
 8009266:	2800      	cmp	r0, #0
 8009268:	d107      	bne.n	800927a <__swbuf_r+0x7e>
 800926a:	0028      	movs	r0, r5
 800926c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800926e:	0021      	movs	r1, r4
 8009270:	0030      	movs	r0, r6
 8009272:	f000 f805 	bl	8009280 <__swsetup_r>
 8009276:	2800      	cmp	r0, #0
 8009278:	d0d3      	beq.n	8009222 <__swbuf_r+0x26>
 800927a:	2501      	movs	r5, #1
 800927c:	426d      	negs	r5, r5
 800927e:	e7f4      	b.n	800926a <__swbuf_r+0x6e>

08009280 <__swsetup_r>:
 8009280:	4b30      	ldr	r3, [pc, #192]	; (8009344 <__swsetup_r+0xc4>)
 8009282:	b570      	push	{r4, r5, r6, lr}
 8009284:	0005      	movs	r5, r0
 8009286:	6818      	ldr	r0, [r3, #0]
 8009288:	000c      	movs	r4, r1
 800928a:	2800      	cmp	r0, #0
 800928c:	d004      	beq.n	8009298 <__swsetup_r+0x18>
 800928e:	6a03      	ldr	r3, [r0, #32]
 8009290:	2b00      	cmp	r3, #0
 8009292:	d101      	bne.n	8009298 <__swsetup_r+0x18>
 8009294:	f7fc fbd0 	bl	8005a38 <__sinit>
 8009298:	230c      	movs	r3, #12
 800929a:	5ee2      	ldrsh	r2, [r4, r3]
 800929c:	b293      	uxth	r3, r2
 800929e:	0711      	lsls	r1, r2, #28
 80092a0:	d423      	bmi.n	80092ea <__swsetup_r+0x6a>
 80092a2:	06d9      	lsls	r1, r3, #27
 80092a4:	d407      	bmi.n	80092b6 <__swsetup_r+0x36>
 80092a6:	2309      	movs	r3, #9
 80092a8:	2001      	movs	r0, #1
 80092aa:	602b      	str	r3, [r5, #0]
 80092ac:	3337      	adds	r3, #55	; 0x37
 80092ae:	4313      	orrs	r3, r2
 80092b0:	81a3      	strh	r3, [r4, #12]
 80092b2:	4240      	negs	r0, r0
 80092b4:	bd70      	pop	{r4, r5, r6, pc}
 80092b6:	075b      	lsls	r3, r3, #29
 80092b8:	d513      	bpl.n	80092e2 <__swsetup_r+0x62>
 80092ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80092bc:	2900      	cmp	r1, #0
 80092be:	d008      	beq.n	80092d2 <__swsetup_r+0x52>
 80092c0:	0023      	movs	r3, r4
 80092c2:	3344      	adds	r3, #68	; 0x44
 80092c4:	4299      	cmp	r1, r3
 80092c6:	d002      	beq.n	80092ce <__swsetup_r+0x4e>
 80092c8:	0028      	movs	r0, r5
 80092ca:	f7ff fdeb 	bl	8008ea4 <_free_r>
 80092ce:	2300      	movs	r3, #0
 80092d0:	6363      	str	r3, [r4, #52]	; 0x34
 80092d2:	2224      	movs	r2, #36	; 0x24
 80092d4:	89a3      	ldrh	r3, [r4, #12]
 80092d6:	4393      	bics	r3, r2
 80092d8:	81a3      	strh	r3, [r4, #12]
 80092da:	2300      	movs	r3, #0
 80092dc:	6063      	str	r3, [r4, #4]
 80092de:	6923      	ldr	r3, [r4, #16]
 80092e0:	6023      	str	r3, [r4, #0]
 80092e2:	2308      	movs	r3, #8
 80092e4:	89a2      	ldrh	r2, [r4, #12]
 80092e6:	4313      	orrs	r3, r2
 80092e8:	81a3      	strh	r3, [r4, #12]
 80092ea:	6923      	ldr	r3, [r4, #16]
 80092ec:	2b00      	cmp	r3, #0
 80092ee:	d10b      	bne.n	8009308 <__swsetup_r+0x88>
 80092f0:	21a0      	movs	r1, #160	; 0xa0
 80092f2:	2280      	movs	r2, #128	; 0x80
 80092f4:	89a3      	ldrh	r3, [r4, #12]
 80092f6:	0089      	lsls	r1, r1, #2
 80092f8:	0092      	lsls	r2, r2, #2
 80092fa:	400b      	ands	r3, r1
 80092fc:	4293      	cmp	r3, r2
 80092fe:	d003      	beq.n	8009308 <__swsetup_r+0x88>
 8009300:	0021      	movs	r1, r4
 8009302:	0028      	movs	r0, r5
 8009304:	f000 f848 	bl	8009398 <__smakebuf_r>
 8009308:	220c      	movs	r2, #12
 800930a:	5ea3      	ldrsh	r3, [r4, r2]
 800930c:	2001      	movs	r0, #1
 800930e:	001a      	movs	r2, r3
 8009310:	b299      	uxth	r1, r3
 8009312:	4002      	ands	r2, r0
 8009314:	4203      	tst	r3, r0
 8009316:	d00f      	beq.n	8009338 <__swsetup_r+0xb8>
 8009318:	2200      	movs	r2, #0
 800931a:	60a2      	str	r2, [r4, #8]
 800931c:	6962      	ldr	r2, [r4, #20]
 800931e:	4252      	negs	r2, r2
 8009320:	61a2      	str	r2, [r4, #24]
 8009322:	2000      	movs	r0, #0
 8009324:	6922      	ldr	r2, [r4, #16]
 8009326:	4282      	cmp	r2, r0
 8009328:	d1c4      	bne.n	80092b4 <__swsetup_r+0x34>
 800932a:	0609      	lsls	r1, r1, #24
 800932c:	d5c2      	bpl.n	80092b4 <__swsetup_r+0x34>
 800932e:	2240      	movs	r2, #64	; 0x40
 8009330:	4313      	orrs	r3, r2
 8009332:	81a3      	strh	r3, [r4, #12]
 8009334:	3801      	subs	r0, #1
 8009336:	e7bd      	b.n	80092b4 <__swsetup_r+0x34>
 8009338:	0788      	lsls	r0, r1, #30
 800933a:	d400      	bmi.n	800933e <__swsetup_r+0xbe>
 800933c:	6962      	ldr	r2, [r4, #20]
 800933e:	60a2      	str	r2, [r4, #8]
 8009340:	e7ef      	b.n	8009322 <__swsetup_r+0xa2>
 8009342:	46c0      	nop			; (mov r8, r8)
 8009344:	200001d0 	.word	0x200001d0

08009348 <__swhatbuf_r>:
 8009348:	b570      	push	{r4, r5, r6, lr}
 800934a:	000e      	movs	r6, r1
 800934c:	001d      	movs	r5, r3
 800934e:	230e      	movs	r3, #14
 8009350:	5ec9      	ldrsh	r1, [r1, r3]
 8009352:	0014      	movs	r4, r2
 8009354:	b096      	sub	sp, #88	; 0x58
 8009356:	2900      	cmp	r1, #0
 8009358:	da0c      	bge.n	8009374 <__swhatbuf_r+0x2c>
 800935a:	89b2      	ldrh	r2, [r6, #12]
 800935c:	2380      	movs	r3, #128	; 0x80
 800935e:	0011      	movs	r1, r2
 8009360:	4019      	ands	r1, r3
 8009362:	421a      	tst	r2, r3
 8009364:	d013      	beq.n	800938e <__swhatbuf_r+0x46>
 8009366:	2100      	movs	r1, #0
 8009368:	3b40      	subs	r3, #64	; 0x40
 800936a:	2000      	movs	r0, #0
 800936c:	6029      	str	r1, [r5, #0]
 800936e:	6023      	str	r3, [r4, #0]
 8009370:	b016      	add	sp, #88	; 0x58
 8009372:	bd70      	pop	{r4, r5, r6, pc}
 8009374:	466a      	mov	r2, sp
 8009376:	f000 f84d 	bl	8009414 <_fstat_r>
 800937a:	2800      	cmp	r0, #0
 800937c:	dbed      	blt.n	800935a <__swhatbuf_r+0x12>
 800937e:	23f0      	movs	r3, #240	; 0xf0
 8009380:	9901      	ldr	r1, [sp, #4]
 8009382:	021b      	lsls	r3, r3, #8
 8009384:	4019      	ands	r1, r3
 8009386:	4b03      	ldr	r3, [pc, #12]	; (8009394 <__swhatbuf_r+0x4c>)
 8009388:	18c9      	adds	r1, r1, r3
 800938a:	424b      	negs	r3, r1
 800938c:	4159      	adcs	r1, r3
 800938e:	2380      	movs	r3, #128	; 0x80
 8009390:	00db      	lsls	r3, r3, #3
 8009392:	e7ea      	b.n	800936a <__swhatbuf_r+0x22>
 8009394:	ffffe000 	.word	0xffffe000

08009398 <__smakebuf_r>:
 8009398:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800939a:	2602      	movs	r6, #2
 800939c:	898b      	ldrh	r3, [r1, #12]
 800939e:	0005      	movs	r5, r0
 80093a0:	000c      	movs	r4, r1
 80093a2:	4233      	tst	r3, r6
 80093a4:	d006      	beq.n	80093b4 <__smakebuf_r+0x1c>
 80093a6:	0023      	movs	r3, r4
 80093a8:	3347      	adds	r3, #71	; 0x47
 80093aa:	6023      	str	r3, [r4, #0]
 80093ac:	6123      	str	r3, [r4, #16]
 80093ae:	2301      	movs	r3, #1
 80093b0:	6163      	str	r3, [r4, #20]
 80093b2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80093b4:	466a      	mov	r2, sp
 80093b6:	ab01      	add	r3, sp, #4
 80093b8:	f7ff ffc6 	bl	8009348 <__swhatbuf_r>
 80093bc:	9900      	ldr	r1, [sp, #0]
 80093be:	0007      	movs	r7, r0
 80093c0:	0028      	movs	r0, r5
 80093c2:	f7fe fe11 	bl	8007fe8 <_malloc_r>
 80093c6:	2800      	cmp	r0, #0
 80093c8:	d108      	bne.n	80093dc <__smakebuf_r+0x44>
 80093ca:	220c      	movs	r2, #12
 80093cc:	5ea3      	ldrsh	r3, [r4, r2]
 80093ce:	059a      	lsls	r2, r3, #22
 80093d0:	d4ef      	bmi.n	80093b2 <__smakebuf_r+0x1a>
 80093d2:	2203      	movs	r2, #3
 80093d4:	4393      	bics	r3, r2
 80093d6:	431e      	orrs	r6, r3
 80093d8:	81a6      	strh	r6, [r4, #12]
 80093da:	e7e4      	b.n	80093a6 <__smakebuf_r+0xe>
 80093dc:	2380      	movs	r3, #128	; 0x80
 80093de:	89a2      	ldrh	r2, [r4, #12]
 80093e0:	6020      	str	r0, [r4, #0]
 80093e2:	4313      	orrs	r3, r2
 80093e4:	81a3      	strh	r3, [r4, #12]
 80093e6:	9b00      	ldr	r3, [sp, #0]
 80093e8:	6120      	str	r0, [r4, #16]
 80093ea:	6163      	str	r3, [r4, #20]
 80093ec:	9b01      	ldr	r3, [sp, #4]
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	d00c      	beq.n	800940c <__smakebuf_r+0x74>
 80093f2:	0028      	movs	r0, r5
 80093f4:	230e      	movs	r3, #14
 80093f6:	5ee1      	ldrsh	r1, [r4, r3]
 80093f8:	f000 f81e 	bl	8009438 <_isatty_r>
 80093fc:	2800      	cmp	r0, #0
 80093fe:	d005      	beq.n	800940c <__smakebuf_r+0x74>
 8009400:	2303      	movs	r3, #3
 8009402:	89a2      	ldrh	r2, [r4, #12]
 8009404:	439a      	bics	r2, r3
 8009406:	3b02      	subs	r3, #2
 8009408:	4313      	orrs	r3, r2
 800940a:	81a3      	strh	r3, [r4, #12]
 800940c:	89a3      	ldrh	r3, [r4, #12]
 800940e:	433b      	orrs	r3, r7
 8009410:	81a3      	strh	r3, [r4, #12]
 8009412:	e7ce      	b.n	80093b2 <__smakebuf_r+0x1a>

08009414 <_fstat_r>:
 8009414:	2300      	movs	r3, #0
 8009416:	b570      	push	{r4, r5, r6, lr}
 8009418:	4d06      	ldr	r5, [pc, #24]	; (8009434 <_fstat_r+0x20>)
 800941a:	0004      	movs	r4, r0
 800941c:	0008      	movs	r0, r1
 800941e:	0011      	movs	r1, r2
 8009420:	602b      	str	r3, [r5, #0]
 8009422:	f7f9 fb19 	bl	8002a58 <_fstat>
 8009426:	1c43      	adds	r3, r0, #1
 8009428:	d103      	bne.n	8009432 <_fstat_r+0x1e>
 800942a:	682b      	ldr	r3, [r5, #0]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d000      	beq.n	8009432 <_fstat_r+0x1e>
 8009430:	6023      	str	r3, [r4, #0]
 8009432:	bd70      	pop	{r4, r5, r6, pc}
 8009434:	2000040c 	.word	0x2000040c

08009438 <_isatty_r>:
 8009438:	2300      	movs	r3, #0
 800943a:	b570      	push	{r4, r5, r6, lr}
 800943c:	4d06      	ldr	r5, [pc, #24]	; (8009458 <_isatty_r+0x20>)
 800943e:	0004      	movs	r4, r0
 8009440:	0008      	movs	r0, r1
 8009442:	602b      	str	r3, [r5, #0]
 8009444:	f7f9 fb16 	bl	8002a74 <_isatty>
 8009448:	1c43      	adds	r3, r0, #1
 800944a:	d103      	bne.n	8009454 <_isatty_r+0x1c>
 800944c:	682b      	ldr	r3, [r5, #0]
 800944e:	2b00      	cmp	r3, #0
 8009450:	d000      	beq.n	8009454 <_isatty_r+0x1c>
 8009452:	6023      	str	r3, [r4, #0]
 8009454:	bd70      	pop	{r4, r5, r6, pc}
 8009456:	46c0      	nop			; (mov r8, r8)
 8009458:	2000040c 	.word	0x2000040c

0800945c <_raise_r>:
 800945c:	b570      	push	{r4, r5, r6, lr}
 800945e:	0004      	movs	r4, r0
 8009460:	000d      	movs	r5, r1
 8009462:	291f      	cmp	r1, #31
 8009464:	d904      	bls.n	8009470 <_raise_r+0x14>
 8009466:	2316      	movs	r3, #22
 8009468:	6003      	str	r3, [r0, #0]
 800946a:	2001      	movs	r0, #1
 800946c:	4240      	negs	r0, r0
 800946e:	bd70      	pop	{r4, r5, r6, pc}
 8009470:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8009472:	2b00      	cmp	r3, #0
 8009474:	d004      	beq.n	8009480 <_raise_r+0x24>
 8009476:	008a      	lsls	r2, r1, #2
 8009478:	189b      	adds	r3, r3, r2
 800947a:	681a      	ldr	r2, [r3, #0]
 800947c:	2a00      	cmp	r2, #0
 800947e:	d108      	bne.n	8009492 <_raise_r+0x36>
 8009480:	0020      	movs	r0, r4
 8009482:	f000 f831 	bl	80094e8 <_getpid_r>
 8009486:	002a      	movs	r2, r5
 8009488:	0001      	movs	r1, r0
 800948a:	0020      	movs	r0, r4
 800948c:	f000 f81a 	bl	80094c4 <_kill_r>
 8009490:	e7ed      	b.n	800946e <_raise_r+0x12>
 8009492:	2000      	movs	r0, #0
 8009494:	2a01      	cmp	r2, #1
 8009496:	d0ea      	beq.n	800946e <_raise_r+0x12>
 8009498:	1c51      	adds	r1, r2, #1
 800949a:	d103      	bne.n	80094a4 <_raise_r+0x48>
 800949c:	2316      	movs	r3, #22
 800949e:	3001      	adds	r0, #1
 80094a0:	6023      	str	r3, [r4, #0]
 80094a2:	e7e4      	b.n	800946e <_raise_r+0x12>
 80094a4:	2400      	movs	r4, #0
 80094a6:	0028      	movs	r0, r5
 80094a8:	601c      	str	r4, [r3, #0]
 80094aa:	4790      	blx	r2
 80094ac:	0020      	movs	r0, r4
 80094ae:	e7de      	b.n	800946e <_raise_r+0x12>

080094b0 <raise>:
 80094b0:	b510      	push	{r4, lr}
 80094b2:	4b03      	ldr	r3, [pc, #12]	; (80094c0 <raise+0x10>)
 80094b4:	0001      	movs	r1, r0
 80094b6:	6818      	ldr	r0, [r3, #0]
 80094b8:	f7ff ffd0 	bl	800945c <_raise_r>
 80094bc:	bd10      	pop	{r4, pc}
 80094be:	46c0      	nop			; (mov r8, r8)
 80094c0:	200001d0 	.word	0x200001d0

080094c4 <_kill_r>:
 80094c4:	2300      	movs	r3, #0
 80094c6:	b570      	push	{r4, r5, r6, lr}
 80094c8:	4d06      	ldr	r5, [pc, #24]	; (80094e4 <_kill_r+0x20>)
 80094ca:	0004      	movs	r4, r0
 80094cc:	0008      	movs	r0, r1
 80094ce:	0011      	movs	r1, r2
 80094d0:	602b      	str	r3, [r5, #0]
 80094d2:	f7f9 fa62 	bl	800299a <_kill>
 80094d6:	1c43      	adds	r3, r0, #1
 80094d8:	d103      	bne.n	80094e2 <_kill_r+0x1e>
 80094da:	682b      	ldr	r3, [r5, #0]
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d000      	beq.n	80094e2 <_kill_r+0x1e>
 80094e0:	6023      	str	r3, [r4, #0]
 80094e2:	bd70      	pop	{r4, r5, r6, pc}
 80094e4:	2000040c 	.word	0x2000040c

080094e8 <_getpid_r>:
 80094e8:	b510      	push	{r4, lr}
 80094ea:	f7f9 fa50 	bl	800298e <_getpid>
 80094ee:	bd10      	pop	{r4, pc}

080094f0 <_init>:
 80094f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094f2:	46c0      	nop			; (mov r8, r8)
 80094f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80094f6:	bc08      	pop	{r3}
 80094f8:	469e      	mov	lr, r3
 80094fa:	4770      	bx	lr

080094fc <_fini>:
 80094fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094fe:	46c0      	nop			; (mov r8, r8)
 8009500:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009502:	bc08      	pop	{r3}
 8009504:	469e      	mov	lr, r3
 8009506:	4770      	bx	lr
